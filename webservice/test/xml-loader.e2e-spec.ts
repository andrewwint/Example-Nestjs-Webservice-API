import { Test, TestingModule } from '@nestjs/testing';
import * as request from 'supertest';
import * as bodyParser from 'body-parser';
import { AppModule } from '../src/app.module';
import { LoadXmlFileDTO } from '@truechoice/xml-loader/dto/load-xml-file.dto';
import { INestApplication } from '@nestjs/common';
import * as path from 'path';
import * as fs from 'fs';

describe('XmlLoaderController (e2e)', () => {
  let app: INestApplication;

  beforeAll(async () => {
    jest.setTimeout(90000);
  });

  beforeEach(async () => {
    const moduleFixture: TestingModule = await Test.createTestingModule({
      imports: [AppModule]
    }).compile();

    app = moduleFixture.createNestApplication();

    const optionsCors = {
      origin: '*',
      methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
      preflightContinue: false,
      optionsSuccessStatus: 200,
      credentials: false
    };

    app.use(bodyParser.json({ limit: '2mb' }));
    app.use(bodyParser.urlencoded({ limit: '2mb', extended: true }));
    app.enableCors(optionsCors);
    await app.init();
  });

  describe('importXml (e2e)', () => {
    it('/xml-loader/xml (POST)', async () => {
      // Use VS Code's key command `alt + z` to pervent line wrap for the base64 encoded files
      const xml: LoadXmlFileDTO = {
        server: 'dev',
        deleteXml: 'client',
        payload:
          '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE client SYSTEM "object.dtd">
<client name="e2e_prototype">
    <game name="e2e_prototype" fixed="false">
        <attribute name="color" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="red">
                <language key="description" locale="en"><![CDATA[<img src="assets/tooltips/color_red.jpg">]]>Electric crimson or red is a color whose hue resembles that of blood, or a ruby, and is of the long-wave extreme of the visible spectrum. Red is also a primary color. The hex for this color is #FF003F and the first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Electric Crimson</language>
                <language key="icon" locale="en">icon-color-red</language>
                <language key="message" locale="en">color||Color||Electric crimson or red has always been one of your favorite colors and you will always choose that color over any other!||icon-color-red</language>
            </level>
            <level value="orange">
                <language key="description" locale="en">Orange is a color between red and yellow that is like the color of fire and carrots. It is also a fruit that grows in California and Florida. The hex for this color is #FF9966 and the first know word usage was in 1542.</language>
                <language key="displayname" locale="en">Orange</language>
                <language key="icon" locale="en">icon-color-orange</language>
                <language key="message" locale="en">color||Color||Orange has always been one of your favorite colors and you will always choose that color over any other!||icon-color-orange</language>
                <language key="message" locale="en">color||Color||Orange has always been one of your favorite colors and you will always choose that color over any other!||icon-color-orange</language>
            </level>
            <level value="yellow">
                <language key="description" locale="en">Yellow is having the color of the sun, butter, or ripe lemons. Yellow is also a primary color. It can be mixed with the other 2 primary colors to make lots of other colors but no colors mixed together can make yellow. The hex for this color is #ffd500 and the first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Lemon Yellow</language>
                <language key="icon" locale="en">icon-color-yellow</language>
                <language key="message" locale="en">color||Color||Yellow has always been one of your favorite colors and you will always choose that color over any other!||icon-color-yellow</language>
            </level>
            <level value="green">
                <language key="description" locale="en">Green is a color whose hue is between yellow and blue and is associated with growing fresh grass, an emerald, Spring, evil, or envy. A person can also be "green with envy." The "Wicked Witch of the West" was green. The hex for this color is#009900 and the first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Green</language>
                <language key="icon" locale="en">icon-color-green</language>
                <language key="message" locale="en">color||Color||Green has always been one of your favorite colors and you will always choose that color over any other!||icon-color-green</language>
            </level>
            <level value="gray">
                <language key="description" locale="en">Gray is a series of neutral colors ranging between black and white and is often the color associated with age, usually depicted gray or silver hair. Also Gray is also the color associated with cloudy days and clouds filled with rain, hence the saying, "it's a gray day today." The hex for this color is #848482 and the first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Battleship Gray</language>
                <language key="icon" locale="en">icon-color-gray</language>
                <language key="message" locale="en">color||Color||Gray has always been one of your favorite colors and you will always choose that color over any other!||icon-color-gray</language>
            </level>
            <level value="blue">
                <language key="description" locale="en">Blue is a color whose hue is that of the clear sky, water, and is the portion of the color spectrum lying between green and violet. Blue is also a primary color. It can be mixed with the other 2 primary colors to make lots of other colors but no colors mixed together can make blue. The hex for this color is #007af3 and the first known word usage was before the 13th century.</language>
                <language key="displayname" locale="en">Blue</language>
                <language key="icon" locale="en">icon-color-blue</language>
                <language key="message" locale="en">color||Color||Blue has always been one of your favorite colors and you will always choose that color over any other!||icon-color-blue</language>
            </level>
            <level value="purple">
                <language key="description" locale="en">Purple is any of various colors that fall about midway between red and blue in hue, an is often the color worn as an emblem of rank or authority. The hex for this color is #4b0082 and the first known word usage was before the 15th century.</language>
                <language key="displayname" locale="en">Purple</language>
                <language key="icon" locale="en">icon-color-purple</language>
                <language key="message" locale="en">color||Color||Purple has always been one of your favorite colors and you will always choose that color over any other!||icon-color-purple</language>
            </level>
            <level value="black">
                <language key="description" locale="en">Black is a word that has many, many meanings. Examples are typically associated with evil as in "black magic", a VERY bad mood, having the very dark color of coal, the night sky, something served without cream or milk as in "black coffee", or even used to describe humor that deals with subjects which are usually regarded as very serious or unpleasant. To make the color black, mix all of the other colors together and voila!, you get a mess, or black. The hex for this color is #000000 and the first known usage was before 12th century.</language>
                <language key="displayname" locale="en">Starry Night</language>
                <language key="icon" locale="en">icon-color-black</language>
                <language key="message" locale="en">color||Color||Starry night has always been one of your favorite colors and you will always choose that color over any other!||icon-color-black</language>
            </level>
            <level value="maroon">
                <language key="description" locale="en">Maroon is a variant of the color red and is considered a dark red color. The word maroon comes from the French word maroon which means "chestnut".  Vajrayana Buddhist monks wear robes that are colored various shades of maroon. To make maroon start with red, add some blue and a little black and there you have it! Crayola introduced the maroon crayon to their pack in 1949. The crayola crayon hex for this color is #C32148 and the first recorded use of maroon as a color name in English was in 1789.</language>
                <language key="displayname" locale="en">Maroon</language>
                <language key="icon" locale="en">icon-color-maroon</language>
                <language key="message" locale="en">color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Maroon&lt;/a&gt; has always been one of &lt;u&gt;your favorite&lt;/u&gt; colors and you will always choose that color over any other!||icon-color-maroon</language>
            </level>
            <language key="description" locale="en">Color is defined as the phenomenon of light (as red, brown, pink, or gray) or visual perception that enables one to differentiate otherwise identical objects.</language>
            <language key="displayname" locale="en">Which color do you prefer?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate a GREATER or LESSER preference for the colors shown.</language>
            <language key="leastpreferred" locale="en">Prefer Less</language>
            <language key="mostpreferred" locale="en">Prefer More</language>
            <language key="icon" locale="en">icon-color</language>
            <language key="group" locale="en"/>
            <language key="shortname.levels" locale="en">Color</language>
            <language key="shortname" locale="en">Color</language>
            <language key="message" locale="en">color||Electric crimson or red has always been one of your favorite colors and you will always choose that color over any other!||icon-color-red</language>
        </attribute>
        <attribute name="basepay" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="number" unacceptables-allowed="true">
            <level value="0">
                <language key="displayname" locale="en">0%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||icon-price-med</language>
            </level>
            <level value=".5">
                <language key="displayname" locale="en">0.5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;25 per month.||icon-price-med</language>
            </level>
            <level value="1">
                <language key="displayname" locale="en">1%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;50 per month.||icon-price-med</language>
            </level>
            <level value="1.5">
                <language key="displayname" locale="en">1.5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;75 per month.||icon-price-med</language>
            </level>
            <level value="2">
                <language key="displayname" locale="en">2%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;100 per month.||icon-price-med</language>
            </level>
            <level value="2.5">
                <language key="displayname" locale="en">2.5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
            </level>
            <level value="3">
                <language key="displayname" locale="en">3%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            </level>
            <level value="3.5">
                <language key="displayname" locale="en">3.5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
            </level>
            <level value="4">
                <language key="displayname" locale="en">4%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            </level>
            <level value="5">
                <language key="displayname" locale="en">5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            </level>
            <language key="displayname" locale="en">What base pay increase do you prefer?</language>
            <language key="group" locale="en"/>
            <language key="shortname.levels" locale="en">Base Pay</language>
            <language key="shortname" locale="en">Base Pay</language>
            <language key="instructions" locale="en">Move the slider to the option you prefer.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">This question is asking you to move the horizontal slider to the option you most prefer.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="minicon" locale="en">icon-price-low</language>
            <language key="maxicon" locale="en">icon-price-high</language>
            <language key="mindisplayname" locale="en">0% Increase</language>
            <language key="maxdisplayname" locale="en">5% Increase</language>
            <language key="mindescription" locale="en">0% Increase</language>
            <language key="maxdescription" locale="en">5% Increase</language>
            <language key="icon" locale="en">assets/icons/large/noindicator/basepay.png</language>
            <profile key="groupwidget" value="range-scale-single-thumb-large-icon"/>
        </attribute>
        <attribute name="size" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="small">
                <language key="description" locale="en">Small, in this case, refers to having comparatively little size or slight dimensions. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Small</language>
                <language key="icon" locale="en">icon-size-small</language>
                <language key="message" locale="en">size||Size||You tend to like things that are small and compact in nature.||icon-size-small</language>
            </level>
            <level value="medium">
                <language key="description" locale="en">Medium, in this case, refers to something in a middle position. The first known word usage was in 1589.</language>
                <language key="displayname" locale="en">Medium</language>
                <language key="icon" locale="en">icon-size-medium</language>
                <language key="message" locale="en">size||Size||You tend to gravitate toward things that are medium in size - not too big and not too small.||icon-size-medium</language>
            </level>
            <level value="large">
                <language key="description" locale="en">Large, in this case, refers to exceeding most other things of like kind especially in quantity or size. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Large</language>
                <language key="icon" locale="en">icon-size-large</language>
                <language key="message" locale="en">size||Size||You like things that are big and large in size or quantity.||icon-size-large</language>
            </level>
            <level value="xlarge">
                <language key="description" locale="en">Extra large, in this case, refers to large or great in dimensions, bulk, or extent. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Extra Large</language>
                <language key="icon" locale="en">icon-size-xlarge</language>
                <language key="message" locale="en">size||Size||You like things that are extra large! The bigger the better and more the merrier!||icon-size-xlarge</language>
            </level>
            <language key="description" locale="en">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
            <language key="displayname" locale="en">What size should your product be?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the sizes shown.</language>
            <language key="icon" locale="en">icon-size</language>
            <language key="intro.title" locale="en">Size</language>
            <language key="intro.body" locale="en">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image</language>
            <language key="group" locale="en"/>
            <language key="shortname.levels" locale="en">&lt;u&gt;Size&lt;/u&gt;</language>
            <language key="shortname" locale="en">Size</language>
            <language key="message" locale="en">size||You like things that are extra large! The bigger the better and more the merrier!||icon-size-xlarge</language>
            <profile key="implicitwarning" type="String" value="descending"/>
        </attribute>
        <attribute name="weight" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">My product should be exceedingly light and should weigh next to nothing or be light as air.</language>
                <language key="displayname" locale="en">0 or Light as air</language>
                <language key="icon" locale="en">icon-weight-0</language>
                <language key="message" locale="en">weight||Weight||You like things that are very light and weigh next to nothing or light as air!||icon-weight-0</language>
            </level>
            <level value="5">
                <language key="description" locale="en">My product should weigh no more than 5 pounds because I am going to carry it in my arms or tote it around in my backpack for long enough to be a problem if it weighs more.</language>
                <language key="displayname" locale="en">5 Pounds</language>
                <language key="icon" locale="en">icon-weight-5</language>
                <language key="message" locale="en">weight||Weight||The maximum weight you will tolerate carrying for any length of time is 5 pounds - and even that is a stretch!||icon-weight-5</language>
            </level>
            <level value="10">
                <language key="description" locale="en">My product can weigh up to 10 pounds because I am going to carry it in my backpack or in my carry on luggage so I will not be directly stressed by the weight.</language>
                <language key="displayname" locale="en">10 Pounds</language>
                <language key="icon" locale="en">icon-weight-10</language>
                <language key="message" locale="en">weight||Weight||You're ok with a maximum weight of 10 pounds because you have no intention of carrying this around, except in a backpack or in carry on luggage.||icon-weight-10</language>
            </level>
            <level value="15">
                <language key="description" locale="en">My product can weigh 15 pounds or more because I am never going to be carrying it. It will sit on my desk either at work or home.</language>
                <language key="displayname" locale="en">15 Pounds</language>
                <language key="icon" locale="en">icon-weight-15</language>
                <language key="message" locale="en">weight||Weight||You're ok with a maximum weight of 15 pounds or more because you have not intention of every picking it up.||icon-weight-15</language>
            </level>
            <language key="description" locale="en">Weight is the standard or established amount that a thing should weigh. The first known word usage was in 1647.</language>
            <language key="displayname" locale="en">How much should your product weigh?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the weights shown.</language>
            <language key="icon" locale="en">icon-weight</language>
            <language key="group" locale="en"/>
            <language key="shortname.levels" locale="en">Weight</language>
            <language key="shortname" locale="en">Weight</language>
            <language key="message" locale="en">weight||You're ok with a maximum weight of 15 pounds or more because you have not intention of every picking it up.||icon-weight-15</language>
        </attribute>
        <attribute name="intuition" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="completely intuitive">
                <language key="description" locale="en">No education is needed. You can use this product with little or no instruction.</language>
                <language key="displayname" locale="en">Completely intuitive</language>
                <language key="icon" locale="en">icon-intuition-completely-intuitive</language>
                <language key="message" locale="en">intuition||Product intuition||You like things that are completely intuitive, are really, really easy and need no instruction to use.||icon-intuition-completely-intuitive</language>
            </level>
            <level value="grade school">
                <language key="description" locale="en">Someone with a grade school education will be able to use this product.</language>
                <language key="displayname" locale="en">Grade School</language>
                <language key="icon" locale="en">icon-intuition-grade-school</language>
                <language key="message" locale="en">intuition||Product intuition||You like things that are so easy that someone with a grade school education can figure it out. A very little bit of instruction is ok.||icon-intuition-grade-school</language>
            </level>
            <level value="junior high school">
                <language key="description" locale="en">Someone with a junior high school education can use this product.</language>
                <language key="displayname" locale="en">Junior High school</language>
                <language key="icon" locale="en">icon-intuition-junior-high-school</language>
                <language key="message" locale="en">intuition||Product intuition||You like things that are easy and someone with a junior high school education can use it. Some instruction is ok, but you don't want to have to ask your kids for help.||icon-intuition-junior-high-school</language>
            </level>
            <level value="high school">
                <language key="description" locale="en">You need at least a high school education to use this product.</language>
                <language key="displayname" locale="en">High School</language>
                <language key="icon" locale="en">icon-intuition-high-school</language>
                <language key="message" locale="en">intuition||Product intuition||You like things to be a bit challenging and a high school education is about as much as you need to use it. Easy instructions are ok, but you're glad there are kids around, just in case.||icon-intuition-high-school</language>
            </level>
            <level value="college">
                <language key="description" locale="en">You need a college degree to use this product.</language>
                <language key="displayname" locale="en">College</language>
                <language key="icon" locale="en">icon-intuition-college</language>
                <language key="message" locale="en">intuition||Product intuition||You love a challenge but will need a college degree to figure it out. For most people instructions are a must!||icon-intuition-college</language>
            </level>
            <level value="graduate degree">
                <language key="description" locale="en">You need a graduate degree to use this product.</language>
                <language key="displayname" locale="en">Graduate School</language>
                <language key="icon" locale="en">icon-intuition-graduate-degree</language>
                <language key="message" locale="en">intuition||Product intuition||You love to be challenged and are glad you have a graduate degree to figure it out because without one, this would be no fun at all!||icon-intuition-graduate-degree</language>
            </level>
            <level value="doctorate">
                <language key="description" locale="en">Without a doctorate you'll never figure this product out.</language>
                <language key="displayname" locale="en">Doctorate</language>
                <language key="icon" locale="en">icon-intuition-doctorate</language>
                <language key="message" locale="en">intuition||Product intuition||You LOVE a wicked challenge and because you have a doctorate, or very smart friends, you think this is great fun!. Even the instructions are unintelligible. What could be better!||icon-intuition-doctorate</language>
            </level>
            <language key="description" locale="en">In a perfect world, your product will be easy for anyone to use and figure out, but this is not a perfect world. How intuitive is your product?</language>
            <language key="displayname" locale="en">How intuitive does your product need to be?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate a GREATER or LESSER preference for the level of intuition shown.</language>
            <language key="leastpreferred" locale="en">Prefer Less</language>
            <language key="mostpreferred" locale="en">Prefer More</language>
            <language key="icon" locale="en">icon-intuition</language>
            <language key="group" locale="en"/>
            <language key="shortname.levels" locale="en">Product intuition</language>
            <language key="shortname" locale="en">Product intuition</language>
        </attribute>
        <attribute name="delivery" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="same day">
                <language key="description" locale="en">You want same-day delivery for time-sensitive stuff because it's really important.</language>
                <language key="displayname" locale="en">Same day</language>
                <language key="icon" locale="en">icon-delivery-same-day</language>
                <language key="message" locale="en">delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||icon-delivery-same-day</language>
            </level>
            <level value="next day">
                <language key="description" locale="en">You can wait for next-day delivery for your important stuff because it'll still come in time.</language>
                <language key="displayname" locale="en">Next day</language>
                <language key="icon" locale="en">icon-delivery-next-day</language>
                <language key="message" locale="en">delivery||Delivery||You can wait for next-day delivery for your important stuff because it'll still come in time.||icon-delivery-next-day</language>
            </level>
            <level value="3 days">
                <language key="description" locale="en">You're good with waiting a few extra days for delivery.</language>
                <language key="displayname" locale="en">3 days</language>
                <language key="icon" locale="en">icon-delivery-3-days</language>
                <language key="message" locale="en">delivery||Delivery||You're good with waiting a few extra days for delivery.||icon-delivery-3-days</language>
            </level>
            <level value="5 days">
                <language key="description" locale="en">You can wait 5 days for delivery, but just barely.</language>
                <language key="displayname" locale="en">5 days</language>
                <language key="icon" locale="en">icon-delivery-5-days</language>
                <language key="message" locale="en">delivery||Delivery||You can wait 5 days for delivery, but just barely.||icon-delivery-5-days</language>
            </level>
            <level value="7 days">
                <language key="description" locale="en">You're not so impatient that 7 days will kill you to wait for delivery.</language>
                <language key="displayname" locale="en">7 days</language>
                <language key="icon" locale="en">icon-delivery-7-days</language>
                <language key="message" locale="en">delivery||Delivery||You're not so impatient that 7 days will kill you to wait for delivery.||icon-delivery-7-days</language>
            </level>
            <language key="description" locale="en">For some people, speed is of the essence and for others, they can wait until the cows come home!  So the question is, how impatient are you?</language>
            <language key="displayname" locale="en">How fast do you want your product delivered to you?</language>
            <language key="icon" locale="en">icon-delivery</language>
            <language key="instructions" locale="en">Select the delivery speed most important to you.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en"><![CDATA[<p>This question asks you to choose your top preference from a set of several options.
                <br/>
                <br/>
                Click on or tap your top selection.
            </p>]]>
            </language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="group" locale="en"/>
            <language key="shortname.levels" locale="en">Delivery</language>
            <language key="shortname" locale="en">Delivery</language>
            <language key="message" locale="en">delivery||You're not so impatient that 7 days will kill you to wait for delivery.||icon-delivery-7-days</language>
            <profile key="groupwidget" value="single-select"/>
            <profile key="groupwidget.showoptiontext" type="String" value="true"/>
        </attribute>
        <attribute name="price" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="number" unacceptables-allowed="true">
            <level value="0">
                <language key="description" locale="en">I am not willing to spend any amount of money per month.</language>
                <language key="displayname" locale="en">&#36;0</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You want to spend no money at all and like things best that are free!||icon-price-med</language>
            </level>
            <level value="25">
                <language key="description" locale="en">I am willing to spend up to &#36;25 per month.</language>
                <language key="displayname" locale="en">&#36;25</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;25 per month.||icon-price-med</language>
            </level>
            <level value="50">
                <language key="description" locale="en">I am willing to spend up to &#36;50 per month.</language>
                <language key="displayname" locale="en">&#36;50</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;50 per month.||icon-price-med</language>
            </level>
            <level value="75">
                <language key="description" locale="en">I am willing to spend up to &#36;75 per month.</language>
                <language key="displayname" locale="en">&#36;75</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;75 per month.||icon-price-med</language>
            </level>
            <level value="100">
                <language key="description" locale="en">I am willing to spend up to &#36;100 per month.</language>
                <language key="displayname" locale="en">&#36;100</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;100 per month.||icon-price-med</language>
            </level>
            <level value="125">
                <language key="description" locale="en">I am willing to spend up to &#36;125 per month.</language>
                <language key="displayname" locale="en">&#36;125</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
            </level>
            <level value="150">
                <language key="description" locale="en">I am willing to spend up to &#36;150 per month.</language>
                <language key="displayname" locale="en">&#36;150</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            </level>
            <level value="175">
                <language key="description" locale="en">I am willing to spend up to &#36;175 per month.</language>
                <language key="displayname" locale="en">&#36;175</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;175 per month.||icon-price-med</language>
            </level>
            <level value="200">
                <language key="description" locale="en">I am willing to spend up to &#36;200 per month.</language>
                <language key="displayname" locale="en">&#36;200</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;200 per month, but no more than that!||icon-price-med</language>
            </level>
            <language key="description" locale="en">This is the amount in dollars that you would like to spend per month.</language>
            <language key="displayname" locale="en">What is the amount of money that you would be willing to spend each month?</language>
            <language key="group" locale="en"/>
            <language key="shortname.levels" locale="en">Price</language>
            <language key="shortname" locale="en">Price</language>
            <language key="minicon" locale="en">icon-price-low</language>
            <language key="maxicon" locale="en">icon-price-high</language>
            <language key="mindescription" locale="en">No monthly premium paid for prescription drug coverage.</language>
            <language key="maxdescription" locale="en">$200 monthly premium paid for prescription drug coverage.</language>
            <language key="icon" locale="en">assets/icons/price.png</language>
            <language key="instructions" locale="en">Use the controls to indicate your minimum and maximum prices.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">This question asks you to choose your top preference from a set of several options. Click on the single left or right arrow to incrementally adjust the option. Clicking on the double right arrow will jump to the highest option of $200. Clicking on the double left arrow will jump to the lowest option multiple of $0.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="message" locale="en">price||You are willing to spend up to &#36;200 per month, but no more than that!||icon-price-med</language>
            <profile key="horizontalslider" value="price"/>
            <profile key="groupwidget" value="counter"/>
        </attribute>
        <attribute name="Hidden Price" implicit="descending" must-have-allowed="false" skip-allowed="false" type="price" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">0</language>
                <language key="displayname" locale="en">0</language>
                <language key="icon" locale="en"/>
            </level>
            <level value="1">
                <language key="description" locale="en">1</language>
                <language key="displayname" locale="en">1</language>
                <language key="icon" locale="en"/>
            </level>
            <language key="description" locale="en">Hidden Price</language>
            <language key="displayname" locale="en">Hidden Price</language>
            <language key="group" locale="en"/>
            <profile key="hidden" value="true"/>
        </attribute>
        <!--Restricted Pairs-->
        <restricted-set name="1">
            <restricted-attribute name="color">
                <restricted-level value="orange"/>
                <restricted-level value="red"/>
                <restricted-level value="purple"/>
                <restricted-level value="blue"/>
                <restricted-level value="green"/>
                <restricted-level value="maroon"/>
                <restricted-level value="yellow"/>
                <restricted-level value="gray"/>
                <restricted-level value="black"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="2">
            <restricted-attribute name="size">
                <restricted-level value="small"/>
                <restricted-level value="large"/>
                <restricted-level value="medium"/>
                <restricted-level value="xlarge"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="3">
            <restricted-attribute name="weight">
                <restricted-level value="10"/>
                <restricted-level value="0"/>
                <restricted-level value="5"/>
                <restricted-level value="15"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="4">
            <restricted-attribute name="intuition">
                <restricted-level value="grade school"/>
                <restricted-level value="doctorate"/>
                <restricted-level value="high school"/>
                <restricted-level value="completely intuitive"/>
                <restricted-level value="college"/>
                <restricted-level value="graduate degree"/>
                <restricted-level value="junior high school"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="5">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="delivery">
                <restricted-level value="5 days"/>
                <restricted-level value="7 days"/>
                <restricted-level value="next day"/>
                <restricted-level value="3 days"/>
                <restricted-level value="same day"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="6">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="price">
                <restricted-level value="125"/>
                <restricted-level value="150"/>
                <restricted-level value="0"/>
                <restricted-level value="175"/>
                <restricted-level value="200"/>
                <restricted-level value="25"/>
                <restricted-level value="100"/>
                <restricted-level value="75"/>
                <restricted-level value="50"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="7">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="basepay">
                <restricted-level value="0"/>
                <restricted-level value=".5"/>
                <restricted-level value="1"/>
                <restricted-level value="1.5"/>
                <restricted-level value="2"/>
                <restricted-level value="2.5"/>
                <restricted-level value="3"/>
                <restricted-level value="3.5"/>
                <restricted-level value="4"/>
                <restricted-level value="5"/>
            </restricted-attribute>
        </restricted-set>
        <!--Subgame-->
        <subgame name="e2e_prototype" version-label="0">
            <subgame-attribute name="color">
                <subgame-level value="red"/>
                <subgame-level value="orange"/>
                <subgame-level value="yellow"/>
                <subgame-level value="green"/>
                <subgame-level value="gray"/>
                <subgame-level value="blue"/>
                <subgame-level value="purple"/>
                <subgame-level value="black"/>
                <subgame-level value="maroon"/>
            </subgame-attribute>
            <subgame-attribute name="basepay">
                <subgame-level value="0"/>
                <subgame-level value=".5"/>
                <subgame-level value="1"/>
                <subgame-level value="1.5"/>
                <subgame-level value="2"/>
                <subgame-level value="2.5"/>
                <subgame-level value="3"/>
                <subgame-level value="3.5"/>
                <subgame-level value="4"/>
                <subgame-level value="5"/>
            </subgame-attribute>
            <subgame-attribute name="size">
                <subgame-level value="small"/>
                <subgame-level value="medium"/>
                <subgame-level value="large"/>
                <subgame-level value="xlarge"/>
            </subgame-attribute>
            <subgame-attribute name="weight">
                <subgame-level value="0"/>
                <subgame-level value="5"/>
                <subgame-level value="10"/>
                <subgame-level value="15"/>
            </subgame-attribute>
            <subgame-attribute name="intuition">
                <subgame-level value="completely intuitive"/>
                <subgame-level value="grade school"/>
                <subgame-level value="junior high school"/>
                <subgame-level value="high school"/>
                <subgame-level value="college"/>
                <subgame-level value="graduate degree"/>
                <subgame-level value="doctorate"/>
            </subgame-attribute>
            <subgame-attribute name="delivery">
                <subgame-level value="same day"/>
                <subgame-level value="next day"/>
                <subgame-level value="3 days"/>
                <subgame-level value="5 days"/>
                <subgame-level value="7 days"/>
            </subgame-attribute>
            <subgame-attribute name="price">
                <subgame-level value="0"/>
                <subgame-level value="25"/>
                <subgame-level value="50"/>
                <subgame-level value="75"/>
                <subgame-level value="100"/>
                <subgame-level value="125"/>
                <subgame-level value="150"/>
                <subgame-level value="175"/>
                <subgame-level value="200"/>
            </subgame-attribute>
            <subgame-attribute name="Hidden Price">
                <subgame-level value="0"/>
                <subgame-level value="1"/>
            </subgame-attribute>
            <naming name="e2e_prototype" by-owner="true" type="bfd.domain.game.Game" owner="[Client]e2e_prototype/[Game]e2e_prototype"/>
        </subgame>
        <!--Misc Client Files-->
        <resource name="main" value="truechoice/app/clients/e2e_prototype/4.2.33/">
            <language key="browserTitle" locale="en">Prototype - MB</language>
        </resource>
        <!--game description-->
        <resource name="system">
            <language key="error.scrollbarnotmoved.message" locale="en">Are you sure you have scrolled down to answer all of the questions? The scroll bar is located on the right side of your screen. Click 'yes' to continue or 'no' to modify your answers.</language>
            <!-- English System Messages -->
            <language key="moveup" locale="en">Move Up</language>
            <language key="movedown" locale="en">Move Down</language>
            <language key="title.warning" locale="en">Warning</language>
            <language key="title.attention" locale="en">Attention</language>
            <language key="error.helpdeskemail.title" locale="en">Attention</language>
            <language key="error.helpdeskemail.message" locale="en">Your last request failed because of a communications problem with our servers.
            &lt;br&gt;&lt;br&gt;Please restart by refreshing this webpage.  We apologize for the inconvenience.
            &lt;br&gt;&lt;br&gt;Before you try again, please make sure your network connection is active and reconfirm that you are connected to the internet.
            &lt;br&gt;&lt;br&gt;For further assistance, please email</language>
            <language key="error.helpdeskemail.reference" locale="en">Reference</language>
            <language key="retry" locale="en">Retry</language>
            <language key="title.error" locale="en">Error</language>
            <language key="error.system.title" locale="en">System Error</language>
            <language key="error.mustscale.message" locale="en">Please change the value for at least one option.</language>
            <language key="error.timeout.message" locale="en">The system has not responded in an appropriate amount of time. Please try again in a few moments. If the problem persists, please contact the administrator.</language>
            <language key="notatallimportant" locale="en">Strongly Disagree</language>
            <language key="extremelyImportant" locale="en">Strongly Agree</language>
            <language key="button.moveup" locale="en">Move Up</language>
            <language key="button.movedown" locale="en">Move Down</language>
            <language key="error.emailinvalid.title" locale="en">Invalid Email</language>
            <language key="error.emailinvalid.message" locale="en">Please verify that your email address is correct and try again.</language>
            <language key="error.missingrequired.title" locale="en">Questions Not Answered</language>
            <language key="error.missingrequired.message" locale="en">You have not answered all of the questions on this page. Please make sure the question marked with an asterisk (*) has been answered.</language>
            <language key="error.minattributesnotselected.title" locale="en">Attention</language>
            <language key="error.minattributesnotselected.message" locale="en">Please select at least 3 options to continue.</language>
            <language key="devicenotsupported.body" locale="en">Your screen resolution is insufficient to view this application. Must be at least 1024x768.&lt;br&gt;&lt;br&gt;Please try on a device with a larger screen.</language>
            <language key="devicenotsupported.footer" locale="en">Should you require assistance, please contact us at &lt;a href="mailto:helpdesk@truechoicesolutions.com?subject=Device%20Support"&gt;helpdesk@truechoicesolutions.com&lt;/a&gt;</language>
            <!-- Director alert -->
            <language key="error.director.title" locale="en">Response required</language>
			<language key="error.director.message" locale="en">To proceed further, please select an option and click or tap "Next" to continue.</language>
            <!-- restart alert -->
            <language key="restart.title" locale="en">ATTENTION - You are about to return to the start of the survey.</language>
            <language key="restart.message" locale="en">Hey! Testing restart alert popup and restart application feature. Click "Yes" to restart the application. Click on "No" to remain in this stage.</language>
            <!--general-->
            <language key="next" locale="en">Next</language>
            <language key="back" locale="en">Back</language>
            <!-- <language key="help" locale="en"></language> -->
            <language key="skip" locale="en">SKIP</language>
            <language key="helpbutton" locale="en">Help?</language>
            <language key="alert.button.close" locale="en">Close</language>
            <language key="alert.button.ok" locale="en">Ok</language>
            <language key="alert.button.yes" locale="en">Yes</language>
            <language key="alert.button.no" locale="en">No</language>
            <language key="levelscalemoveenablesnext" locale="en">false</language>
            <language key="leastpreferred" locale="en">Least</language>
            <language key="mostpreferred" locale="en">Most</language>
            <language key="disclaimer" locale="en">Copyright © 2019 TrueChoice Solutions, Inc. | <![CDATA[<a href="//www.truechoicesolutions.com/Privacy-Policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>]]>.</language>
            <language key="loading" locale="en">Loading...</language>
            <language key="assets.main.loading" locale="en">assets/main/loading.gif</language>
            <language key="preference.importance.labels" locale="en">NOT IMPORTANT||SOMEWHAT IMPORTANT||IMPORTANT||VERY IMPORTANT||EXTREMELY IMPORTANT</language>
            <!-- welcome -->
            <language key="welcome.button.label" locale="en">Begin</language>
            <!-- help -->
            <language key="help.button.label" locale="en">Close</language>
            <!-- implicit warning -->
            <language key="implicitwarning.moveup.message" locale="en">Note: You have rated a more valued option equal to or below a less valued one.</language>
            <language key="implicitwarning.moveup.title" locale="en">Move up.</language>
            <language key="implicitwarning.movedown.message" locale="en">Note: You have rated a less valued option equal to or above a more valued one.</language>
            <language key="implicitwarning.movedown.title" locale="en">Move down.</language>
            <language key="implicitwarning.message" locale="en">The sliders are now out of order. Would you like to move the slider to its original position?</language>
            <language key="implicitwarning.title" locale="en">Attention</language>
            <language key="implicitwarning.morebelowless.message" locale="en">Did you know that you have rated a more valued option equal to or below a less valued one? Do you want to proceed?</language>
            <language key="implicitwarning.lessabovemore.message" locale="en">Did you know that you have rated a less valued option equal to or above a more valued one? Do you want to proceed?</language>
            <!--stage 2-->
            <language key="attributes.leastpreferred" locale="en">Less Important</language>
            <language key="attributes.mostpreferred" locale="en">More Important</language>
            <!--stage 3-->
            <language key="tradeoffs.vs" locale="en">OR</language>
            <language key="tradeoffs.offer1" locale="en">Option 1</language>
            <language key="tradeoffs.offer2" locale="en">Option 2</language>
            <language key="tradeoffs.preference.labels" locale="en">Greatly Prefer Option 1||Prefer Option 1||Slightly Prefer Option 1||Indifferent||Slightly Prefer Option 2||Prefer Option 2||Greatly Prefer Option 2</language>
            <!-- Stage 4 -->
            <language key="error.requiredinput.label" locale="en">Your Answer Is Invalid</language>
            <!-- Percent Allocation -->
            <language key="percentmeter.totalmaxalert" locale="en">Maximum of 100% has been reached</language>
            <language key="percentmeter.valuedisplaytext" locale="en">/ 100%</language>
            <language key="error.sumvaluesinvalid.title" locale="en">Invalid sum</language>
            <language key="error.sumvaluesinvalid.message" locale="en">Values must equate to 100</language>
            <!-- disclosure popup -->
            <language key="disclosure.title" locale="en">Information</language>
            <language key="disclosure.body" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.&lt;br&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.</language>
            <language key="disclosure.gotit" locale="en">Close</language>
            <!-- Set flag to true to animate the icons -->
            <language key="animateicons" locale="en">false</language>
            <!-- Warning to user to confirm navigating away from app -->
            <language key="warning.leavingapp.message" locale="en">Warning! You are about to leave the app and lose all data</language>
            <!-- app template -->
            <profile key="app.templateversion" value="1"/>
            <profile key="app.templatesubversion" value="b"/>
            <!-- widget thumb states -->
            <profile key="usethumbstates" value="false"/>
            <!-- tracking -->
            <!-- Start facebook tracking-->
            <!-- NOTE ID is for TCS test account -->
            <!-- Need "true" and valid "ID" -->
			<profile key="externalanalytics.fb" value="false"/>
			<profile key="externalanalytics.fb.id" value="1609058966064965"/>
            <!-- End facebook tracking-->
            <!-- optimize for PC and Tablets: true/false -->
            <profile key="devicenotsupported" value="false"/>
            <!-- request processor -->
            <profile key="instance-attribute-requestprocessor" value="averaging"/>
            <!-- To use dynamic breadcrumbs or not: true|false -->
            <profile key="usedynamicbreadcrumbs" value="true"/>
            <!-- Notification Bar -->
            <profile key="notificationbar.timeout" value="4000"/>
        </resource>
        <resource name="controls">
            <resource-element value="welcome"/>
            <resource-element value="consent"/>
            <resource-element value="attrselect"/>
            <resource-element value="intro"/>
            <resource-element value="onboardintro"/>
            <resource-element value="prestage1"/>
            <resource-element value="levels"/>
            <resource-element value="prestage2"/>
            <resource-element value="attributes"/>
            <resource-element value="prestage3"/>
            <resource-element value="tradeoffs"/>
            <resource-element value="prestage4"/>
            <resource-element value="aboutyou"/>
            <resource-element value="survey1"/>
            <resource-element value="survey2"/>
            <resource-element value="output"/>
        </resource>
        <!-- UID passed in from URL -->
        <resource name="url">
            <resource-element value="uid" />
        </resource>
        <!--stage description-->
        <resource name="welcome" value="display">
            <language key="next" locale="en">Begin</language>
            <language key="header" locale="en">TCS 4.0.25 CLI: Innovation at Work</language>
            <language key="title" locale="en">Understanding your product and service needs is important to us.</language>
            <language key="body" locale="en">The product you choose is at the very core of your business and one of the most important decision you will have to make. Although the perfect product may or may not exist, there are definitely ways to minimize risk by choosing a product that have more going for it, than against it. Using specific criteria can help you better understand the product you are considering and increase your overall chances of success.</language>
            <language key="time.image.text" locale="en">It only takes a few minutes...</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;strong&gt;Welcome:&lt;/strong&gt; welcome-1</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="disclaimer" locale="en">Copyright &#9400; 2019 TrueChoice Solutions, Inc.    | <![CDATA[<a href="//www.truechoicesolutions.com/privacy-policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>]]>&lt;br&gt;The Starbucks word mark and the Starbucks Logo are trademarks of Starbucks Corporation. Starbucks is also the owner of the Copyrights in the Starbucks Logo and the Starbucks Card designs. All rights reserved.Starbucks is not a participating partner or sponsor in this offer.</language>
            <language key="templateurl" locale="en">welcome-1.tpl.html</language>
        </resource>
        <resource name="consent" value="survey">
            <resource-element value="Consent Title Label"/>
            <resource-element value="Consent Label One"/>
            <resource-element value="Consent One Question"/>
            <resource-element value="Consent Label Two"/>
            <resource-element value="Consent Two Question"/>
            <resource-element value="Consent Contact Info One Label"/>
            <resource-element value="Consent Contact Info Two Label"/>
            <language key="help.title" locale="en">Attention</language>
            <language key="help.body" locale="en"><![CDATA[<p>Your consent is required to continue with this application.</p> <br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.gotit" locale="en">OK</language>
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="error.missingrequired.title" locale="en">Attention</language>
            <language key="alert.button.ok" locale="en">OK</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="error.missingrequired.message" locale="en"><![CDATA[<p>Your consent is required to continue with this application.</p> <br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="templateurl" locale="en">survey_consent.tpl.html</language>
            <profile key="help" value="true"/>
        </resource>
        <resource name="attrselect" value="attributeselect">
            <resource-element value="Attribute Select Label One"/>
            <resource-element value="Attribute Select Question"/>
            <language key="title" locale="en">We'd like to understand your preferences for different tools and solutions that could potentially benefit your business</language>
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="assets.content.image" locale="en">assets/stages/display/intro/content/image.png</language>
            <language key="assets.content.image.alt" locale="en">Content image</language>
            <language key="templateurl" locale="en">attribute-select.tpl.html</language>
            <profile key="minattributes" value="3"/>
            <profile key="useselectalloption" value="true"/>
        </resource>        
        <resource name="intro" value="display">
            <language key="title" locale="en">Let's Get Started!</language>
            <language key="subtitle" locale="en">The purpose of this survey is to understand what you prefer and value most from the compensation and benefits offered to you.</language>
            <language key="body" locale="en"><![CDATA[
                <b>This exercise will take 10 minutes to complete.</b>
                <br/>
                <br/>
                <b>Your responses are private and anonymous - there is no risk in being totally honest.</b>
                <br/>
                <br/>
                <b>Please Note:</b>
                <br/>
                <br/>
                <p><span>&#8226;</span> This exercise needs to be finished in one session. You can't save your work, come back, and complete it later.</p>
                <br/>
                <p><span>&#8226;</span> This tool will time out after 30 minutes of inactivity. If that happens, you will have to start over from the beginning.</p>
                <br/>
                <p><span>&#8226;</span> If you need help, click or tap on the <span class="tooltip-indicator-no-pointer"></span> icons throughout the application.</p>
                ]]>
            </language>            
            <language key="breadcrumbdisplay.message" locale="en">Introduction</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="assets.content.image" locale="en">assets/stages/display/intro/content/image.png</language>
            <language key="assets.content.image.alt" locale="en">Content image</language>
            <language key="templateurl" locale="en">display2.tpl.html</language>
        </resource>
        <resource name="onboardintro" value="display">
            <!-- header elements -->
            <language key="title" locale="en">Here's what's coming up.</language>
            <language key="header" locale="en">The core part of this tool is divided into three sections:</language>
            <!-- content elements -->
            <language key="content.pane1.image" locale="en">assets/stages/display/onboardIntro/content/part1.gif</language>
            <language key="content.pane1small.image" locale="en">assets/stages/display/onboardIntro/content/part1_320.gif</language>
            <language key="content.pane1.image.alt" locale="en">Content image</language>
            <language key="content.pane1.text" locale="en">&lt;b&gt;1. What rewards options do you prefer?&lt;/b&gt;&lt;br&gt;For each rewards offering, share your preferences across a range of offering amounts.</language>
            <language key="content.pane2.image" locale="en">assets/stages/display/onboardIntro/content/part2.gif</language>
            <language key="content.pane2small.image" locale="en">assets/stages/display/onboardIntro/content/part2_320.gif</language>
            <language key="content.pane2.image.alt" locale="en">Content image</language>
            <language key="content.pane2.text" locale="en">&lt;b&gt;2. How important is each rewards category?&lt;/b&gt;&lt;br&gt;Rate the importance of each category relative to the others.</language>
            <language key="content.pane3.image" locale="en">assets/stages/display/onboardIntro/content/part3.gif</language>
            <language key="content.pane3.image.alt" locale="en">Content image</language>
            <language key="content.pane3.text" locale="en">&lt;b&gt;3. How would you tradeoff rewards?&lt;/b&gt;&lt;br&gt;For pairs of rewards packages, tell us how much you prefer one over the other.</language>
            <!-- footer elements -->
            <language key="footer" locale="en">&lt;b&gt;If you need help, click or tap on the &lt;span class="tooltip-indicator-no-pointer"&gt;&lt;/span&gt; icons.&lt;/b&gt;</language>
            <!-- breadcrumb elements -->
            <language key="breadcrumbdisplay.message" locale="en">Introduction</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <!-- Template -->
            <language key="templateurl" locale="en">onboardIntro.tpl.html</language>
        </resource>
        <resource name="prestage1" value="display">
            <language key="title" locale="en">What do you value?</language>
            <language key="body" locale="en">&lt;b&gt;We are going to ask you about your preferences for option within a number of categories.&lt;/b&gt; For each option shown, select a value between 0 and 10. The lower the number, the less you prefer an option. The higher the number, the more you prefer the option.</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;strong&gt;Stage 1&lt;/strong&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <language key="assets.content.image" locale="en">assets/stages/display/prestage1/content/image.png</language>
            <language key="assets.content.image.alt" locale="en">Content image</language>
            <language key="templateurl" locale="en">display2.tpl.html</language>
            <profile key="restartalert.showonreturn" value="true"/>
        </resource>
        <resource name="levels" value="level">
            <language key="title" locale="en">Rate Your Preferences</language>
            <language key="instructions.unordered" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the elements shown.</language>
            <language key="instructions.ordered" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the elements shown. The sliders have been pre-set in order of generally accepted preferences. Therefore, you cannot move a slider above the one to its right or lower than the one to its left.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="mostpreferred" locale="en">More Important</language>
            <language key="leastpreferred" locale="en">Less Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What are we asking you to do here?</language>
            <language key="help.body" locale="en">This question is asking you to state your preferences across a range of items.&lt;br&gt;&lt;br&gt;Please indicate how much you prefer or value each item - in relation to the others - by moving the slider to a GREATER or LESSER preference or value for each of the elements shown. How far you move the slider depends on how strongly you feel about the item.&lt;br&gt;&lt;br&gt;You cannot have the same preference value for all the choices shown.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;strong&gt;Stage 1:&lt;/strong&gt; Question || of ||</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Levels</language>
            <language key="intro.body" locale="en">First, we'd like to ask you about your preferences for items that inspire you create and develop a new product in areas including color, size, weight, shape and price. </language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/level/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (levels)</language>
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true"/>
            <profile key="notificationbar.timeout" value="4000"/>
        </resource>
        <resource name="prestage2" value="display">
            <language key="title" locale="en">Congratulations! You're halfway done.</language>
            <language key="body" locale="en">In Part 1, you rated the importance of options &lt;strong&gt;&lt;i&gt;within&lt;/i&gt;&lt;/strong&gt; each of a number of categories. &lt;strong&gt;Now it's time to rate the importance of each category &lt;i&gt;relative to the others&lt;/i&gt;.&lt;/strong&gt;</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;strong&gt;Stage 2:&lt;/strong&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-attribute</language>
            <language key="assets.content.image" locale="en">assets/stages/display/prestage2/content/image.png</language>
            <language key="assets.content.image.alt" locale="en">Content image</language>
            <language key="templateurl" locale="en">display2.tpl.html</language>
        </resource>
        <resource name="attributes" value="attribute">
            <language key="title" locale="en">What's more important to you?</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="infodisplay.header" locale="en">Your Choices from Part 1:</language>
            <language key="infodisplay.header.topchoice" locale="en">Your Top Choice from Part 1:</language>
            <language key="infodisplay.leastpreferred" locale="en">Least Preferred</language>
            <language key="infodisplay.mostpreferred" locale="en">Most Preferred</language>
            <language key="infodisplay.vs" locale="en">vs</language>
            <language key="infodisplay.rating.header" locale="en">Your Rating for this Attribute</language>
            <language key="instructions" locale="en">
                <![CDATA[<p>
                For each of the categories below, indicate its importance <b><u>relative to the others</u></b> by moving the slider towards the right (more important) or towards the left (less important).
                </p>]]>
            </language>
            <language key="help.title" locale="en">What are we asking you to do here?</language>
            <language key="help.body" locale="en">This screen lists the categories we asked you about in the first part of this application. Now, we'd like to understand how important each of these categories are relative to one another. &lt;br/&gt;&lt;br/&gt; As you consider each category, your most and least preferred choices from Part 1 appear to remind you of your earlier responses.</language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;strong&gt;Stage 2&lt;/strong&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-attribute</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Attributes</language>
            <language key="intro.body" locale="en">Next we will ask you to rate the options from section one against each other. Please click or tap each option to indicate its importance to you and your product.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/attribute/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (attribute)</language>
            <profile key="help" value="true"/>
            <profile key="widget" value="attribute-scale"/>
        </resource>
        <resource name="prestage3" value="display">
            <language key="title" locale="en">Generated Tradeoffs</language>
            <language key="body" locale="en">Using what you told us in Parts 1 and 2, we've built personalized, hypothetical offerings for you to compare. &lt;strong&gt;Now it's time to weigh their appeal relative to one another.&lt;/strong&gt;</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;strong&gt;Stage 3&lt;/strong&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-tradeoff</language>
            <language key="assets.content.image" locale="en">assets/stages/display/prestage3/content/image.png</language>
            <language key="assets.content.image.alt" locale="en">Content image</language>
            <language key="templateurl" locale="en">display2.tpl.html</language>
        </resource>
        <resource name="tradeoffs" value="tradeoff">
            <language key="title" locale="en">Which option do you prefer?</language>
            <language key="instructions" locale="en">
                <![CDATA[<p>
                Assume all your choices are identical in every way except for the features shown. Based on the strength of your preference, slide towards the combination you prefer.
                </p>]]>
            </language>
            <language key="mostpreferred" locale="en">Most Preferred</language>
            <language key="leastpreferred" locale="en">Least Preferred</language>
            <language key="help.title" locale="en">What are we asking you to do here?</language>
            <language key="help.body" locale="en">Assume all your choices are identical except for the features show. Based on the strength of your preference, move the slider towards the combination you prefer. &lt;br/&gt; &lt;br/&gt; We don't just want to know which option you prefer; we want to know how much you prefer it. We'll use this information to refine our understanding of your preferences.</language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;strong&gt;Stage 3:&lt;/strong&gt; Question || of ||</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-tradeoff</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Tradeoffs</language>
            <language key="intro.body" locale="en">Next we will show several different feature combinations based on the level of importance you place on these option in section two. Based on the strength of your preference, tap on the combination you prefer. If the displayed combination is unimportant to you, click next and move onto the next combination.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/tradeoff/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (tradeoff)</language>
            <profile key="help" value="true"/>
            <profile key="numtradeoffs" value="2"/>
            <profile key="widget" value="tradeoff-scale"/>
            <profile key="widget.showvaluefromzerototen" value="true"/>
        </resource>
        <resource name="prestage4" value="display">
            <language key="title" locale="en">Almost done!</language>
            <language key="body" locale="en">We have a few additional questions that we'd like to ask you. As with the prior sections, any information you provide will be kept confidential.</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;strong&gt;Stage 4&lt;/strong&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="assets.content.image" locale="en">assets/stages/display/prestage4/content/image.png</language>
            <language key="assets.content.image.alt" locale="en">Content image</language>
            <language key="templateurl" locale="en">display2.tpl.html</language>
        </resource>
        <resource name="aboutyou" value="survey">
            <resource-element value="Name Question"/>
            <resource-element value="State Province Question"/>
            <resource-element value="Email Question"/>
            <resource-element value="Date of Birth Question"/>
            <resource-element value="What is the likelihood that you will answer all of these questions? Question"/>
            <resource-element value="Favorite Month Question"/>
            <resource-element value="How much energy do you use per year Question"/>
            <resource-element value="Contact Me Question"/>
            <resource-element value="Favorite Number Question"/>
            <language key="title" locale="en">Please take a moment to tell us a little about yourself:</language>
            <language key="title.tooltip" locale="en">This is a mock tooltip for stage.</language>
            <language key="instructions" locale="en">Not so optional questions about you because all of the these fields are REQUIRED.</language>
            <language key="breadcrumbdisplay.message" locale="en">About You</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">About You</language>
            <language key="intro.body" locale="en">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are completely optional.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (About You)</language>
        </resource>
        <resource name="survey1" value="survey">
            <resource-element value="Potential market size Question"/>
            <resource-element value="Product coolness Question"/>
            <resource-element value="Product durability Question"/>
            <resource-element value="Target customer Question"/>
            <language key="title" locale="en">
                <![CDATA[<p>
                Product Features:
                <br/>
                Please answer the following questions.
                </p>]]>
            </language>
            <language key="title.tooltip" locale="en">This is a mock tooltip for stage.</language>
            <language key="instructions" locale="en">Rate your level of agreement for the product features shown.</language>
            <language key="numberoflabels" locale="en">7</language>
            <language key="label1" locale="en">Strongly Disagree</language>
            <language key="labeltooltip1" locale="en">You strongly disagree with this statement</language>
            <language key="label2" locale="en">Disagree</language>
            <language key="labeltooltip2" locale="en">You disagree with this statement</language>
            <language key="label3" locale="en">Slightly Disagree</language>
            <language key="labeltooltip3" locale="en">You slightly disagree with this statement</language>
            <language key="label4" locale="en">Slightly Agree</language>
            <language key="labeltooltip4" locale="en">You slightly agree with this statement</language>
            <language key="label5" locale="en">Agree</language>
            <language key="labeltooltip5" locale="en">You agree with this statement</language>
            <language key="label6" locale="en">Strongly Agree</language>
            <language key="labeltooltip6" locale="en">You strongly agree with this statement</language>
            <language key="label7" locale="en">Do NOT Care</language>
            <language key="labeltooltip7" locale="en">You do not care about this statement</language>
            <language key="breadcrumbdisplay.message" locale="en">Survey Page</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Survey</language>
            <language key="intro.body" locale="en">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are required, and you will not be able to continue without answering them.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (Survey1)</language>
            <language key="templateurl" locale="en">survey_radio_group.tpl.html</language>
            <language key="help" locale="en">Help</language>
            <profile key="help" value="true"/>
            <profile key="widget" value="radio-group"/>
            <profile key="widget.notapplicableoption" value="true"/>
        </resource>
        <resource name="survey2" value="survey">
            <resource-element value="Percent Widget 1 Question"/>
            <resource-element value="Percent Widget 2 Question"/>
            <resource-element value="Percent Widget 3 Question"/>
            <resource-element value="Percent Widget 4 Question"/>
            <resource-element value="Percent Widget Total Question"/>
            <language key="title" locale="en">How is your time divided among the following platforms in terms of media consumption?</language>
            <language key="title.tooltip" locale="en">This is a mock tooltip for stage.</language>
            <language key="instructions" locale="en">
                <![CDATA[<p>
                Adjust the sliders that are relevant to you to reach a total value of 100%.
                </p>]]>
            </language>
            <language key="breadcrumbdisplay.message" locale="en">Survey Page</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="templateurl" locale="en">survey_percent_allocation.tpl.html</language>
            <profile key="defaultmodelvalue" value="0"/>
            <profile key="maxmodelvalue" value="100"/>
            <profile key="modelvaluestep" value="1"/>
            <profile key="totalquestion" value="Percent Widget Total"/>
        </resource>
        <resource name="output" value="output">
            <resource-element value="Messagedata Question"/>
            <resource-element value="Email To Question"/>
            <resource-element value="Email From Question"/>
            <resource-element value="Email Note Question"/>
            <language key="assets.content.image" locale="en">assets/stages/output/content/image.jpg</language>
            <language key="assets.content.image.alt" locale="en">Content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Output</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-output</language>
            <language key="button1.label" locale="en">Contact</language>
            <language key="button1.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="button2.label" locale="en">Yahoo</language>
            <language key="button2.url" locale="en">http://www.yahoo.com</language>
            <language key="button3.label" locale="en">Google</language>
            <language key="button3.url" locale="en">http://www.google.com</language>
            <language key="button4.label" locale="en">Email a friend</language>
            <language key="button4.url" locale="en">emailafriend</language>
            <language key="button5.label" locale="en">Game Stuff</language>
            <language key="button5.url" locale="en">http://www.ign.com</language>
            <language key="button6.label" locale="en">Restart</language>
            <language key="button6.url" locale="en">restart</language>
            <language key="socialbutton1.label" locale="en">Facebook</language>
            <language key="socialbutton1.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="socialbutton2.label" locale="en">Twitter</language>
            <language key="socialbutton2.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="footer" locale="en">You can now close your browser</language>
            <language key="links.title" locale="en">Helpful links:</language>
            <language key="link1.label" locale="en">Link to TCS - Click here if you would like to visit the TCS website!</language>
            <language key="link1.url" locale="en">//www.truechoicesolutions.com</language>
            <language key="link2.label" locale="en">Link to Yahoo - Click here if you would like to visit the Yahoo! website!</language>
            <language key="link2.url" locale="en">//www.yahoo.com</language>
            <language key="link3.label" locale="en">Link to Google - Click here if you would like to visit the Google website!</language>
            <language key="link3.url" locale="en">//www.google.com</language>
            <language key="preferenceprofile.title" locale="en">Your Preference Profile</language>
            <language key="preferenceprofile.preferencekey" locale="en">Your Preferences</language>
            <language key="preferenceprofile.peerkey" locale="en">Your Peers</language>
            <language key="productfeaturestitle" locale="en">Product Features Title: Lorem Ipsum Dolor etc</language>
            <language key="specificationstitle.label" locale="en">Specifications:</language>
            <language key="subtitle1" locale="en">Below are specific things that will be helpful to you going forward.</language>
            <language key="subtitle2" locale="en">Go ahead and see if we aren't spot on based on your selections.</language>
            <language key="tab1.label" locale="en">Your Best Choice</language>
            <language key="tab2.label" locale="en">Alternative</language>
            <language key="title" locale="en">Here's some personalized information about your product that is most interesting. You have a great chance for success!</language>
            <!-- Email Popup -->
            <language key="emailpopup.send" locale="en">SUBMIT</language>
            <language key="emailpopup.close" locale="en">Close</language>
            <language key="emailpopup.title" locale="en">Email results</language>
            <language key="emailpopup.error.invalidtoemail" locale="en">Please enter a valid TO Email address.</language>
            <language key="emailpopup.error.invalidfromemail" locale="en">Please enter a valid FROM Email address.</language>
            <language key="emailpopup.error.invalidallemails" locale="en">Please enter valid TO/FROM Email addresses.</language>
            <!-- Product templates, cfm, and styles -->
            <language key="cfm.url" locale="en">data/mb/cfm.xml</language>
            <language key="templateurl" locale="en">output.mb.tpl.html</language>
            <profile key="restart.directurl.param.game" value="e2e_prototype_director"/>
            <profile key="restart.prettyurl.param.loc" value="e2e_prototype_director"/>
            <profile key="levelmessagekeyorder" value="name||image||title||description"/>
            <profile key="emailquestions" value="emailto||emailfrom||emailnote"/>
            <profile key="isproductbased" value="false"/>
            <profile key="persistjsondata" value="false"/>
        </resource>
        <!-- GDPR Consent Resources -->
        <resource name="Consent Title Label" type="Alias" value="Consent Title"/>
        <resource name="Consent Label One" type="Alias" value="Consent One Label"/>
        <resource name="Consent One Question" type="Alias" value="Consent One"/>
        <resource name="Consent Two Question" type="Alias" value="Consent Two"/>
        <resource name="Consent Label Two" type="Alias" value="Consent Two Label"/>
        <resource name="Consent Contact Info One Label" type="Alias" value="Consent Contact Info One"/>
        <resource name="Consent Contact Info Two Label" type="Alias" value="Consent Contact Info Two"/>
        <!-- Attribute Select Resources -->     
        <resource name="Attribute Select Label One" type="Alias" value="Attribute Select One"/>        
        <resource name="Attribute Select Question" type="Alias" value="Attribute Select"/>       
        <!-- About You Resources -->
        <resource name="Name Question" type="Alias" value="Full Name"/>
        <resource name="State Province Question" type="Alias" value="State Province"/>
        <resource name="Email Question" type="Alias" value="Email"/>
        <resource name="Date of Birth Question" type="Alias" value="Date of Birth"/>
        <resource name="What is the likelihood that you will answer all of these questions? Question" type="Alias" value="What is the likelihood that you will answer all of these questions?"/>
        <resource name="Favorite Month Question" type="Alias" value="Favorite Month"/>
        <resource name="Contact Me Question" type="Alias" value="Contact Me"/>
        <resource name="How much energy do you use per year Question" type="Alias" value="How much energy do you use per year"/>
        <resource name="Favorite Number Question" type="Alias" value="Favorite Number"/>
        <!-- Survey 1 Resources -->
        <resource name="Potential market size Question" type="Alias" value="Potential market size">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Target customer Question" type="Alias" value="Target customer">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product coolness Question" type="Alias" value="Product coolness">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product durability Question" type="Alias" value="Product durability">
            <profile key="type" value="radiobutton"/>
        </resource>
        <!-- Survey 2 Resources -->
        <resource name="Percent Widget 1 Question" type="Alias" value="Percent Widget 1">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget 2 Question" type="Alias" value="Percent Widget 2">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget 3 Question" type="Alias" value="Percent Widget 3">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget 4 Question" type="Alias" value="Percent Widget 4">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget Total Question" type="Alias" value="Percent Widget Total">
            <profile key="type" value="text"/>
        </resource>
        <!-- Output Questions -->
        <resource name="Email To Question" type="Alias" value="emailto">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Email From Question" type="Alias" value="emailfrom">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Email Note Question" type="Alias" value="emailnote">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Messagedata Question" type="Alias" value="messagedata">
            <profile key="type" value="text"/>
        </resource>
        <!-- App naming name -->
        <naming name="e2e_prototype" by-owner="false"/>
        <!-- GDPR Consent profile keys -->
        <profile-key key="Consent Title" required="false">
            <language key="displayname" locale="en"><![CDATA[<span style="font-size:20px;"><b>User Transparency</b></span>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent One Label" required="false">
            <language key="displayname" locale="en"><![CDATA[<p><b>TrueChoice Solutions, Inc. is a data analytics company that will collect your product and service preferences data. This will help BrandCo develop future product and service strategies that benefit your business.</b></p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent One" required="true">
            <language key="displayname" locale="en">Do you consent to this?</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="optin" value="I consent">
                <language key="displayname" locale="en">I consent</language>
                <language key="error.requiredinput.label" locale="en">Must consent to proceed</language>
            </profile-value>
        </profile-key>
        <profile-key key="Consent Two Label" required="false">
            <language key="displayname" locale="en"><![CDATA[<p>TrueChoice Solutions, Inc. will share your data with BrandCo for the duration of this 2 month project. We will collect product and service preferences and customer satisfaction information. We will analyze the data in the United States.</p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent Two" required="false">
            <language key="displayname" locale="en">Do you consent to tracking with Facebook Pixel?</language>
            <profile key="externalanalytics.optin" value="true"/>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="analyticstracking" value="I consent">
                <language key="displayname" locale="en">I consent</language>
            </profile-value>
        </profile-key>
        <profile-key key="Consent Contact Info One" required="false">
            <language key="displayname" locale="en"><![CDATA[<p>To learn more about how TrueChoice Solutions, Inc. will manage your data and about your data privacy rights, click or tap <a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>here</i></a>.</p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
            </profile-key>
        <profile-key key="Consent Contact Info Two" required="false">
            <language key="displayname" locale="en"><![CDATA[BrandCo will control the data collected from you by TrueChoice Solutions, Inc. BrandCo's contact information is: <p class="label-display-blockquote">E-mail: privacy@email.com<br/><a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>www.BrandCo.com</i></a></p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <!-- Attribute Select profile keys -->
        <profile-key key="Attribute Select One" required="false">
            <language key="displayname" locale="en"><![CDATA[<b>TrueChoice Solutions, Inc. would like to understand the value specific solutions to provide your organization.</b><br/>The following screens will present different prodict categories and solutions and ask you to indicate how valuable each is to your organization.]]></language>
            <language key="tooltip" locale="en">Tooltip in label-display</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Attribute Select" required="false">
            <language key="displayname" locale="en"><![CDATA[<br/><b>Please select at least three product categories below. If there is an area that you have very limited familiarity with, you may opt to skip that category.</b><br/><font color="red">We encourage you to provide your viewpoint on as many of the categories as possible.</font>]]></language>
            <language key="tooltip" locale="en">Select all that apply.</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="all options" value="all options">
                <language key="displayname" locale="en">Select All</language>
            </profile-value>
            <profile-value key="color" value="color">
                <language key="displayname" locale="en">color such as red, blue, and green</language>
                <language key="tooltip" locale="en">Colors such as red, blue, and green</language>
                <profile key="attributename" value="color"/>
            </profile-value>
            <profile-value key="basepay" value="basepay">
                <language key="displayname" locale="en">basepay is your income without bonuses and additional incentives</language>
                <language key="tooltip" locale="en">Basepay is your income without bonuses and additional incentives</language>                
                <profile key="attributename" value="basepay"/>
            </profile-value>
            <profile-value key="size" value="size">
                <language key="displayname" locale="en">size</language>
                <profile key="attributename" value="size"/>
            </profile-value>
            <profile-value key="weight" value="weight">
                <language key="displayname" locale="en">weight</language>
                <profile key="attributename" value="weight"/>
            </profile-value>
            <profile-value key="intuition" value="intuition">
                <language key="displayname" locale="en">intuition</language>
                <profile key="attributename" value="intuition"/>
            </profile-value>                                    
        </profile-key>
        <!-- About You profile keys -->
        <profile-key key="Full Name" required="false">
            <language key="displayname" locale="en">Your full name</language>
            <language key="placeholder" locale="en">--</language>
            <language key="tooltip" locale="en">Your first and last name. Middle name too, if you want.</language>
            <language key="error.minlength.message" locale="en">Invalid length</language>
            <language key="error.minlength.title" locale="en">Invalid input title</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
            <profile key="maxlength" value="8"/>
            <profile key="minlength" value="3"/>
        </profile-key>
        <profile-key key="State Province" required="false">
            <language key="displayname" locale="en">Please enter the State/Province that you live in:</language>
            <language key="tooltip" locale="en">Please enter the State/Province that you live in:</language>
            <profile key="type" value="dropbox"/>
            <profile key="widget" value="drop-down"/>
            <profile-value key="AL" value="AL">
                <language key="displayname" locale="en">Alabama</language>
            </profile-value>
            <profile-value key="AK" value="AK">
                <language key="displayname" locale="en">Alaska</language>
            </profile-value>
            <profile-value key="AZ" value="AZ">
                <language key="displayname" locale="en">Arizona</language>
            </profile-value>
            <profile-value key="AR" value="AR">
                <language key="displayname" locale="en">Arkansas</language>
            </profile-value>
            <profile-value key="British Columbia" value="British Columbia">
                <language key="displayname" locale="en">British Columbia</language>
            </profile-value>
            <profile-value key="CA" value="CA">
                <language key="displayname" locale="en">California</language>
            </profile-value>
            <profile-value key="CO" value="CO">
                <language key="displayname" locale="en">Colorado</language>
            </profile-value>
            <profile-value key="CT" value="CT">
                <language key="displayname" locale="en">Connecticut</language>
            </profile-value>
            <profile-value key="DE" value="DE">
                <language key="displayname" locale="en">Delaware</language>
            </profile-value>
            <profile-value key="DC" value="DC">
                <language key="displayname" locale="en">District of Columbia     </language>
            </profile-value>
            <profile-value key="FL" value="FL">
                <language key="displayname" locale="en">Florida</language>
            </profile-value>
            <profile-value key="GA" value="GA">
                <language key="displayname" locale="en">Georgia</language>
            </profile-value>
            <profile-value key="HI" value="HI">
                <language key="displayname" locale="en">Hawaii</language>
            </profile-value>
            <profile-value key="ID" value="ID">
                <language key="displayname" locale="en">Idaho</language>
            </profile-value>
            <profile-value key="IL" value="IL">
                <language key="displayname" locale="en">Illinois</language>
            </profile-value>
            <profile-value key="IN" value="IN">
                <language key="displayname" locale="en">Indiana</language>
            </profile-value>
            <profile-value key="IA" value="IA">
                <language key="displayname" locale="en">Iowa</language>
            </profile-value>
            <profile-value key="KS" value="KS">
                <language key="displayname" locale="en">Kansas</language>
            </profile-value>
            <profile-value key="KY" value="KY">
                <language key="displayname" locale="en">Kentucky</language>
            </profile-value>
            <profile-value key="LA" value="LA">
                <language key="displayname" locale="en">Louisiana</language>
            </profile-value>
            <profile-value key="ME" value="ME">
                <language key="displayname" locale="en">Maine</language>
            </profile-value>
            <profile-value key="MD" value="MD">
                <language key="displayname" locale="en">Maryland</language>
            </profile-value>
            <profile-value key="MA" value="MA">
                <language key="displayname" locale="en">Massachusetts</language>
            </profile-value>
            <profile-value key="MI" value="MI">
                <language key="displayname" locale="en">Michigan</language>
            </profile-value>
            <profile-value key="MN" value="MN">
                <language key="displayname" locale="en">Minnesota</language>
            </profile-value>
            <profile-value key="MS" value="MS">
                <language key="displayname" locale="en">Mississippi</language>
            </profile-value>
            <profile-value key="MO" value="MO">
                <language key="displayname" locale="en">Missouri</language>
            </profile-value>
            <profile-value key="MT" value="MT">
                <language key="displayname" locale="en">Montana</language>
            </profile-value>
            <profile-value key="NE" value="NE">
                <language key="displayname" locale="en">Nebraska</language>
            </profile-value>
            <profile-value key="NV" value="NV">
                <language key="displayname" locale="en">Nevada</language>
            </profile-value>
            <profile-value key="NH" value="NH">
                <language key="displayname" locale="en">New Hampshire</language>
            </profile-value>
            <profile-value key="NJ" value="NJ">
                <language key="displayname" locale="en">New Jersey</language>
            </profile-value>
            <profile-value key="NM" value="NM">
                <language key="displayname" locale="en">New Mexico</language>
            </profile-value>
            <profile-value key="NY" value="NY">
                <language key="displayname" locale="en">New York</language>
            </profile-value>
            <profile-value key="Newfoundland" value="Newfoundland">
                <language key="displayname" locale="en">Newfoundland</language>
            </profile-value>
            <profile-value key="NC" value="NC">
                <language key="displayname" locale="en">North Carolina</language>
            </profile-value>
            <profile-value key="ND" value="ND">
                <language key="displayname" locale="en">North Dakota</language>
            </profile-value>
            <profile-value key="Northwest Territories" value="Northwest Territories">
                <language key="displayname" locale="en">Northwest Territories</language>
            </profile-value>
            <profile-value key="Nova Scotia" value="Nova Scotia">
                <language key="displayname" locale="en">Nova Scotia</language>
            </profile-value>
            <profile-value key="Nunavut" value="Nunavut">
                <language key="displayname" locale="en">Nunavut</language>
            </profile-value>
            <profile-value key="OH" value="OH">
                <language key="displayname" locale="en">Ohio</language>
            </profile-value>
            <profile-value key="OK" value="OK">
                <language key="displayname" locale="en">Oklahoma</language>
            </profile-value>
            <profile-value key="Ontario" value="Ontario">
                <language key="displayname" locale="en">Ontario</language>
            </profile-value>
            <profile-value key="OR" value="OR">
                <language key="displayname" locale="en">Oregon</language>
            </profile-value>
            <profile-value key="PA" value="PA">
                <language key="displayname" locale="en">Pennsylvania</language>
            </profile-value>
            <profile-value key="Prince Edward Island" value="Prince Edward Island">
                <language key="displayname" locale="en">Prince Edward Island</language>
            </profile-value>
            <profile-value key="Quebec" value="Quebec">
                <language key="displayname" locale="en">Quebec</language>
            </profile-value>
            <profile-value key="RI" value="RI">
                <language key="displayname" locale="en">Rhode Island</language>
            </profile-value>
            <profile-value key="Saskatchewan" value="Saskatchewan">
                <language key="displayname" locale="en">Saskatchewan</language>
            </profile-value>
            <profile-value key="SC" value="SC">
                <language key="displayname" locale="en">South Carolina</language>
            </profile-value>
            <profile-value key="SD" value="SD">
                <language key="displayname" locale="en">South Dakota</language>
            </profile-value>
            <profile-value key="TN" value="TN">
                <language key="displayname" locale="en">Tennessee</language>
            </profile-value>
            <profile-value key="TX" value="TX">
                <language key="displayname" locale="en">Texas</language>
            </profile-value>
            <profile-value key="UT" value="UT">
                <language key="displayname" locale="en">Utah</language>
            </profile-value>
            <profile-value key="VT" value="VT">
                <language key="displayname" locale="en">Vermont</language>
            </profile-value>
            <profile-value key="VA" value="VA">
                <language key="displayname" locale="en">Virginia</language>
            </profile-value>
            <profile-value key="WA" value="WA">
                <language key="displayname" locale="en">Washington</language>
            </profile-value>
            <profile-value key="WV" value="WV">
                <language key="displayname" locale="en">West Virginia</language>
            </profile-value>
            <profile-value key="WI" value="WI">
                <language key="displayname" locale="en">Wisconsin</language>
            </profile-value>
            <profile-value key="WY" value="WY">
                <language key="displayname" locale="en">Wyoming</language>
            </profile-value>
            <profile-value key="Yukon" value="Yukon">
                <language key="displayname" locale="en">Yukon</language>
            </profile-value>
        </profile-key>
        <profile-key key="Email" required="false">
            <language key="displayname" locale="en">Your email address</language>
            <language key="tooltip" locale="en">The email address you use most often</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Date of Birth" required="false">
            <language key="displayname" locale="en">What is your birthday</language>
            <language key="placeholder" locale="en">MM/DD/YYYY</language>
            <language key="tooltip" locale="en">What is your birthday</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Contact Me" required="false">
            <language key="displayname" locale="en">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us.</language>
            <language key="tooltip" locale="en">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us. If you would like to be contacted please select "Yes, please contact me via email that I have previously provided for you".</language>
            <profile key="type" value="radio"/>
            <profile key="widget" value="radio-button"/>
            <profile-value key="Yes" value="Yes, contact me">
                <language key="displayname" locale="en">Yes, please contact me through the email that I have provided</language>
            </profile-value>
            <profile-value key="No" value="No, do not contact me">
                <language key="displayname" locale="en">No, do not contact me, I do not want to recieve emails.</language>
            </profile-value>
        </profile-key>
        <profile-key key="Favorite Month" required="false">
            <language key="displayname" locale="en">What are your favorite months?  I'm betting it's the month you were born in!</language>
            <language key="tooltip" locale="en">Select all that apply.</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="January" value="January">
                <language key="displayname" locale="en">January - Ambitious and serious</language>
            </profile-value>
            <profile-value key="February" value="February">
                <language key="displayname" locale="en">February - Abstract thoughts</language>
            </profile-value>
            <profile-value key="March" value="March">
                <language key="displayname" locale="en">March - Attractive personality</language>
            </profile-value>
            <profile-value key="April" value="April">
                <language key="displayname" locale="en">April - Active and dynamic</language>
            </profile-value>
            <profile-value key="May" value="May">
                <language key="displayname" locale="en">May - Stubborn and hard-hearted</language>
            </profile-value>
            <profile-value key="June" value="June">
                <language key="displayname" locale="en">June - Thinks far with vision</language>
            </profile-value>
            <profile-value key="July" value="July">
                <language key="displayname" locale="en">July - Fun to be with</language>
            </profile-value>
            <profile-value key="August" value="August">
                <language key="displayname" locale="en">August - Loves to joke</language>
            </profile-value>
            <profile-value key="September" value="September">
                <language key="displayname" locale="en">September - Suave and compromising</language>
            </profile-value>
            <profile-value key="October" value="October">
                <language key="displayname" locale="en">October - Loves to chat</language>
            </profile-value>
            <profile-value key="November" value="November">
                <language key="displayname" locale="en">November - Have a lot of ideas</language>
            </profile-value>
            <profile-value key="December" value="December">
                <language key="displayname" locale="en">December - Loyal and generous</language>
            </profile-value>
        </profile-key>
        <profile-key key="What is the likelihood that you will answer all of these questions?" required="false">
            <language key="displayname" locale="en">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <language key="tooltip" locale="en">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <profile key="type" value="rating"/>
                <profile key="widget" value="rating-scale"/>
            <profile key="usehashmarks" value="true"/>
            <profile key="useallhashlabels" value="true"/>
            <profile-value key="NA" value="null">
                <language key="displayname" locale="en"> -- Please select a value -- </language>
                <language key="hashlabel" locale="en">N/A</language>
            </profile-value>
            <profile-value key="0" value="0">
                <language key="displayname" locale="en">0 - Not at all likely</language>
                <language key="hashlabel" locale="en">0</language>
            </profile-value>
            <profile-value key="1" value="1">
                <language key="displayname" locale="en">1 - If you force me to</language>
                <language key="hashlabel" locale="en">1</language>
            </profile-value>
            <profile-value key="2" value="2">
                <language key="displayname" locale="en">2 - Grudgingly</language>
                <language key="hashlabel" locale="en">2</language>
            </profile-value>
            <profile-value key="3" value="3">
                <language key="displayname" locale="en">3 - Do I have to</language>
                <language key="hashlabel" locale="en">3</language>
            </profile-value>
            <profile-value key="4" value="4">
                <language key="displayname" locale="en">4 - Ok, but I'd rather not</language>
                <language key="hashlabel" locale="en">4</language>
            </profile-value>
            <profile-value key="5" value="5">
                <language key="displayname" locale="en">5 - Maybe I will, maybe I won't</language>
                <language key="hashlabel" locale="en">5</language>
            </profile-value>
            <profile-value key="6" value="6">
                <language key="displayname" locale="en">6 - Sure, but not right now</language>
                <language key="hashlabel" locale="en">6</language>
            </profile-value>
            <profile-value key="7" value="7">
                <language key="displayname" locale="en">7 - Yes, but in an hour</language>
                <language key="hashlabel" locale="en">7</language>
            </profile-value>
            <profile-value key="8" value="8">
                <language key="displayname" locale="en">8 - OK, just a sec</language>
                <language key="hashlabel" locale="en">8</language>
            </profile-value>
            <profile-value key="9" value="9">
                <language key="displayname" locale="en">9 - YES!  I'll stop what I'm doing to help out</language>
                <language key="hashlabel" locale="en">9</language>
            </profile-value>
            <profile-value key="10" value="10">
                <language key="displayname" locale="en">10 - Absolutely, already done!  I'm a team player!</language>
                <language key="hashlabel" locale="en">10</language>
            </profile-value>
        </profile-key>
        <profile-key key="How much energy do you use per year" required="false">
            <language key="displayname" locale="en">How much energy do you use per year:</language>
            <profile key="widget" value="rating-scale"/>
            <profile key="type" value="rating"/>
            <profile key="usehashmarks" value="true"/>
            <profile key="useallhashlabels" value="false"/>
            <profile-value key="NA" value="null">
                <language key="displayname" locale="en">-- Please select a value --</language>
                <language key="hashlabel" locale="en">N/A</language>
            </profile-value>
            <profile-value key="0" value="0 kWh">
                <language key="displayname" locale="en">0 kWh</language>
            </profile-value>
            <profile-value key="100" value="100 kWh">
                <language key="displayname" locale="en">100 kWh</language>
            </profile-value>
            <profile-value key="200" value="200 kWh">
                <language key="displayname" locale="en">200 kWh</language>
            </profile-value>
            <profile-value key="300" value="300 kWh">
                <language key="displayname" locale="en">300 kWh</language>
            </profile-value>
            <profile-value key="400" value="400 kWh">
                <language key="displayname" locale="en">400 kWh</language>
            </profile-value>
        </profile-key>
        <profile-key key="Favorite Number" required="false">
            <language key="displayname" locale="en">What is your favorite number</language>
            <language key="placeholder" locale="en">e.g. 1</language>
            <language key="tooltip" locale="en">Your favorite Number</language>
            <profile key="type" value="number"/>
            <profile key="widget" value="text-input"/>
            <profile key="maxlength" value="8"/>
        </profile-key>
        <!-- Survey 1 Radio Group 7 Header profile keys -->
        <profile-key key="Potential market size" required="true">
            <language key="displayname" locale="en">The potential market size for my product is huge!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
                <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
                </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Target customer" required="true">
            <language key="displayname" locale="en">I am targeting customers who are totally "up on it" and have money to burn!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
                <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product coolness" required="true">
            <language key="displayname" locale="en">My product is totally cool, unique, and trendy and everyone will NEED to own it.</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
                <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product durability" required="true">
            <language key="displayname" locale="en">Durability is a key factor of my product and it won't drop even if you drop it!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
                <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <!-- Survey 2 profile keys -->
        <profile-key key="Percent Widget 1" required="false">
            <language key="displayname" locale="en">Netflix</language>
            <language key="tooltip" locale="en">Netflix and code</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget 2" required="false">
            <language key="displayname" locale="en">Hulu</language>
            <language key="tooltip" locale="en">Hulu</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget 3" required="false">
            <language key="displayname" locale="en">Amazon</language>
            <language key="tooltip" locale="en">Amazon</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget 4" required="false">
            <language key="displayname" locale="en">Other (No tooltip)</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget Total" required="false">
            <profile key="hidden" value="true"/>
        </profile-key>
        <!-- Output Questions profile keys -->
        <profile-key key="emailto" required="true">
            <language key="displayname" locale="en">To: (email address)</language>
            <language key="placeholder" locale="en">Example: john@example.com</language>
            <language key="error" locale="en">'TO' email address is not valid.</language>
            <profile key="widget" value="text-input"/>
            <profile key="inputtype" value="email"/>
        </profile-key>
        <profile-key key="emailfrom" required="true">
            <language key="displayname" locale="en">From: (email address)</language>
            <language key="placeholder" locale="en">Example: jane@example.com</language>
            <language key="error" locale="en">'FROM' email address is not valid.</language>
            <profile key="widget" value="text-input"/>
            <profile key="inputtype" value="email"/>
        </profile-key>
        <profile-key key="emailnote" required="false">
            <language key="displayname" locale="en">Note: (optional)</language>
            <language key="placeholder" locale="en">Please check out this great product!</language>
            <profile key="widget" value="text-area"/>
            <profile key="inputtype" value="text"/>
        </profile-key>
        <profile-key key="messagedata" required="false">
            <profile key="type" value="text"/>
            <profile key="hidden" value="true"/>
        </profile-key>
        <!-- Output Questions profile keys -->
        <profile-key key="uid" required="false">
            <naming name="e2e_prototypeUid"/>
        </profile-key>
        <profile key="BestChoice" value="10"/>
    </game>
</client>
'
      };
      return await request(app.getHttpServer())
        .post('/xml-loader/xml')
        .set('Accept', 'application/json')
        .send(xml)
        .expect(201);
    });
  });

  describe('importBatchXml (e2e)', () => {
    it('/xml-loader/batchxml (POST)', async () => {
      // Use VS Code's key command `alt + z` to pervent line wrap for the base64 encoded files
      const batch: LoadXmlFileDTO = {
        server: 'dev',
        deleteXml: 'client',
        payload: {
          app:
            '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE client SYSTEM "object.dtd">
<client name="e2e_prototype">
    <game name="e2e_prototype" fixed="false">
        <attribute name="color" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="red">
                <language key="description" locale="en"><![CDATA[<img src="assets/tooltips/color_red.jpg">]]>Electric crimson or red is a color whose hue resembles that of blood, or a ruby, and is of the long-wave extreme of the visible spectrum. Red is also a primary color. The hex for this color is #FF003F and the first known word usage was before the 12th century.</language>
                <language key="description" locale="ar"><![CDATA[<img src="assets/tooltips/color_red.jpg">]]>لكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة البشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية.</language>
                <language key="displayname" locale="en">Electric Crimson</language>
                <language key="displayname" locale="ar">المغلوطة حول استنكار</language>
                <language key="icon" locale="en">icon-color-red</language>
                <language key="icon" locale="ar">icon-color-red</language>
                <language key="message" locale="en">color||Color||Electric crimson or red has always been one of your favorite colors and you will always choose that color over any other!||icon-color-red</language>
                <language key="message" locale="ar">color||Color||كن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة||icon-color-red</language>
            </level>
            <level value="orange">
                <language key="description" locale="en">Orange is a color between red and yellow that is like the color of fire and carrots. It is also a fruit that grows in California and Florida. The hex for this color is #FF9966 and the first know word usage was in 1542.</language>
                <language key="description" locale="ar">كن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة البشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية وم.</language>
                <language key="displayname" locale="en">Orange</language>
                <language key="displayname" locale="ar">التفاصيل</language>
                <language key="icon" locale="en">icon-color-orange</language>
                <language key="icon" locale="ar">icon-color-orange</language>
                <language key="message" locale="en">color||Color||Orange has always been one of your favorite colors and you will always choose that color over any other!||icon-color-orange</language>
                <language key="message" locale="ar">color||Color||لكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة||icon-color-orange</language>
            </level>
            <level value="yellow">
                <language key="description" locale="en">Yellow is having the color of the sun, butter, or ripe lemons. Yellow is also a primary color. It can be mixed with the other 2 primary colors to make lots of other colors but no colors mixed together can make yellow. The hex for this color is #ffd500 and the first known word usage was before the 12th century.</language>
                <language key="description" locale="ar">كن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة البشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية وم.</language>
                <language key="displayname" locale="en">Lemon Yellow</language>
                <language key="displayname" locale="ar">سأعرض لك التفاصيل</language>
                <language key="icon" locale="en">icon-color-yellow</language>
                <language key="icon" locale="ar">icon-color-yellow</language>
                <language key="message" locale="en">color||Color||Yellow has always been one of your favorite colors and you will always choose that color over any other!||icon-color-yellow</language>
                <language key="message" locale="ar">color||Color||لكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة ||icon-color-yellow</language>
            </level>
            <level value="green">
                <language key="description" locale="en">Green is a color whose hue is between yellow and blue and is associated with growing fresh grass, an emerald, Spring, evil, or envy. A person can also be "green with envy." The "Wicked Witch of the West" was green. The hex for this color is#009900 and the first known word usage was before the 12th century.</language>
                <language key="description" locale="ar">الكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة لبشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية ومنطقية </language>
                <language key="displayname" locale="en">Green</language>
                <language key="displayname" locale="ar">النشوة</language>
                <language key="icon" locale="en">icon-color-green</language>
                <language key="icon" locale="ar">icon-color-green</language>
                <language key="message" locale="en">color||Color||Green has always been one of your favorite colors and you will always choose that color over any other!||icon-color-green</language>
                <language key="message" locale="ar">color||Color||كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم||icon-color-green</language>
            </level>
            <level value="gray">
                <language key="description" locale="en">Gray is a series of neutral colors ranging between black and white and is often the color associated with age, usually depicted gray or silver hair. Also Gray is also the color associated with cloudy days and clouds filled with rain, hence the saying, "it's a gray day today." The hex for this color is #848482 and the first known word usage was before the 12th century.</language>
                <language key="description" locale="ar">الكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة لبشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية ومنطقية </language>
                <language key="displayname" locale="en">Battleship Gray</language>
                <language key="displayname" locale="ar">نشأت بالفعل،</language>
                <language key="icon" locale="en">icon-color-gray</language>
                <language key="icon" locale="ar">icon-color-gray</language>
                <language key="message" locale="en">color||Color||Gray has always been one of your favorite colors and you will always choose that color over any other!||icon-color-gray</language>
                <language key="message" locale="ar">color||Color||و سأعرض مثال حي لهذا، من منا لم يتحمل جهد بدني شاق إلا من أجل الحصول على ميزة أو فائدة؟ ولكن من لديه الحق أن ينتقد شخص ما أراد أن يشعر بالسعادة||icon-color-gray</language>
            </level>
            <level value="blue">
                <language key="description" locale="en">Blue is a color whose hue is that of the clear sky, water, and is the portion of the color spectrum lying between green and violet. Blue is also a primary color. It can be mixed with the other 2 primary colors to make lots of other colors but no colors mixed together can make blue. The hex for this color is #007af3 and the first known word usage was before the 13th century.</language>
                <language key="description" locale="ar">و سأعرض مثال حي لهذا، من منا لم يتحمل جهد بدني شاق إلا من أجل الحصول على ميزة أو فائدة؟ ولكن من لديه الحق أن ينتقد شخص ما أراد أن يشعر بالسعادة التي لا تشوبها عواقب أليمة أو آخر أراد أن يتجنب الألم الذي ربما تنجم عنه بعض المتعة ؟</language>
                <language key="displayname" locale="en">Blue</language>
                <language key="displayname" locale="ar">نتيجة لضعف</language>
                <language key="icon" locale="en">icon-color-blue</language>
                <language key="icon" locale="ar">icon-color-blue</language>
                <language key="message" locale="en">color||Color||Blue has always been one of your favorite colors and you will always choose that color over any other!||icon-color-blue</language>
                <language key="message" locale="ar">color||Color||علي الجانب الآخر نشجب ونستنكر هؤلاء الرجال المفتونون بنشوة اللحظة الهائمون في رغباتهم فلا يدركون ما يعقبها من الألم والأسي المحتم، واللوم ||icon-color-blue</language>
            </level>
            <level value="purple">
                <language key="description" locale="en">Purple is any of various colors that fall about midway between red and blue in hue, an is often the color worn as an emblem of rank or authority. The hex for this color is #4b0082 and the first known word usage was before the 15th century.</language>
                <language key="description" locale="ar">الكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة لبشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية ومنطقية </language>
                <language key="displayname" locale="en">Purple</language>
                <language key="displayname" locale="ar"> يجلبه إلينا الأس</language>
                <language key="icon" locale="en">icon-color-purple</language>
                <language key="icon" locale="ar">icon-color-purple</language>
                <language key="message" locale="en">color||Color||Purple has always been one of your favorite colors and you will always choose that color over any other!||icon-color-purple</language>
                <language key="message" locale="ar">color||Color||بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر ||icon-color-purple</language>
            </level>
            <level value="black">
                <language key="description" locale="en">Black is a word that has many, many meanings. Examples are typically associated with evil as in "black magic", a VERY bad mood, having the very dark color of coal, the night sky, something served without cream or milk as in "black coffee", or even used to describe humor that deals with subjects which are usually regarded as very serious or unpleasant. To make the color black, mix all of the other colors together and voila!, you get a mess, or black. The hex for this color is #000000 and the first known usage was before 12th century.</language>
                <language key="description" locale="ar">الكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة لبشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية ومنطقية </language>
                <language key="displayname" locale="en">Starry Night</language>
                <language key="displayname" locale="ar">لألم نشأت بالفعل،</language>
                <language key="icon" locale="en">icon-color-black</language>
                <language key="icon" locale="ar">icon-color-black</language>
                <language key="message" locale="en">color||Color||Starry night has always been one of your favorite colors and you will always choose that color over any other!||icon-color-black</language>
                <language key="message" locale="ar">color||Color||ينا الألم. في بعض الأحيان ونظراً للالتزامات التي يفرضها علينا الواجب والعمل سنتنازل غالباً ونرفض||icon-color-black</language>
            </level>
            <level value="maroon">
                <language key="description" locale="en">Maroon is a variant of the color red and is considered a dark red color. The word maroon comes from the French word maroon which means "chestnut".  Vajrayana Buddhist monks wear robes that are colored various shades of maroon. To make maroon start with red, add some blue and a little black and there you have it! Crayola introduced the maroon crayon to their pack in 1949. The crayola crayon hex for this color is #C32148 and the first recorded use of maroon as a color name in English was in 1789.</language>
                <language key="description" locale="ar">و سأعرض مثال حي لهذا، من منا لم يتحمل جهد بدني شاق إلا من أجل الحصول على ميزة أو فائدة؟ ولكن من لديه الحق أن ينتقد شخص ما أراد أن يشعر بالسعادة التي لا تشوبها عواقب أليمة أو آخر أراد أن يتجنب الألم الذي ربما تنجم عنه بعض المتعة ؟ لي الجانب الآخر</language>
                <language key="displayname" locale="en">Maroon</language>
                <language key="displayname" locale="ar">ونيل</language>
                <language key="icon" locale="en">icon-color-maroon</language>
                <language key="icon" locale="ar">icon-color-maroon</language>
                <language key="message" locale="en">color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Maroon&lt;/a&gt; has always been one of &lt;u&gt;your favorite&lt;/u&gt; colors and you will always choose that color over any other!||icon-color-maroon</language>
                <language key="message" locale="ar">color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Maroon&lt;/a&gt; has always been one of &lt;u&gt;your favorite&lt;/u&gt; colors and you will always choose that color over any other!||icon-color-maroon</language>
            </level>
            <language key="description" locale="en">Color is defined as the phenomenon of light (as red, brown, pink, or gray) or visual perception that enables one to differentiate otherwise identical objects.</language>
            <language key="description" locale="ar">كن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة.</language>
            <language key="displayname" locale="en">Which color do you prefer?</language>
            <language key="displayname" locale="ar"> ولكن بفضل هؤلاء الأشخاص</language>
            <language key="instructions" locale="en">Shift the sliders to indicate a GREATER or LESSER preference for the colors shown.</language>
            <language key="instructions" locale="ar">لكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول ستنكار  النشوة وتمجيد.</language>
            <language key="leastpreferred" locale="en">Prefer Less</language>
            <language key="leastpreferred" locale="ar">حقيقة وأساس</language>
            <language key="mostpreferred" locale="en">Prefer More</language>
            <language key="mostpreferred" locale="ar">الألم هو الألم</language>
            <language key="icon" locale="en">icon-color</language>
            <language key="icon" locale="ar">icon-color</language>
            <language key="group" locale="en"/>
            <language key="group" locale="ar"/>
            <language key="shortname.levels" locale="en">Color</language>
            <language key="shortname.levels" locale="ar">التفاصيل</language>
            <language key="shortname" locale="en">Color</language>
            <language key="shortname" locale="ar">التفاصيل</language>
            <language key="message" locale="en">color||Electric crimson or red has always been one of your favorite colors and you will always choose that color over any other!||icon-color-red</language>
            <language key="message" locale="ar">color||Electric crimson or red has always been one of your favorite colors and you will always choose that color over any other!||icon-color-red</language>
            <profile key="whyguytoggle" value="true" />
        </attribute>
        <attribute name="basepay" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="number" unacceptables-allowed="true">
            <level value="0">
                <language key="displayname" locale="en">0%</language>
                <language key="displayname" locale="ar">0%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You want to spend no money at all and like things best that are free!||icon-price-med</language>
            </level>
            <level value=".5">
                <language key="displayname" locale="en">0.5%</language>
                <language key="displayname" locale="ar">0.5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;25 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;25 per month.||icon-price-med</language>
            </level>
            <level value="1">
                <language key="displayname" locale="en">1%</language>
                <language key="displayname" locale="ar">1%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;50 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;50 per month.||icon-price-med</language>
            </level>
            <level value="1.5">
                <language key="displayname" locale="en">1.5%</language>
                <language key="displayname" locale="ar">1.5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;75 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;75 per month.||icon-price-med</language>
            </level>
            <level value="2">
                <language key="displayname" locale="en">2%</language>
                <language key="displayname" locale="ar">2%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;100 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;100 per month.||icon-price-med</language>
            </level>
            <level value="2.5">
                <language key="displayname" locale="en">2.5%</language>
                <language key="displayname" locale="ar">2.5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
            </level>
            <level value="3">
                <language key="displayname" locale="en">3%</language>
                <language key="displayname" locale="ar">3%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            </level>
            <level value="3.5">
                <language key="displayname" locale="en">3.5%</language>
                <language key="displayname" locale="ar">3.5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
            </level>
            <level value="4">
                <language key="displayname" locale="en">4%</language>
                <language key="displayname" locale="ar">4%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            </level>
            <level value="5">
                <language key="displayname" locale="en">5%</language>
                <language key="displayname" locale="ar">5%</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
                <language key="message" locale="ar">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            </level>
            <language key="displayname" locale="en">What base pay increase do you prefer?</language>
            <language key="displayname" locale="ar">What base pay increase do you prefer?</language>
            <language key="group" locale="en"/>
            <language key="group" locale="ar"/>
            <language key="shortname.levels" locale="en">Base Pay</language>
            <language key="shortname.levels" locale="ar">Base Pay</language>
            <language key="shortname" locale="en">Base Pay</language>
            <language key="shortname" locale="ar">Base Pay</language>
            <language key="instructions" locale="en">Move the slider to the option you prefer.</language>
            <language key="instructions" locale="ar">Move the slider to the option you prefer.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.title" locale="ar">What Are Your Preferences?</language>
            <language key="help.body" locale="en">This question is asking you to move the horizontal slider to the option you most prefer.</language>
            <language key="help.body" locale="ar">This question is asking you to move the horizontal slider to the option you most prefer.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.gotit" locale="ar">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image" locale="ar">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="help.assets.image.alt" locale="ar">Help content image</language>
            <language key="minicon" locale="en">icon-price-low</language>
            <language key="minicon" locale="ar">icon-price-low</language>
            <language key="maxicon" locale="en">icon-price-high</language>
            <language key="maxicon" locale="ar">icon-price-high</language>
            <language key="mindisplayname" locale="en">0% Increase</language>
            <language key="mindisplayname" locale="ar">0% Increase</language>
            <language key="maxdisplayname" locale="en">5% Increase</language>
            <language key="maxdisplayname" locale="ar">5% Increase</language>
            <language key="mindescription" locale="en">0% Increase</language>
            <language key="mindescription" locale="ar">0% Increase</language>
            <language key="maxdescription" locale="en">5% Increase</language>
            <language key="maxdescription" locale="ar">5% Increase</language>
            <language key="icon" locale="en">assets/icons/large/noindicator/basepay.png</language>
            <language key="icon" locale="ar">assets/icons/large/noindicator/basepay.png</language>
            <profile key="groupwidget" value="range-scale-single-thumb-large-icon"/>
        </attribute>
        <attribute name="size" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="small">
                <language key="description" locale="en">Small, in this case, refers to having comparatively little size or slight dimensions. The first known word usage was before the 12th century.</language>
                <language key="description" locale="ar">Small, in this case, refers to having comparatively little size or slight dimensions. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Small</language>
                <language key="displayname" locale="ar">Small</language>
                <language key="icon" locale="en">icon-size-small</language>
                <language key="icon" locale="ar">icon-size-small</language>
                <language key="message" locale="en">size||Size||You tend to like things that are small and compact in nature.||icon-size-small</language>
                <language key="message" locale="ar">size||Size||You tend to like things that are small and compact in nature.||icon-size-small</language>
            </level>
            <level value="medium">
                <language key="description" locale="en">Medium, in this case, refers to something in a middle position. The first known word usage was in 1589.</language>
                <language key="description" locale="ar">Medium, in this case, refers to something in a middle position. The first known word usage was in 1589.</language>
                <language key="displayname" locale="en">Medium</language>
                <language key="displayname" locale="ar">Medium</language>
                <language key="icon" locale="en">icon-size-medium</language>
                <language key="icon" locale="ar">icon-size-medium</language>
                <language key="message" locale="en">size||Size||You tend to gravitate toward things that are medium in size - not too big and not too small.||icon-size-medium</language>
                <language key="message" locale="ar">size||Size||You tend to gravitate toward things that are medium in size - not too big and not too small.||icon-size-medium</language>
            </level>
            <level value="large">
                <language key="description" locale="en">Large, in this case, refers to exceeding most other things of like kind especially in quantity or size. The first known word usage was before the 12th century.</language>
                <language key="description" locale="ar">Large, in this case, refers to exceeding most other things of like kind especially in quantity or size. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Large</language>
                <language key="displayname" locale="ar">Large</language>
                <language key="icon" locale="en">icon-size-large</language>
                <language key="icon" locale="ar">icon-size-large</language>
                <language key="message" locale="en">size||Size||You like things that are big and large in size or quantity.||icon-size-large</language>
                <language key="message" locale="ar">size||Size||You like things that are big and large in size or quantity.||icon-size-large</language>
            </level>
            <level value="xlarge">
                <language key="description" locale="en">Extra large, in this case, refers to large or great in dimensions, bulk, or extent. The first known word usage was before the 12th century.</language>
                <language key="description" locale="ar">Extra large, in this case, refers to large or great in dimensions, bulk, or extent. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Extra Large</language>
                <language key="displayname" locale="ar">Extra Large</language>
                <language key="icon" locale="en">icon-size-xlarge</language>
                <language key="icon" locale="ar">icon-size-xlarge</language>
                <language key="message" locale="en">size||Size||You like things that are extra large! The bigger the better and more the merrier!||icon-size-xlarge</language>
                <language key="message" locale="ar">size||Size||You like things that are extra large! The bigger the better and more the merrier!||icon-size-xlarge</language>
            </level>
            <language key="description" locale="en">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
            <language key="description" locale="ar">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
            <language key="displayname" locale="en">What size should your product be?</language>
            <language key="displayname" locale="ar">What size should your product be?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the sizes shown.</language>
            <language key="instructions" locale="ar">Shift the sliders to indicate GREATER or LESSER importance for the sizes shown.</language>
            <language key="icon" locale="en">icon-size</language>
            <language key="icon" locale="ar">icon-size</language>
            <language key="intro.title" locale="en">Size</language>
            <language key="intro.title" locale="ar">Size</language>
            <language key="intro.body" locale="en">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
            <language key="intro.body" locale="ar">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.label" locale="ar">Close</language>
            <language key="intro.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="intro.image" locale="ar">assets/popups/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image</language>
            <language key="intro.image.alt" locale="ar">Intro content image</language>
            <language key="group" locale="en"/>
            <language key="group" locale="ar"/>
            <language key="shortname.levels" locale="en">&lt;u&gt;Size&lt;/u&gt;</language>
            <language key="shortname.levels" locale="ar">&lt;u&gt;Size&lt;/u&gt;</language>
            <language key="shortname" locale="en">Size</language>
            <language key="shortname" locale="ar">Size</language>
            <language key="message" locale="en">size||You like things that are extra large! The bigger the better and more the merrier!||icon-size-xlarge</language>
            <language key="message" locale="ar">size||You like things that are extra large! The bigger the better and more the merrier!||icon-size-xlarge</language>
            <profile key="implicitwarning" type="String" value="descending"/>
        </attribute>
        <attribute name="weight" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">My product should be exceedingly light and should weigh next to nothing or be light as air.</language>
                <language key="description" locale="ar">My product should be exceedingly light and should weigh next to nothing or be light as air.</language>
                <language key="displayname" locale="en">0 or Light as air</language>
                <language key="displayname" locale="ar">0 or Light as air</language>
                <language key="icon" locale="en">icon-weight-0</language>
                <language key="icon" locale="ar">icon-weight-0</language>
                <language key="message" locale="en">weight||Weight||You like things that are very light and weigh next to nothing or light as air!||icon-weight-0</language>
                <language key="message" locale="ar">weight||Weight||You like things that are very light and weigh next to nothing or light as air!||icon-weight-0</language>
            </level>
            <level value="5">
                <language key="description" locale="en">My product should weigh no more than 5 pounds because I am going to carry it in my arms or tote it around in my backpack for long enough to be a problem if it weighs more.</language>
                <language key="description" locale="ar">My product should weigh no more than 5 pounds because I am going to carry it in my arms or tote it around in my backpack for long enough to be a problem if it weighs more.</language>
                <language key="displayname" locale="en">5 Pounds</language>
                <language key="displayname" locale="ar">5 Pounds</language>
                <language key="icon" locale="en">icon-weight-5</language>
                <language key="icon" locale="ar">icon-weight-5</language>
                <language key="message" locale="en">weight||Weight||The maximum weight you will tolerate carrying for any length of time is 5 pounds - and even that is a stretch!||icon-weight-5</language>
                <language key="message" locale="ar">weight||Weight||The maximum weight you will tolerate carrying for any length of time is 5 pounds - and even that is a stretch!||icon-weight-5</language>
            </level>
            <level value="10">
                <language key="description" locale="en">My product can weigh up to 10 pounds because I am going to carry it in my backpack or in my carry on luggage so I will not be directly stressed by the weight.</language>
                <language key="description" locale="ar">My product can weigh up to 10 pounds because I am going to carry it in my backpack or in my carry on luggage so I will not be directly stressed by the weight.</language>
                <language key="displayname" locale="en">10 Pounds</language>
                <language key="displayname" locale="ar">10 Pounds</language>
                <language key="icon" locale="en">icon-weight-10</language>
                <language key="icon" locale="ar">icon-weight-10</language>
                <language key="message" locale="en">weight||Weight||You're ok with a maximum weight of 10 pounds because you have no intention of carrying this around, except in a backpack or in carry on luggage.||icon-weight-10</language>
                <language key="message" locale="ar">weight||Weight||You're ok with a maximum weight of 10 pounds because you have no intention of carrying this around, except in a backpack or in carry on luggage.||icon-weight-10</language>
            </level>
            <level value="15">
                <language key="description" locale="en">My product can weigh 15 pounds or more because I am never going to be carrying it. It will sit on my desk either at work or home.</language>
                <language key="description" locale="ar">My product can weigh 15 pounds or more because I am never going to be carrying it. It will sit on my desk either at work or home.</language>
                <language key="displayname" locale="en">15 Pounds</language>
                <language key="displayname" locale="ar">15 Pounds</language>
                <language key="icon" locale="en">icon-weight-15</language>
                <language key="icon" locale="ar">icon-weight-15</language>
                <language key="message" locale="en">weight||Weight||You're ok with a maximum weight of 15 pounds or more because you have not intention of every picking it up.||icon-weight-15</language>
                <language key="message" locale="ar">weight||Weight||You're ok with a maximum weight of 15 pounds or more because you have not intention of every picking it up.||icon-weight-15</language>
            </level>
            <language key="description" locale="en">Weight is the standard or established amount that a thing should weigh. The first known word usage was in 1647.</language>
            <language key="description" locale="ar">Weight is the standard or established amount that a thing should weigh. The first known word usage was in 1647.</language>
            <language key="displayname" locale="en">How much should your product weigh?</language>
            <language key="displayname" locale="ar">How much should your product weigh?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the weights shown.</language>
            <language key="instructions" locale="ar">Shift the sliders to indicate GREATER or LESSER importance for the weights shown.</language>
            <language key="icon" locale="en">icon-weight</language>
            <language key="icon" locale="ar">icon-weight</language>
            <language key="group" locale="en"/>
            <language key="group" locale="ar"/>
            <language key="shortname.levels" locale="en">Weight</language>
            <language key="shortname.levels" locale="ar">Weight</language>
            <language key="shortname" locale="en">Weight</language>
            <language key="shortname" locale="ar">Weight</language>
            <language key="message" locale="en">weight||You're ok with a maximum weight of 15 pounds or more because you have not intention of every picking it up.||icon-weight-15</language>
            <language key="message" locale="ar">weight||You're ok with a maximum weight of 15 pounds or more because you have not intention of every picking it up.||icon-weight-15</language>
        </attribute>
        <attribute name="intuition" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="completely intuitive">
                <language key="description" locale="en">No education is needed. You can use this product with little or no instruction.</language>
                <language key="description" locale="ar">No education is needed. You can use this product with little or no instruction.</language>
                <language key="displayname" locale="en">Completely intuitive</language>
                <language key="displayname" locale="ar">Completely intuitive</language>
                <language key="icon" locale="en">icon-intuition-completely-intuitive</language>
                <language key="icon" locale="ar">icon-intuition-completely-intuitive</language>
                <language key="message" locale="en">intuition||Product intuition||You like things that are completely intuitive, are really, really easy and need no instruction to use.||icon-intuition-completely-intuitive</language>
                <language key="message" locale="ar">intuition||Product intuition||You like things that are completely intuitive, are really, really easy and need no instruction to use.||icon-intuition-completely-intuitive</language>
            </level>
            <level value="grade school">
                <language key="description" locale="en">Someone with a grade school education will be able to use this product.</language>
                <language key="description" locale="ar">Someone with a grade school education will be able to use this product.</language>
                <language key="displayname" locale="en">Grade School</language>
                <language key="displayname" locale="ar">Grade School</language>
                <language key="icon" locale="en">icon-intuition-grade-school</language>
                <language key="icon" locale="ar">icon-intuition-grade-school</language>
                <language key="message" locale="en">intuition||Product intuition||You like things that are so easy that someone with a grade school education can figure it out. A very little bit of instruction is ok.||icon-intuition-grade-school</language>
                <language key="message" locale="ar">intuition||Product intuition||You like things that are so easy that someone with a grade school education can figure it out. A very little bit of instruction is ok.||icon-intuition-grade-school</language>
            </level>
            <level value="junior high school">
                <language key="description" locale="en">Someone with a junior high school education can use this product.</language>
                <language key="description" locale="ar">Someone with a junior high school education can use this product.</language>
                <language key="displayname" locale="en">Junior High school</language>
                <language key="displayname" locale="ar">Junior High school</language>
                <language key="icon" locale="en">icon-intuition-junior-high-school</language>
                <language key="icon" locale="ar">icon-intuition-junior-high-school</language>
                <language key="message" locale="en">intuition||Product intuition||You like things that are easy and someone with a junior high school education can use it. Some instruction is ok, but you don't want to have to ask your kids for help.||icon-intuition-junior-high-school</language>
                <language key="message" locale="ar">intuition||Product intuition||You like things that are easy and someone with a junior high school education can use it. Some instruction is ok, but you don't want to have to ask your kids for help.||icon-intuition-junior-high-school</language>
            </level>
            <level value="high school">
                <language key="description" locale="en">You need at least a high school education to use this product.</language>
                <language key="description" locale="ar">You need at least a high school education to use this product.</language>
                <language key="displayname" locale="en">High School</language>
                <language key="displayname" locale="ar">High School</language>
                <language key="icon" locale="en">icon-intuition-high-school</language>
                <language key="icon" locale="ar">icon-intuition-high-school</language>
                <language key="message" locale="en">intuition||Product intuition||You like things to be a bit challenging and a high school education is about as much as you need to use it. Easy instructions are ok, but you're glad there are kids around, just in case.||icon-intuition-high-school</language>
                <language key="message" locale="ar">intuition||Product intuition||You like things to be a bit challenging and a high school education is about as much as you need to use it. Easy instructions are ok, but you're glad there are kids around, just in case.||icon-intuition-high-school</language>
            </level>
            <level value="college">
                <language key="description" locale="en">You need a college degree to use this product.</language>
                <language key="description" locale="ar">You need a college degree to use this product.</language>
                <language key="displayname" locale="en">College</language>
                <language key="displayname" locale="ar">College</language>
                <language key="icon" locale="en">icon-intuition-college</language>
                <language key="icon" locale="ar">icon-intuition-college</language>
                <language key="message" locale="en">intuition||Product intuition||You love a challenge but will need a college degree to figure it out. For most people instructions are a must!||icon-intuition-college</language>
                <language key="message" locale="ar">intuition||Product intuition||You love a challenge but will need a college degree to figure it out. For most people instructions are a must!||icon-intuition-college</language>
            </level>
            <level value="graduate degree">
                <language key="description" locale="en">You need a graduate degree to use this product.</language>
                <language key="description" locale="ar">You need a graduate degree to use this product.</language>
                <language key="displayname" locale="en">Graduate School</language>
                <language key="displayname" locale="ar">Graduate School</language>
                <language key="icon" locale="en">icon-intuition-graduate-degree</language>
                <language key="icon" locale="ar">icon-intuition-graduate-degree</language>
                <language key="message" locale="en">intuition||Product intuition||You love to be challenged and are glad you have a graduate degree to figure it out because without one, this would be no fun at all!||icon-intuition-graduate-degree</language>
                <language key="message" locale="ar">intuition||Product intuition||You love to be challenged and are glad you have a graduate degree to figure it out because without one, this would be no fun at all!||icon-intuition-graduate-degree</language>
            </level>
            <level value="doctorate">
                <language key="description" locale="en">Without a doctorate you'll never figure this product out.</language>
                <language key="description" locale="ar">Without a doctorate you'll never figure this product out.</language>
                <language key="displayname" locale="en">Doctorate</language>
                <language key="displayname" locale="ar">Doctorate</language>
                <language key="icon" locale="en">icon-intuition-doctorate</language>
                <language key="icon" locale="ar">icon-intuition-doctorate</language>
                <language key="message" locale="en">intuition||Product intuition||You LOVE a wicked challenge and because you have a doctorate, or very smart friends, you think this is great fun!. Even the instructions are unintelligible. What could be better!||icon-intuition-doctorate</language>
                <language key="message" locale="ar">intuition||Product intuition||You LOVE a wicked challenge and because you have a doctorate, or very smart friends, you think this is great fun!. Even the instructions are unintelligible. What could be better!||icon-intuition-doctorate</language>
            </level>
            <language key="description" locale="en">In a perfect world, your product will be easy for anyone to use and figure out, but this is not a perfect world. How intuitive is your product?</language>
            <language key="description" locale="ar">In a perfect world, your product will be easy for anyone to use and figure out, but this is not a perfect world. How intuitive is your product?</language>
            <language key="displayname" locale="en">How intuitive does your product need to be?</language>
            <language key="displayname" locale="ar">How intuitive does your product need to be?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate a GREATER or LESSER preference for the level of intuition shown.</language>
            <language key="instructions" locale="ar">Shift the sliders to indicate a GREATER or LESSER preference for the level of intuition shown.</language>
            <language key="leastpreferred" locale="en">Prefer Less</language>
            <language key="leastpreferred" locale="ar">Prefer Less</language>
            <language key="mostpreferred" locale="en">Prefer More</language>
            <language key="mostpreferred" locale="ar">Prefer More</language>
            <language key="icon" locale="en">icon-intuition</language>
            <language key="icon" locale="ar">icon-intuition</language>
            <language key="group" locale="en"/>
            <language key="group" locale="ar"/>
            <language key="shortname.levels" locale="en">Product intuition</language>
            <language key="shortname.levels" locale="ar">Product intuition</language>
            <language key="shortname" locale="en">Product intuition</language>
            <language key="shortname" locale="ar">Product intuition</language>
        </attribute>
        <attribute name="delivery" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="same day">
                <language key="description" locale="en">You want same-day delivery for time-sensitive stuff because it's really important.</language>
                <language key="description" locale="ar">You want same-day delivery for time-sensitive stuff because it's really important.</language>
                <language key="displayname" locale="en">Same day</language>
                <language key="displayname" locale="ar">Same day</language>
                <language key="icon" locale="en">icon-delivery-same-day</language>
                <language key="icon" locale="ar">icon-delivery-same-day</language>
                <language key="message" locale="en">delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||icon-delivery-same-day</language>
                <language key="message" locale="ar">delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||icon-delivery-same-day</language>
            </level>
            <level value="next day">
                <language key="description" locale="en">You can wait for next-day delivery for your important stuff because it'll still come in time.</language>
                <language key="description" locale="ar">You can wait for next-day delivery for your important stuff because it'll still come in time.</language>
                <language key="displayname" locale="en">Next day</language>
                <language key="displayname" locale="ar">Next day</language>
                <language key="icon" locale="en">icon-delivery-next-day</language>
                <language key="icon" locale="ar">icon-delivery-next-day</language>
                <language key="message" locale="en">delivery||Delivery||You can wait for next-day delivery for your important stuff because it'll still come in time.||icon-delivery-next-day</language>
                <language key="message" locale="ar">delivery||Delivery||You can wait for next-day delivery for your important stuff because it'll still come in time.||icon-delivery-next-day</language>
            </level>
            <level value="3 days">
                <language key="description" locale="en">You're good with waiting a few extra days for delivery.</language>
                <language key="description" locale="ar">You're good with waiting a few extra days for delivery.</language>
                <language key="displayname" locale="en">3 days</language>
                <language key="displayname" locale="ar">3 days</language>
                <language key="icon" locale="en">icon-delivery-3-days</language>
                <language key="icon" locale="ar">icon-delivery-3-days</language>
                <language key="message" locale="en">delivery||Delivery||You're good with waiting a few extra days for delivery.||icon-delivery-3-days</language>
                <language key="message" locale="ar">delivery||Delivery||You're good with waiting a few extra days for delivery.||icon-delivery-3-days</language>
            </level>
            <level value="5 days">
                <language key="description" locale="en">You can wait 5 days for delivery, but just barely.</language>
                <language key="description" locale="ar">You can wait 5 days for delivery, but just barely.</language>
                <language key="displayname" locale="en">5 days</language>
                <language key="displayname" locale="ar">5 days</language>
                <language key="icon" locale="en">icon-delivery-5-days</language>
                <language key="icon" locale="ar">icon-delivery-5-days</language>
                <language key="message" locale="en">delivery||Delivery||You can wait 5 days for delivery, but just barely.||icon-delivery-5-days</language>
                <language key="message" locale="ar">delivery||Delivery||You can wait 5 days for delivery, but just barely.||icon-delivery-5-days</language>
            </level>
            <level value="7 days">
                <language key="description" locale="en">You're not so impatient that 7 days will kill you to wait for delivery.</language>
                <language key="description" locale="ar">You're not so impatient that 7 days will kill you to wait for delivery.</language>
                <language key="displayname" locale="en">7 days</language>
                <language key="displayname" locale="ar">7 days</language>
                <language key="icon" locale="en">icon-delivery-7-days</language>
                <language key="icon" locale="ar">icon-delivery-7-days</language>
                <language key="message" locale="en">delivery||Delivery||You're not so impatient that 7 days will kill you to wait for delivery.||icon-delivery-7-days</language>
                <language key="message" locale="ar">delivery||Delivery||You're not so impatient that 7 days will kill you to wait for delivery.||icon-delivery-7-days</language>
            </level>
            <language key="description" locale="en">For some people, speed is of the essence and for others, they can wait until the cows come home!  So the question is, how impatient are you?</language>
            <language key="description" locale="ar">For some people, speed is of the essence and for others, they can wait until the cows come home!  So the question is, how impatient are you?</language>
            <language key="displayname" locale="en">How fast do you want your product delivered to you?</language>
            <language key="displayname" locale="ar">How fast do you want your product delivered to you?</language>
            <language key="icon" locale="en">icon-delivery</language>
            <language key="icon" locale="ar">icon-delivery</language>
            <language key="instructions" locale="en">Select the delivery speed most important to you.</language>
            <language key="instructions" locale="ar">Select the delivery speed most important to you.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.title" locale="ar">What Are Your Preferences?</language>
            <language key="help.body" locale="en"><![CDATA[<p>This question asks you to choose your top preference from a set of several options.
                <br/>
                <br/>
                Click on or tap your top selection.
            </p>]]>
            </language>
            <language key="help.body" locale="ar"><![CDATA[<p>This question asks you to choose your top preference from a set of several options.
                <br/>
                <br/>
                Click on or tap your top selection.
            </p>]]>
            </language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.gotit" locale="ar">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image" locale="ar">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="help.assets.image.alt" locale="ar">Help content image</language>
            <language key="group" locale="en"/>
            <language key="group" locale="ar"/>
            <language key="shortname.levels" locale="en">Delivery</language>
            <language key="shortname.levels" locale="ar">Delivery</language>
            <language key="shortname" locale="en">Delivery</language>
            <language key="shortname" locale="ar">Delivery</language>
            <language key="message" locale="en">delivery||You're not so impatient that 7 days will kill you to wait for delivery.||icon-delivery-7-days</language>
            <language key="message" locale="ar">delivery||You're not so impatient that 7 days will kill you to wait for delivery.||icon-delivery-7-days</language>
            <profile key="groupwidget" value="single-select"/>
            <profile key="groupwidget.showoptiontext" type="String" value="true"/>
        </attribute>
        <attribute name="price" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="number" unacceptables-allowed="true">
            <level value="0">
                <language key="description" locale="en">I am not willing to spend any amount of money per month.</language>
                <language key="description" locale="ar">I am not willing to spend any amount of money per month.</language>
                <language key="displayname" locale="en">&#36;0</language>
                <language key="displayname" locale="ar">&#36;0</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You want to spend no money at all and like things best that are free!||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You want to spend no money at all and like things best that are free!||icon-price-med</language>
            </level>
            <level value="25">
                <language key="description" locale="en">I am willing to spend up to &#36;25 per month.</language>
                <language key="description" locale="ar">I am willing to spend up to &#36;25 per month.</language>
                <language key="displayname" locale="en">&#36;25</language>
                <language key="displayname" locale="ar">&#36;25</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;25 per month.||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You are willing to spend up to &#36;25 per month.||icon-price-med</language>
            </level>
            <level value="50">
                <language key="description" locale="en">I am willing to spend up to &#36;50 per month.</language>
                <language key="description" locale="ar">I am willing to spend up to &#36;50 per month.</language>
                <language key="displayname" locale="en">&#36;50</language>
                <language key="displayname" locale="ar">&#36;50</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;50 per month.||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You are willing to spend up to &#36;50 per month.||icon-price-med</language>
            </level>
            <level value="75">
                <language key="description" locale="en">I am willing to spend up to &#36;75 per month.</language>
                <language key="description" locale="ar">I am willing to spend up to &#36;75 per month.</language>
                <language key="displayname" locale="en">&#36;75</language>
                <language key="displayname" locale="ar">&#36;75</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;75 per month.||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You are willing to spend up to &#36;75 per month.||icon-price-med</language>
            </level>
            <level value="100">
                <language key="description" locale="en">I am willing to spend up to &#36;100 per month.</language>
                <language key="description" locale="ar">I am willing to spend up to &#36;100 per month.</language>
                <language key="displayname" locale="en">&#36;100</language>
                <language key="displayname" locale="ar">&#36;100</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;100 per month.||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You are willing to spend up to &#36;100 per month.||icon-price-med</language>
            </level>
            <level value="125">
                <language key="description" locale="en">I am willing to spend up to &#36;125 per month.</language>
                <language key="description" locale="ar">I am willing to spend up to &#36;125 per month.</language>
                <language key="displayname" locale="en">&#36;125</language>
                <language key="displayname" locale="ar">&#36;125</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You are willing to spend up to &#36;125 per month.||icon-price-med</language>
            </level>
            <level value="150">
                <language key="description" locale="en">I am willing to spend up to &#36;150 per month.</language>
                <language key="description" locale="ar">I am willing to spend up to &#36;150 per month.</language>
                <language key="displayname" locale="en">&#36;150</language>
                <language key="displayname" locale="ar">&#36;150</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            </level>
            <level value="175">
                <language key="description" locale="en">I am willing to spend up to &#36;175 per month.</language>
                <language key="description" locale="ar">I am willing to spend up to &#36;175 per month.</language>
                <language key="displayname" locale="en">&#36;175</language>
                <language key="displayname" locale="ar">&#36;175</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;175 per month.||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You are willing to spend up to &#36;175 per month.||icon-price-med</language>
            </level>
            <level value="200">
                <language key="description" locale="en">I am willing to spend up to &#36;200 per month.</language>
                <language key="description" locale="ar">I am willing to spend up to &#36;200 per month.</language>
                <language key="displayname" locale="en">&#36;200</language>
                <language key="displayname" locale="ar">&#36;200</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="icon" locale="ar">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;200 per month, but no more than that!||icon-price-med</language>
                <language key="message" locale="ar">price||Price||You are willing to spend up to &#36;200 per month, but no more than that!||icon-price-med</language>
            </level>
            <language key="description" locale="en">This is the amount in dollars that you would like to spend per month.</language>
            <language key="description" locale="ar">This is the amount in dollars that you would like to spend per month.</language>
            <language key="displayname" locale="en">What is the amount of money that you would be willing to spend each month?</language>
            <language key="displayname" locale="ar">What is the amount of money that you would be willing to spend each month?</language>
            <language key="group" locale="en"/>
            <language key="group" locale="ar"/>
            <language key="shortname.levels" locale="en">Price</language>
            <language key="shortname.levels" locale="ar">Price</language>
            <language key="shortname" locale="en">Price</language>
            <language key="shortname" locale="ar">Price</language>
            <language key="minicon" locale="en">icon-price-low</language>
            <language key="minicon" locale="ar">icon-price-low</language>
            <language key="maxicon" locale="en">icon-price-high</language>
            <language key="maxicon" locale="ar">icon-price-high</language>
            <language key="mindescription" locale="en">No monthly premium paid for prescription drug coverage.</language>
            <language key="mindescription" locale="ar">No monthly premium paid for prescription drug coverage.</language>
            <language key="maxdescription" locale="en">$200 monthly premium paid for prescription drug coverage.</language>
            <language key="maxdescription" locale="ar">$200 monthly premium paid for prescription drug coverage.</language>
            <language key="icon" locale="en">assets/icons/price.png</language>
            <language key="icon" locale="ar">assets/icons/price.png</language>
            <language key="instructions" locale="en">Use the controls to indicate your minimum and maximum prices.</language>
            <language key="instructions" locale="ar">Use the controls to indicate your minimum and maximum prices.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.title" locale="ar">What Are Your Preferences?</language>
            <language key="help.body" locale="en">This question asks you to choose your top preference from a set of several options. Click on the single left or right arrow to incrementally adjust the option. Clicking on the double right arrow will jump to the highest option of $200. Clicking on the double left arrow will jump to the lowest option multiple of $0.</language>
            <language key="help.body" locale="ar">This question asks you to choose your top preference from a set of several options. Click on the single left or right arrow to incrementally adjust the option. Clicking on the double right arrow will jump to the highest option of $200. Clicking on the double left arrow will jump to the lowest option multiple of $0.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.gotit" locale="ar">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image" locale="ar">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="help.assets.image.alt" locale="ar">Help content image</language>
            <language key="message" locale="en">price||You are willing to spend up to &#36;200 per month, but no more than that!||icon-price-med</language>
            <language key="message" locale="ar">price||You are willing to spend up to &#36;200 per month, but no more than that!||icon-price-med</language>
            <profile key="horizontalslider" value="price"/>
            <profile key="groupwidget" value="counter"/>
        </attribute>
        <attribute name="Hidden Price" implicit="descending" must-have-allowed="false" skip-allowed="false" type="price" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">0</language>
                <language key="description" locale="ar">0</language>
                <language key="displayname" locale="en">0</language>
                <language key="displayname" locale="ar">0</language>
                <language key="icon" locale="en"/>
                <language key="icon" locale="ar"/>
            </level>
            <level value="1">
                <language key="description" locale="en">1</language>
                <language key="description" locale="ar">1</language>
                <language key="displayname" locale="en">1</language>
                <language key="displayname" locale="ar">1</language>
                <language key="icon" locale="en"/>
                <language key="icon" locale="ar"/>
            </level>
            <language key="description" locale="en">Hidden Price</language>
            <language key="description" locale="ar">Hidden Price</language>
            <language key="displayname" locale="en">Hidden Price</language>
            <language key="displayname" locale="ar">Hidden Price</language>
            <language key="group" locale="en"/>
            <language key="group" locale="ar"/>
            <profile key="hidden" value="true"/>
        </attribute>
        <!--Restricted Pairs-->
        <restricted-set name="1">
            <restricted-attribute name="color">
                <restricted-level value="orange"/>
                <restricted-level value="red"/>
                <restricted-level value="purple"/>
                <restricted-level value="blue"/>
                <restricted-level value="green"/>
                <restricted-level value="maroon"/>
                <restricted-level value="yellow"/>
                <restricted-level value="gray"/>
                <restricted-level value="black"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="2">
            <restricted-attribute name="size">
                <restricted-level value="small"/>
                <restricted-level value="large"/>
                <restricted-level value="medium"/>
                <restricted-level value="xlarge"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="3">
            <restricted-attribute name="weight">
                <restricted-level value="10"/>
                <restricted-level value="0"/>
                <restricted-level value="5"/>
                <restricted-level value="15"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="4">
            <restricted-attribute name="intuition">
                <restricted-level value="grade school"/>
                <restricted-level value="doctorate"/>
                <restricted-level value="high school"/>
                <restricted-level value="completely intuitive"/>
                <restricted-level value="college"/>
                <restricted-level value="graduate degree"/>
                <restricted-level value="junior high school"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="5">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="delivery">
                <restricted-level value="5 days"/>
                <restricted-level value="7 days"/>
                <restricted-level value="next day"/>
                <restricted-level value="3 days"/>
                <restricted-level value="same day"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="6">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="price">
                <restricted-level value="125"/>
                <restricted-level value="150"/>
                <restricted-level value="0"/>
                <restricted-level value="175"/>
                <restricted-level value="200"/>
                <restricted-level value="25"/>
                <restricted-level value="100"/>
                <restricted-level value="75"/>
                <restricted-level value="50"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="7">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="basepay">
                <restricted-level value="0"/>
                <restricted-level value=".5"/>
                <restricted-level value="1"/>
                <restricted-level value="1.5"/>
                <restricted-level value="2"/>
                <restricted-level value="2.5"/>
                <restricted-level value="3"/>
                <restricted-level value="3.5"/>
                <restricted-level value="4"/>
                <restricted-level value="5"/>
            </restricted-attribute>
        </restricted-set>
        <!--Subgame-->
        <subgame name="e2e_prototype" version-label="0">
            <subgame-attribute name="color">
                <subgame-level value="red"/>
                <subgame-level value="orange"/>
                <subgame-level value="yellow"/>
                <subgame-level value="green"/>
                <subgame-level value="gray"/>
                <subgame-level value="blue"/>
                <subgame-level value="purple"/>
                <subgame-level value="black"/>
                <subgame-level value="maroon"/>
            </subgame-attribute>
            <subgame-attribute name="basepay">
                <subgame-level value="0"/>
                <subgame-level value=".5"/>
                <subgame-level value="1"/>
                <subgame-level value="1.5"/>
                <subgame-level value="2"/>
                <subgame-level value="2.5"/>
                <subgame-level value="3"/>
                <subgame-level value="3.5"/>
                <subgame-level value="4"/>
                <subgame-level value="5"/>
            </subgame-attribute>
            <subgame-attribute name="size">
                <subgame-level value="small"/>
                <subgame-level value="medium"/>
                <subgame-level value="large"/>
                <subgame-level value="xlarge"/>
            </subgame-attribute>
            <subgame-attribute name="weight">
                <subgame-level value="0"/>
                <subgame-level value="5"/>
                <subgame-level value="10"/>
                <subgame-level value="15"/>
            </subgame-attribute>
            <subgame-attribute name="intuition">
                <subgame-level value="completely intuitive"/>
                <subgame-level value="grade school"/>
                <subgame-level value="junior high school"/>
                <subgame-level value="high school"/>
                <subgame-level value="college"/>
                <subgame-level value="graduate degree"/>
                <subgame-level value="doctorate"/>
            </subgame-attribute>
            <subgame-attribute name="delivery">
                <subgame-level value="same day"/>
                <subgame-level value="next day"/>
                <subgame-level value="3 days"/>
                <subgame-level value="5 days"/>
                <subgame-level value="7 days"/>
            </subgame-attribute>
            <subgame-attribute name="price">
                <subgame-level value="0"/>
                <subgame-level value="25"/>
                <subgame-level value="50"/>
                <subgame-level value="75"/>
                <subgame-level value="100"/>
                <subgame-level value="125"/>
                <subgame-level value="150"/>
                <subgame-level value="175"/>
                <subgame-level value="200"/>
            </subgame-attribute>
            <subgame-attribute name="Hidden Price">
                <subgame-level value="0"/>
                <subgame-level value="1"/>
            </subgame-attribute>
            <naming name="e2e_prototype" by-owner="true" type="bfd.domain.game.Game" owner="[Client]e2e_prototype/[Game]e2e_prototype"/>
        </subgame>
        <!--Misc Client Files-->
        <resource name="main" value="truechoice/app/clients/e2e_prototype/4.3.2/">
            <language key="browserTitle" locale="en">e2e_prototype - MB</language>
            <language key="browserTitle" locale="ar">e2e_prototype - MB</language>
        </resource>
        <!--game description-->
        <resource name="system">
            <language key="error.scrollbarnotmoved.message" locale="en">Are you sure you have scrolled down to answer all of the questions? The scroll bar is located on the right side of your screen. Click 'yes' to continue or 'no' to modify your answers.</language>
            <language key="error.scrollbarnotmoved.message" locale="ar">Are you sure you have scrolled down to answer all of the questions? The scroll bar is located on the right side of your screen. Click 'yes' to continue or 'no' to modify your answers.</language>
            <language key="title.attention" locale="en">Attention</language>
            <language key="title.attention" locale="ar">Attention</language>
            <language key="error.helpdeskemail.title" locale="en">Attention</language>
            <language key="error.helpdeskemail.title" locale="ar">انتباه</language>
            <language key="error.helpdeskemail.message" locale="en">Your last request failed because of a communications problem with our servers.
            &lt;br&gt;&lt;br&gt;Please restart by refreshing this webpage.  We apologize for the inconvenience.
            &lt;br&gt;&lt;br&gt;Before you try again, please make sure your network connection is active and reconfirm that you are connected to the internet.
            &lt;br&gt;&lt;br&gt;For further assistance, please email</language>
            <language key="error.helpdeskemail.message" locale="ar">أبجد هوز أبجد هوز أبجد هوزأبجد هوزأبجد هوزأبجد هوز</language>
            <language key="error.helpdeskemail.reference" locale="en">Reference</language>
            <language key="error.helpdeskemail.reference" locale="ar">مرجع</language>
            <language key="retry" locale="en">Retry</language>
            <language key="retry" locale="ar">Retry</language>
            <language key="error.mustscale.message" locale="en">Please change the value for at least one option.</language>
            <language key="error.mustscale.message" locale="ar">Please change the value for at least one option.</language>
            <language key="error.emailinvalid.title" locale="en">Invalid Email</language>
            <language key="error.emailinvalid.title" locale="ar">Invalid Email</language>
            <language key="error.emailinvalid.message" locale="en">Please verify that your email address is correct and try again.</language>
            <language key="error.emailinvalid.message" locale="ar">Please verify that your email address is correct and try again.</language>
            <language key="error.missingrequired.title" locale="en">Questions Not Answered</language>
            <language key="error.missingrequired.title" locale="ar">Questions Not Answered</language>
            <language key="error.missingrequired.message" locale="en">You have not answered all of the questions on this page. Please make sure the question marked with an asterisk (*) has been answered.</language>
            <language key="error.missingrequired.message" locale="ar">You have not answered all of the questions on this page. Please make sure the question marked with an asterisk (*) has been answered.</language>
            <language key="error.minattributesnotselected.title" locale="en">Attention</language>
            <language key="error.minattributesnotselected.title" locale="ar">Attention</language>
            <language key="error.minattributesnotselected.message" locale="en">Please select at least 3 options to continue.</language>
            <language key="error.minattributesnotselected.message" locale="ar">Please select at least 3 options to continue.</language>
            <language key="devicenotsupported.body" locale="en">Your screen resolution is insufficient to view this application. Must be at least 1024x768.&lt;br&gt;&lt;br&gt;Please try on a device with a larger screen.</language>
            <language key="devicenotsupported.body" locale="ar">Your screen resolution is insufficient to view this application. Must be at least 1024x768.&lt;br&gt;&lt;br&gt;Please try on a device with a larger screen.</language>
            <language key="devicenotsupported.footer" locale="en">Should you require assistance, please contact us at &lt;a href="mailto:helpdesk@truechoicesolutions.com?subject=Device%20Support"&gt;helpdesk@truechoicesolutions.com&lt;/a&gt;</language>
            <language key="devicenotsupported.footer" locale="ar">Should you require assistance, please contact us at &lt;a href="mailto:helpdesk@truechoicesolutions.com?subject=Device%20Support"&gt;helpdesk@truechoicesolutions.com&lt;/a&gt;</language>
            <!-- Director alert -->
            <language key="error.director.title" locale="en">Response required</language>
            <language key="error.director.title" locale="ar">Response required</language>
			      <language key="error.director.message" locale="en">To proceed further, please select an option and click or tap "Next" to continue.</language>
			      <language key="error.director.message" locale="ar">To proceed further, please select an option and click or tap "Next" to continue.</language>
            <!-- restart alert -->
            <language key="restart.title" locale="en">ATTENTION - You are about to return to the start of the survey.</language>
            <language key="restart.title" locale="ar">ATTENTION - You are about to return to the start of the survey.</language>
            <language key="restart.message" locale="en">Hey! Testing restart alert popup and restart application feature. Click "Yes" to restart the application. Click on "No" to remain in this stage.</language>
            <language key="restart.message" locale="ar">Hey! Testing restart alert popup and restart application feature. Click "Yes" to restart the application. Click on "No" to remain in this stage.</language>
            <!--general-->
            <language key="next" locale="en">Next</language>
            <language key="next" locale="ar">Next</language>
            <language key="back" locale="en">Back</language>
            <language key="back" locale="ar">Back</language>
            <!-- <language key="help" locale="en"></language> -->
            <!-- <language key="help" locale="ar"></language> -->
            <language key="skip" locale="en">SKIP</language>
            <language key="skip" locale="ar">SKIP</language>
            <language key="alert.button.close" locale="en">Close</language>
            <language key="alert.button.close" locale="ar">Close</language>
            <language key="alert.button.ok" locale="en">Ok</language>
            <language key="alert.button.ok" locale="ar">Ok</language>
            <language key="alert.button.yes" locale="en">Yes</language>
            <language key="alert.button.yes" locale="ar">Yes</language>
            <language key="alert.button.no" locale="en">No</language>
            <language key="alert.button.no" locale="ar">No</language>
            <language key="leastpreferred" locale="en">Least</language>
            <language key="leastpreferred" locale="ar">Least</language>
            <language key="mostpreferred" locale="en">Most</language>
            <language key="mostpreferred" locale="ar">Most</language>
            <language key="disclaimer" locale="en">Copyright © 2020 TrueChoice Solutions, Inc. | <![CDATA[<a href="//www.truechoicesolutions.com/Privacy-Policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>]]>.</language>
            <language key="disclaimer" locale="ar">Copyright © 2020 TrueChoice Solutions, Inc. | <![CDATA[<a href="//www.truechoicesolutions.com/Privacy-Policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>]]>.</language>
            <language key="loading" locale="en">Loading...</language>
            <language key="loading" locale="ar">Loading...</language>
            <language key="assets.main.loading" locale="en">assets/main/loading.gif</language>
            <language key="assets.main.loading" locale="ar">assets/main/loading.gif</language>
            <language key="preference.importance.labels" locale="en">NOT IMPORTANT||SOMEWHAT IMPORTANT||IMPORTANT||VERY IMPORTANT||EXTREMELY IMPORTANT</language>
            <language key="preference.importance.labels" locale="ar">NOT IMPORTANT||SOMEWHAT IMPORTANT||IMPORTANT||VERY IMPORTANT||EXTREMELY IMPORTANT</language>
            <!-- implicit warning -->
            <language key="implicitwarning.moveup.message" locale="en">Note: You have rated a more valued option equal to or below a less valued one.</language>
            <language key="implicitwarning.moveup.message" locale="ar">Note: You have rated a more valued option equal to or below a less valued one.</language>
            <language key="implicitwarning.moveup.title" locale="en">Move up.</language>
            <language key="implicitwarning.moveup.title" locale="ar">Move up.</language>
            <language key="implicitwarning.movedown.message" locale="en">Note: You have rated a less valued option equal to or above a more valued one.</language>
            <language key="implicitwarning.movedown.message" locale="ar">Note: You have rated a less valued option equal to or above a more valued one.</language>
            <language key="implicitwarning.movedown.title" locale="en">Move down.</language>
            <language key="implicitwarning.movedown.title" locale="ar">Move down.</language>
            <language key="implicitwarning.message" locale="en">The sliders are now out of order. Would you like to move the slider to its original position?</language>
            <language key="implicitwarning.message" locale="ar">The sliders are now out of order. Would you like to move the slider to its original position?</language>
            <language key="implicitwarning.title" locale="en">Attention</language>
            <language key="implicitwarning.title" locale="ar">Attention</language>
            <language key="implicitwarning.morebelowless.message" locale="en">Did you know that you have rated a more valued option equal to or below a less valued one? Do you want to proceed?</language>
            <language key="implicitwarning.morebelowless.message" locale="ar">Did you know that you have rated a more valued option equal to or below a less valued one? Do you want to proceed?</language>
            <language key="implicitwarning.lessabovemore.message" locale="en">Did you know that you have rated a less valued option equal to or above a more valued one? Do you want to proceed?</language>
            <language key="implicitwarning.lessabovemore.message" locale="ar">Did you know that you have rated a less valued option equal to or above a more valued one? Do you want to proceed?</language>
            <!--stage 2-->
            <language key="attributes.leastpreferred" locale="en">Less Important</language>
            <language key="attributes.leastpreferred" locale="ar">Less Important</language>
            <language key="attributes.mostpreferred" locale="en">More Important</language>
            <language key="attributes.mostpreferred" locale="ar">More Important</language>
            <!--stage 3-->
            <language key="tradeoffs.vs" locale="en">OR</language>
            <language key="tradeoffs.vs" locale="ar">OR</language>
            <language key="tradeoffs.offer1" locale="en">Option 1</language>
            <language key="tradeoffs.offer1" locale="ar">Option 1</language>
            <language key="tradeoffs.offer2" locale="en">Option 2</language>
            <language key="tradeoffs.offer2" locale="ar">Option 2</language>
            <language key="tradeoffs.preference.labels" locale="en">Greatly Prefer Option 1||Prefer Option 1||Slightly Prefer Option 1||Indifferent||Slightly Prefer Option 2||Prefer Option 2||Greatly Prefer Option 2</language>
            <language key="tradeoffs.preference.labels" locale="ar">Greatly Prefer Option 1||Prefer Option 1||Slightly Prefer Option 1||Indifferent||Slightly Prefer Option 2||Prefer Option 2||Greatly Prefer Option 2</language>
            <!-- Stage 4 -->
            <language key="error.requiredinput.label" locale="en">Your Answer Is Invalid</language>
            <language key="error.requiredinput.label" locale="ar">Your Answer Is Invalid</language>
            <!-- Percent Allocation -->
            <language key="percentmeter.totalmaxalert" locale="en">Maximum of 100% has been reached</language>
            <language key="percentmeter.totalmaxalert" locale="ar">Maximum of 100% has been reached</language>
            <language key="percentmeter.valuedisplaytext" locale="en">/ 100%</language>
            <language key="percentmeter.valuedisplaytext" locale="ar">/ 100%</language>
            <language key="error.sumvaluesinvalid.title" locale="en">Invalid sum</language>
            <language key="error.sumvaluesinvalid.title" locale="ar">Invalid sum</language>
            <language key="error.sumvaluesinvalid.message" locale="en">Values must equate to 100</language>
            <language key="error.sumvaluesinvalid.message" locale="ar">Values must equate to 100</language>
            <!-- disclosure popup -->
            <language key="disclosure.title" locale="en">Information</language>
            <language key="disclosure.title" locale="ar">Information</language>
            <language key="disclosure.body" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.&lt;br&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.</language>
            <language key="disclosure.body" locale="ar">Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.&lt;br&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.</language>
            <language key="disclosure.gotit" locale="en">Close</language>
            <language key="disclosure.gotit" locale="ar">Close</language>
            <!-- Set flag to true to animate the icons -->
            <!-- Warning to user to confirm navigating away from app -->
            <language key="warning.leavingapp.message" locale="en">Warning! You are about to leave the app and lose all data</language>
            <language key="warning.leavingapp.message" locale="ar">Warning! You are about to leave the app and lose all data</language>
            <!-- tracking -->
            <!-- Start facebook tracking-->
            <!-- NOTE ID is for TCS test account -->
            <!-- Need "true" and valid "ID" -->
			<profile key="externalanalytics.fb" value="false"/>
			<profile key="externalanalytics.fb.id" value="1609058966064965"/>
            <!-- End facebook tracking-->
            <!-- optimize for PC and Tablets: true/false -->
            <profile key="devicenotsupported" value="false"/>
            <!-- request processor -->
            <profile key="instance-attribute-requestprocessor" value="averaging"/>
            <!-- Notification Bar -->
            <profile key="notificationbar.timeout" value="4000"/>
        </resource>
        <resource name="controls">
            <resource-element value="welcome"/>
            <resource-element value="consent"/>
            <resource-element value="attrselect"/>
            <resource-element value="intro"/>
            <resource-element value="onboardintro"/>
            <resource-element value="prestage1"/>
            <resource-element value="levels"/>
            <resource-element value="prestage2"/>
            <resource-element value="attributes"/>
            <resource-element value="prestage3"/>
            <resource-element value="tradeoffs"/>
            <resource-element value="prestage4"/>
            <resource-element value="aboutyou"/>
            <resource-element value="survey1"/>
            <resource-element value="survey2"/>
            <resource-element value="output"/>
        </resource>
        <!-- UID passed in from URL -->
        <resource name="url">
            <resource-element value="uid" />
        </resource>
        <!--stage description-->
        <resource name="welcome" value="display">
            <language key="next" locale="en">Begin</language>
            <language key="next" locale="ar">التفاصيل</language>
            <language key="header" locale="en">TCS 4.0: Innovation at Work</language>
            <language key="header" locale="ar">و سأعرض مثال حي لهذا، من منا لم يتحمل جهد</language>
            <language key="title" locale="en">Understanding your product and service needs is important to us.</language>
            <language key="title" locale="ar">لكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار.</language>
            <language key="body" locale="en">The product you choose is at the very core of your business and one of the most important decision you will have to make. Although the perfect product may or may not exist, there are definitely ways to minimize risk by choosing a product that have more going for it, than against it. Using specific criteria can help you better understand the product you are considering and increase your overall chances of success.</language>
            <language key="body" locale="ar">لكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة البشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعرها بصورة أكثر عقلانية ومنطقية فيعرضهم هذا لمواجهة الظروف.</language>
            <language key="time.image.text" locale="en">It only takes a few minutes...</language>
            <language key="time.image.text" locale="ar">وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Welcome:&lt;/b&gt; welcome-1</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;وتمجيد الألم:&lt;/b&gt;  لديه</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-welcome</language>
            <language key="disclaimer" locale="en">Copyright &#9400; 2020 TrueChoice Solutions, Inc.    | <![CDATA[<a href="//www.truechoicesolutions.com/privacy-policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>]]>&lt;br&gt;The Starbucks word mark and the Starbucks Logo are trademarks of Starbucks Corporation. Starbucks is also the owner of the Copyrights in the Starbucks Logo and the Starbucks Card designs. All rights reserved.Starbucks is not a participating partner or sponsor in this offer.</language>
            <language key="disclaimer" locale="ar">استنكار &#9400; 2020 النشوة وتمجيد الألم نشأت    | <![CDATA[<a href="//www.truechoicesolutions.com/privacy-policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>]]>&lt;br&gt;و سأعرض مثال حي لهذا، من منا لم يتحمل جهد بدني شاق إلا من أجل الحصول على ميزة أو فائدة؟ ولكن من لديه الحق أن ينتقد شخص ما أراد أن يشعر بالسعادة التي لا تشوبها عواقب أليمة أو آخر أراد أن.</language>
            <language key="templateurl" locale="en">welcome-1.tpl.html</language>
            <language key="templateurl" locale="ar">welcome-1.tpl.html</language>
        </resource>
        <resource name="consent" value="survey">
            <resource-element value="Consent Title Label"/>
            <resource-element value="Consent Label One"/>
            <resource-element value="Consent One Question"/>
            <resource-element value="Consent Label Two"/>
            <resource-element value="Consent Two Question"/>
            <resource-element value="Consent Contact Info One Label"/>
            <resource-element value="Consent Contact Info Two Label"/>
            <language key="help.title" locale="en">Attention</language>
            <language key="help.title" locale="ar">Attention</language>
            <language key="help.body" locale="en"><![CDATA[<p>Your consent is required to continue with this application.</p> <br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="help.body" locale="ar"><![CDATA[<p>Your consent is required to continue with this application.</p> <br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.label" locale="ar">Close</language>
            <language key="help.gotit" locale="en">OK</language>
            <language key="help.gotit" locale="ar">OK</language>
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.message" locale="ar">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-welcome</language>
            <language key="error.missingrequired.title" locale="en">Attention</language>
            <language key="error.missingrequired.title" locale="ar">Attention</language>
            <language key="alert.button.ok" locale="en">OK</language>
            <language key="alert.button.ok" locale="ar">OK</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image" locale="ar">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="help.assets.image.alt" locale="ar">Help content image</language>
            <language key="error.missingrequired.message" locale="en"><![CDATA[<p>Your consent is required to continue with this application.</p> <br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="error.missingrequired.message" locale="ar"><![CDATA[<p>Your consent is required to continue with this application.</p> <br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="templateurl" locale="en">survey_consent.tpl.html</language>
            <language key="templateurl" locale="ar">survey_consent.tpl.html</language>
            <profile key="help" value="true"/>
        </resource>
        <resource name="attrselect" value="attributeselect">
            <resource-element value="Attribute Select Label One"/>
            <resource-element value="Attribute Select Question"/>
            <language key="title" locale="en">We'd like to understand your preferences for different tools and solutions that could potentially benefit your business</language>
            <language key="title" locale="ar">We'd like to understand your preferences for different tools and solutions that could potentially benefit your business</language>
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.message" locale="ar">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-welcome</language>
            <language key="assets.content.image" locale="en">assets/stages/display/intro/content/image.png</language>
            <language key="assets.content.image" locale="ar">assets/stages/display/intro/content/image.png</language>
            <language key="assets.content.image.alt" locale="en">Content image</language>
            <language key="assets.content.image.alt" locale="ar">Content image</language>
            <language key="templateurl" locale="en">attribute-select.tpl.html</language>
            <language key="templateurl" locale="ar">attribute-select.tpl.html</language>
            <profile key="minattributes" value="3"/>
            <profile key="useselectalloption" value="true"/>
        </resource>        
        <resource name="intro" value="display">
            <language key="title" locale="en">Let's get started!</language>
            <language key="title" locale="ar">Let's get started!</language>
            <language key="subtitle" locale="en">The purpose of this survey is to understand what you prefer and value most.</language>
            <language key="subtitle" locale="ar">The purpose of this survey is to understand what you prefer and value most.</language>
            <language key="body" locale="en"><![CDATA[
                <b>This exercise will take about 10 minutes to complete.</b>
                <br/>
                <br/>
                <b>Your responses are private and confidential - there is no risk in being totally honest.</b>
                <br/>
                <br/>
                <b>Please Note:</b>
                <br/>
                <br/>
                <p><span>&#8226;</span> This exercise needs to be finished in one session. You can't save your work, come back, and complete it later.</p>
                <br/>
                <p><span>&#8226;</span> This tool will time out after 30 minutes of inactivity. If that happens, you will have to start over from the beginning.</p>
                ]]>
            </language><language key="body" locale="ar"><![CDATA[
                <b>This exercise will take about 10 minutes to complete.</b>
                <br/>
                <br/>
                <b>Your responses are private and confidential - there is no risk in being totally honest.</b>
                <br/>
                <br/>
                <b>Please Note:</b>
                <br/>
                <br/>
                <p><span>&#8226;</span> This exercise needs to be finished in one session. You can't save your work, come back, and complete it later.</p>
                <br/>
                <p><span>&#8226;</span> This tool will time out after 30 minutes of inactivity. If that happens, you will have to start over from the beginning.</p>
                ]]>
            </language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Introduction&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;Introduction&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-welcome</language>
            <language key="templateurl" locale="en">display-2.tpl.html</language>
            <language key="templateurl" locale="ar">display-2.tpl.html</language>
        </resource>
        <resource name="onboardintro" value="display">
            <language key="title" locale="en">Here's what's coming up.</language>
            <language key="title" locale="ar">Here's what's coming up.</language>
            <language key="header" locale="en">This exercise is divided into three sections:</language>
            <language key="header" locale="ar">This exercise is divided into three sections:</language>
            <language key="footer" locale="en">&lt;b&gt;If you need help, click or tap on the &lt;span class="tooltip-indicator-no-pointer"&gt;&lt;/span&gt; icons throughout the application.&lt;/b&gt;</language>
            <language key="footer" locale="ar">&lt;b&gt;If you need help, click or tap on the &lt;span class="tooltip-indicator-no-pointer"&gt;&lt;/span&gt; icons throughout the application.&lt;/b&gt;</language>
            <language key="content.pane1.image" locale="en">assets/stages/display/onboardIntro/content/part1.gif</language>
            <language key="content.pane1.image" locale="ar">assets/stages/display/onboardIntro/content/part1.gif</language>
            <language key="content.pane1small.image" locale="en">assets/stages/display/onboardIntro/content/part1_320.gif</language>
            <language key="content.pane1small.image" locale="ar">assets/stages/display/onboardIntro/content/part1_320.gif</language>
            <language key="content.pane1.image.alt" locale="en">Content image</language>
            <language key="content.pane1.image.alt" locale="ar">Content image</language>
            <language key="content.pane1.text" locale="en">&lt;b&gt;1. What options do you prefer?&lt;/b&gt;&lt;br&gt;Share your preferences across a range of offerings within each category.</language>
            <language key="content.pane1.text" locale="ar">&lt;b&gt;1. What options do you prefer?&lt;/b&gt;&lt;br&gt;Share your preferences across a range of offerings within each category.</language>
            <language key="content.pane2.image" locale="en">assets/stages/display/onboardIntro/content/part2.gif</language>
            <language key="content.pane2.image" locale="ar">assets/stages/display/onboardIntro/content/part2.gif</language>
            <language key="content.pane2small.image" locale="en">assets/stages/display/onboardIntro/content/part2_320.gif</language>
            <language key="content.pane2small.image" locale="ar">assets/stages/display/onboardIntro/content/part2_320.gif</language>
            <language key="content.pane2.image.alt" locale="en">Content image</language>
            <language key="content.pane2.image.alt" locale="ar">Content image</language>
            <language key="content.pane2.text" locale="en">&lt;b&gt;2. How important is each category?&lt;/b&gt;&lt;br&gt;Rate the importance of each category relative to the others.</language>
            <language key="content.pane2.text" locale="ar">&lt;b&gt;2. How important is each category?&lt;/b&gt;&lt;br&gt;Rate the importance of each category relative to the others.</language>
            <language key="content.pane3.image" locale="en">assets/stages/display/onboardIntro/content/part3.gif</language>
            <language key="content.pane3.image" locale="ar">assets/stages/display/onboardIntro/content/part3.gif</language>
            <language key="content.pane3.image.alt" locale="en">Content image</language>
            <language key="content.pane3.image.alt" locale="ar">Content image</language>
            <language key="content.pane3.text" locale="en">&lt;b&gt;3. How would you trade off options?&lt;/b&gt;&lt;br&gt;For pairs of options, tell us how much you prefer one over the other.</language>
            <language key="content.pane3.text" locale="ar">&lt;b&gt;3. How would you trade off options?&lt;/b&gt;&lt;br&gt;For pairs of options, tell us how much you prefer one over the other.</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Introduction&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;Introduction&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-welcome</language>
            <language key="templateurl" locale="en">onboardIntro.tpl.html</language>
            <language key="templateurl" locale="ar">onboardIntro.tpl.html</language>
        </resource>
        <resource name="prestage1" value="display">
            <language key="title" locale="en">Part 1:</language>
            <language key="title" locale="ar">Part 1:</language>
            <language key="messagetitle" locale="en">What do you value?</language>
            <language key="messagetitle" locale="ar">What do you value?</language>
            <language key="messageimage" locale="en">icon-prestage-1</language>
            <language key="messageimage" locale="ar">icon-prestage-1</language>
            <language key="body" locale="en">&lt;b&gt;We are going to ask you about your preferences for option within a number of categories.&lt;/b&gt; For each option shown, select a value between 0 and 10. The lower the number, the less you prefer an option. The higher the number, the more you prefer the option.</language>
            <language key="body" locale="ar">&lt;b&gt;We are going to ask you about your preferences for option within a number of categories.&lt;/b&gt; For each option shown, select a value between 0 and 10. The lower the number, the less you prefer an option. The higher the number, the more you prefer the option.</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Stage 1&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;Stage 1&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-level</language>
            <language key="templateurl" locale="en">display-2.tpl.html</language>
            <language key="templateurl" locale="ar">display-2.tpl.html</language>
        </resource>
        <resource name="levels" value="level">
            <language key="title" locale="en">Rate Your Preferences</language>
            <language key="title" locale="ar">ا يجلبه إلينا الأس</language>
            <language key="instructions.unordered" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the elements shown.</language>
            <language key="instructions.unordered" locale="ar">إما أن يرفض مصادر السعادة من أجل ما هو أكثر أهمية أو يتحمل الألم من أجل ألا يتحمل ما هو أسو. قب أليمة أو آخر أراد أن يتجنب</language>
            <language key="mostpreferred" locale="en">More Important</language>
            <language key="mostpreferred" locale="ar">أن يمسك</language>
            <language key="leastpreferred" locale="en">Less Important</language>
            <language key="leastpreferred" locale="ar"> سأعرض مثال حي</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="learnmore" locale="ar">تلك السعادة البشرية،</language>
            <language key="help.title" locale="en">What are we asking you to do here?</language>
            <language key="help.title" locale="ar">الألم الذي ربما تنجم عنه بعض المتعة ؟</language>
            <language key="help.body" locale="en">
                <![CDATA[<p>
                This question is asking you to state your preferences across a range of items.
                <br/>
                <br/>
                Please indicate how much you prefer or value each item – in relation to the others – by moving the slider to a GREATER or LESSER preference or value for each of the elements shown. How far you move the slider depends on how strongly you feel about the item.
                <br/>
                <br/>
                You cannot have the same preference value for all the choices shown.
                </p>]]>
            </language>
            <language key="help.body" locale="ar">
                <![CDATA[<p>
                رغباتهم فلا يدركون ما يعقبها.
                <br/>
                <br/>
                لكن لا بد أن أوضح لك أن كل هذه الأفكار المغلوطة حول استنكار  النشوة وتمجيد الألم نشأت بالفعل، وسأعرض لك التفاصيل لتكتشف حقيقة وأساس تلك السعادة البشرية، فلا أحد يرفض أو يكره أو يتجنب الشعور بالسعادة، ولكن بفضل هؤلاء الأشخاص الذين لا يدركون بأن السعادة لا بد أن نستشعر
                <br/>
                <br/>
                تنكر هؤلاء الرجال المفتونون بنشوة اللحظة الهائمون في
                </p>]]>
            </language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.gotit" locale="ar">حقيقة وأساس</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image" locale="ar">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="help.assets.image.alt" locale="ar">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Stage 1:&lt;/b&gt; Question || of ||</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;وأساس:&lt;/b&gt; لديه الحق || أن ||</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-level</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Levels</language>
            <language key="intro.title" locale="ar">المنال</language>
            <language key="intro.body" locale="en">First, we'd like to ask you about your preferences for items that inspire you create and develop a new product in areas including color, size, weight, shape and price. </language>
            <language key="intro.body" locale="ar">و سأعرض مثال حي لهذا، من منا لم يتحمل جهد بدني شاق إلا من أجل الحصول على ميزة أو فائدة؟ ولكن من لديه الحق أن ينتقد شخص ما أراد أن يشعر بالسعادة</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.label" locale="ar">أوضح</language>
            <language key="intro.image" locale="en">assets/popups/stages/level/content/image.jpg</language>
            <language key="intro.image" locale="ar">assets/popups/stages/level/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (levels)</language>
            <language key="intro.image.alt" locale="ar">Intro content image (levels)</language>
            <language key="whyguy.text" locale="en">Why am I being asked this question in this way?</language>
            <language key="whyguy.text" locale="ar">لكن لا بد أن أوضح لك أن كل</language>
            <language key="whyguy.tooltip" locale="en">We do not just want to know what you most prefer. We want to understand your preferences for all of the hypothetical options between the two extremes.</language>
            <language key="whyguy.tooltip" locale="ar">على ميزة أو فائدة؟ ولكن من لديه الحق أن</language>
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true"/>
            <profile key="notificationbar.timeout" value="4000"/>
        </resource>
        <resource name="prestage2" value="preattribute">
            <language key="title" locale="en">Part 2:</language>
            <language key="title" locale="ar">Part 2:</language>
            <language key="messagetitle" locale="en">Congratulations! You're halfway done.</language>
            <language key="messagetitle" locale="ar">Congratulations! You're halfway done.</language>
            <language key="messageimage" locale="en">icon-prestage-2</language>
            <language key="messageimage" locale="ar">icon-prestage-2</language>
            <language key="body" locale="en">In Part 1, you rated the importance of options &lt;b&gt;&lt;i&gt;within&lt;/i&gt;&lt;/b&gt; each of a number of categories. &lt;b&gt;Now it's time to rate the importance of each category &lt;i&gt;relative to the others&lt;/i&gt;.&lt;/b&gt;</language>
            <language key="body" locale="ar">In Part 1, you rated the importance of options &lt;b&gt;&lt;i&gt;within&lt;/i&gt;&lt;/b&gt; each of a number of categories. &lt;b&gt;Now it's time to rate the importance of each category &lt;i&gt;relative to the others&lt;/i&gt;.&lt;/b&gt;</language>
            <language key="instructions.mobile" locale="en">Scroll down to see all of the categories you will be rating:</language>
            <language key="instructions.mobile" locale="ar">Scroll down to see all of the categories you will be rating:</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Part 2&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;Part 2&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-attribute</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-attribute</language>
            <language key="templateurl" locale="en">pre-attribute.tpl.html</language>
            <language key="templateurl" locale="ar">pre-attribute.tpl.html</language>
        </resource>
        <resource name="attributes" value="attribute">
            <language key="title" locale="en">What's more important to you?</language>
            <language key="title" locale="ar">What's more important to you?</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="leastpreferred" locale="ar">Least Important</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="mostpreferred" locale="ar">Most Important</language>
            <language key="infodisplay.header" locale="en">Your Choices from Part 1:</language>
            <language key="infodisplay.header" locale="ar">Your Choices from Part 1:</language>
            <language key="infodisplay.header.topchoice" locale="en">Your Top Choice from Part 1:</language>
            <language key="infodisplay.header.topchoice" locale="ar">Your Top Choice from Part 1:</language>
            <language key="infodisplay.leastpreferred" locale="en">Least Preferred</language>
            <language key="infodisplay.leastpreferred" locale="ar">Least Preferred</language>
            <language key="infodisplay.mostpreferred" locale="en">Most Preferred</language>
            <language key="infodisplay.mostpreferred" locale="ar">Most Preferred</language>
            <language key="infodisplay.mostpreferred.mobile" locale="en">Most Preferred From Part 1:</language>
            <language key="infodisplay.mostpreferred.mobile" locale="ar">Most Preferred From Part 1:</language>
            <language key="infodisplay.leastpreferred.mobile" locale="en">Least Preferred From Part 1:</language>
            <language key="infodisplay.leastpreferred.mobile" locale="ar">Least Preferred From Part 1:</language>
            <language key="infodisplay.vs" locale="en">vs</language>
            <language key="infodisplay.vs" locale="ar">vs</language>
            <language key="infodisplay.rating.header" locale="en">Your Rating for this Attribute</language>
            <language key="infodisplay.rating.header" locale="ar">Your Rating for this Attribute</language>
            <language key="instructions" locale="en">
                <![CDATA[<p>
                For each of the categories below, indicate its importance <b><u>relative to the others</u></b> by moving the slider towards the right (more important) or towards the left (less important).
                </p>]]>
            </language>
            <language key="instructions" locale="ar">
                <![CDATA[<p>
                For each of the categories below, indicate its importance <b><u>relative to the others</u></b> by moving the slider towards the right (more important) or towards the left (less important).
                </p>]]>
            </language>
            <language key="help.title" locale="en">What are we asking you to do here?</language>
            <language key="help.title" locale="ar">What are we asking you to do here?</language>
            <language key="help.body" locale="en">
                <![CDATA[<p>
                This screen lists the feature categories we asked you about in the first part of this application. Now, we'd like to understand how important each of these feature categories are relative to one another. As you consider each category, your most and least preferred choices appear to remind you of your earlier responses.
                <br/>
                <br/>
                For each category, you are being asked to indicate how important each is to you, from a scale of LEAST importance (1) to GREATEST importance (100).
                </p>]]>
            </language>
            <language key="help.body" locale="ar">
                <![CDATA[<p>
                This screen lists the feature categories we asked you about in the first part of this application. Now, we'd like to understand how important each of these feature categories are relative to one another. As you consider each category, your most and least preferred choices appear to remind you of your earlier responses.
                <br/>
                <br/>
                For each category, you are being asked to indicate how important each is to you, from a scale of LEAST importance (1) to GREATEST importance (100).
                </p>]]>
            </language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.label" locale="ar">Close</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.gotit" locale="ar">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image" locale="ar">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="help.assets.image.alt" locale="ar">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Stage 2&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;Stage 2&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-attribute</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-attribute</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Attributes</language>
            <language key="intro.title" locale="ar">Attributes</language>
            <language key="intro.body" locale="en">Next we will ask you to rate the options from section one against each other. Please click or tap each option to indicate its importance to you and your product.</language>
            <language key="intro.body" locale="ar">Next we will ask you to rate the options from section one against each other. Please click or tap each option to indicate its importance to you and your product.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.label" locale="ar">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/attribute/content/image.jpg</language>
            <language key="intro.image" locale="ar">assets/popups/stages/attribute/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (attribute)</language>
            <language key="intro.image.alt" locale="ar">Intro content image (attribute)</language>
            <profile key="help" value="true"/>
            <profile key="widget" value="attribute-scale"/>
        </resource>
        <resource name="prestage3" value="display">
            <language key="title" locale="en">Part 3:</language>
            <language key="title" locale="ar">Part 3:</language>
            <language key="messagetitle" locale="en">Generated Tradeoffs</language>
            <language key="messagetitle" locale="ar">Generated Tradeoffs</language>
            <language key="messageimage" locale="en">icon-prestage-3</language>
            <language key="messageimage" locale="ar">icon-prestage-3</language>
            <language key="body" locale="en">Using what you told us in Parts 1 and 2, we've built personalized, hypothetical offerings for you to compare. &lt;b&gt;Now it's time to weigh their appeal relative to one another.&lt;/b&gt;</language>
            <language key="body" locale="ar">Using what you told us in Parts 1 and 2, we've built personalized, hypothetical offerings for you to compare. &lt;b&gt;Now it's time to weigh their appeal relative to one another.&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Part 3&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;Part 3&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-tradeoff</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-tradeoff</language>
            <language key="templateurl" locale="en">display-2.tpl.html</language>
            <language key="templateurl" locale="ar">display-2.tpl.html</language>
        </resource>
        <resource name="tradeoffs" value="tradeoff">
            <language key="title" locale="en">Which option do you prefer?</language>
            <language key="title" locale="ar">Which option do you prefer?</language>
            <language key="instructions" locale="en">
                <![CDATA[<p>
                Assume all your choices are identical in every way except for the features shown. Based on the strength of your preference, slide towards the combination you prefer.
                </p>]]>
            </language>
            <language key="instructions" locale="ar">
                <![CDATA[<p>
                Assume all your choices are identical in every way except for the features shown. Based on the strength of your preference, slide towards the combination you prefer.
                </p>]]>
            </language>
            <language key="mostpreferred" locale="en">Most Preferred</language>
            <language key="mostpreferred" locale="ar">Most Preferred</language>
            <language key="leastpreferred" locale="en">Least Preferred</language>
            <language key="leastpreferred" locale="ar">Least Preferred</language>
            <language key="help.title" locale="en">What are we asking you to do here?</language>
            <language key="help.title" locale="ar">What are we asking you to do here?</language>
            <language key="help.body" locale="en">
                <![CDATA[<p>
                Assume all your choices are identical in every way except for the features shown. Based on the strength of your preference, move the slider towards the combination you prefer.
                </p>]]>
            </language>
            <language key="help.body" locale="ar">
                <![CDATA[<p>
                Assume all your choices are identical in every way except for the features shown. Based on the strength of your preference, move the slider towards the combination you prefer.
                </p>]]>
            </language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.label" locale="ar">Close</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.gotit" locale="ar">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image" locale="ar">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="help.assets.image.alt" locale="ar">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Stage 3:&lt;b&gt; Question || of ||</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;Stage 3:&lt;b&gt; Question || of ||</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-tradeoff</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-tradeoff</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Tradeoffs</language>
            <language key="intro.title" locale="ar">Tradeoffs</language>
            <language key="intro.body" locale="en">Next we will show several different feature combinations based on the level of importance you place on these option in section two. Based on the strength of your preference, tap on the combination you prefer. If the displayed combination is unimportant to you, click next and move onto the next combination.</language>
            <language key="intro.body" locale="ar">Next we will show several different feature combinations based on the level of importance you place on these option in section two. Based on the strength of your preference, tap on the combination you prefer. If the displayed combination is unimportant to you, click next and move onto the next combination.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.label" locale="ar">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/tradeoff/content/image.jpg</language>
            <language key="intro.image" locale="ar">assets/popups/stages/tradeoff/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (tradeoff)</language>
            <language key="intro.image.alt" locale="ar">Intro content image (tradeoff)</language>
            <profile key="help" value="true"/>
            <profile key="numtradeoffs" value="4"/>
            <profile key="widget" value="tradeoff-scale"/>
            <profile key="widget.showvaluefromzerototen" value="true"/>
        </resource>
        <resource name="prestage4" value="display">
            <language key="title" locale="en">Part 4:</language>
            <language key="title" locale="ar">Part 4:</language>
            <language key="messagetitle" locale="en">Almost done!</language>
            <language key="messagetitle" locale="ar">Almost done!</language>
            <language key="messageimage" locale="en">icon-prestage-4</language>
            <language key="messageimage" locale="ar">icon-prestage-4</language>
            <language key="body" locale="en">We have a few additional questions that we'd like to ask you. As with the prior sections, any information you provide will be kept confidential.</language>
            <language key="body" locale="ar">We have a few additional questions that we'd like to ask you. As with the prior sections, any information you provide will be kept confidential.</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Part 4&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.message" locale="ar">&lt;b&gt;Part 4&lt;/b&gt;</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-survey</language>
            <language key="templateurl" locale="en">display-2.tpl.html</language>
            <language key="templateurl" locale="ar">display-2.tpl.html</language>
        </resource>
        <resource name="aboutyou" value="survey">
            <resource-element value="Name Question"/>
            <resource-element value="State Province Question"/>
            <resource-element value="Email Question"/>
            <resource-element value="Date of Birth Question"/>
            <resource-element value="What is the likelihood that you will answer all of these questions? Question"/>
            <resource-element value="Favorite Month Question"/>
            <resource-element value="How much energy do you use per year Question"/>
            <resource-element value="Contact Me Question"/>
            <resource-element value="Favorite Number Question"/>
            <language key="title" locale="en">Please take a moment to tell us a little about yourself:</language>
            <language key="title" locale="ar">Please take a moment to tell us a little about yourself:</language>
            <language key="title.tooltip" locale="en">This is a mock tooltip for stage.</language>
            <language key="title.tooltip" locale="ar">This is a mock tooltip for stage.</language>
            <language key="note" locale="en">This is the note field</language>
            <language key="note" locale="ar">This is the note field</language>
            <language key="instructions" locale="en">Not so optional questions about you because all of the these fields are REQUIRED.</language>
            <language key="instructions" locale="ar">Not so optional questions about you because all of the these fields are REQUIRED.</language>
            <language key="breadcrumbdisplay.message" locale="en">About You</language>
            <language key="breadcrumbdisplay.message" locale="ar">About You</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-survey</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">About You</language>
            <language key="intro.title" locale="ar">About You</language>
            <language key="intro.body" locale="en">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are completely optional.</language>
            <language key="intro.body" locale="ar">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are completely optional.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.label" locale="ar">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image" locale="ar">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (About You)</language>
            <language key="intro.image.alt" locale="ar">Intro content image (About You)</language>
        </resource>
        <resource name="survey1" value="survey">
            <resource-element value="Potential market size Question"/>
            <resource-element value="Product coolness Question"/>
            <resource-element value="Product durability Question"/>
            <resource-element value="Target customer Question"/>
            <language key="title" locale="en">
                <![CDATA[<p>
                Product Features:
                <br/>
                Please answer the following questions.
                </p>]]>
            </language>
            <language key="title" locale="ar">
                <![CDATA[<p>
                Product Features:
                <br/>
                Please answer the following questions.
                </p>]]>
            </language>
            <language key="title.tooltip" locale="en">This is a mock tooltip for stage.</language>
            <language key="title.tooltip" locale="ar">This is a mock tooltip for stage.</language>
            <language key="instructions" locale="en">Rate your level of agreement for the product features shown.</language>
            <language key="instructions" locale="ar">Rate your level of agreement for the product features shown.</language>
            <language key="numberoflabels" locale="en">7</language>
            <language key="numberoflabels" locale="ar">7</language>
            <language key="label1" locale="en">Strongly Disagree</language>
            <language key="label1" locale="ar">Strongly Disagree</language>
            <language key="labeltooltip1" locale="en">You strongly disagree with this statement</language>
            <language key="labeltooltip1" locale="ar">You strongly disagree with this statement</language>
            <language key="label2" locale="en">Disagree</language>
            <language key="label2" locale="ar">Disagree</language>
            <language key="labeltooltip2" locale="en">You disagree with this statement</language>
            <language key="labeltooltip2" locale="ar">You disagree with this statement</language>
            <language key="label3" locale="en">Slightly Disagree</language>
            <language key="label3" locale="ar">Slightly Disagree</language>
            <language key="labeltooltip3" locale="en">You slightly disagree with this statement</language>
            <language key="labeltooltip3" locale="ar">You slightly disagree with this statement</language>
            <language key="label4" locale="en">Slightly Agree</language>
            <language key="label4" locale="ar">Slightly Agree</language>
            <language key="labeltooltip4" locale="en">You slightly agree with this statement</language>
            <language key="labeltooltip4" locale="ar">You slightly agree with this statement</language>
            <language key="label5" locale="en">Agree</language>
            <language key="label5" locale="ar">Agree</language>
            <language key="labeltooltip5" locale="en">You agree with this statement</language>
            <language key="labeltooltip5" locale="ar">You agree with this statement</language>
            <language key="label6" locale="en">Strongly Agree</language>
            <language key="label6" locale="ar">Strongly Agree</language>
            <language key="labeltooltip6" locale="en">You strongly agree with this statement</language>
            <language key="labeltooltip6" locale="ar">You strongly agree with this statement</language>
            <language key="label7" locale="en">Do NOT Care</language>
            <language key="label7" locale="ar">Do NOT Care</language>
            <language key="labeltooltip7" locale="en">You do not care about this statement</language>
            <language key="labeltooltip7" locale="ar">You do not care about this statement</language>
            <language key="breadcrumbdisplay.message" locale="en">Survey Page</language>
            <language key="breadcrumbdisplay.message" locale="ar">Survey Page</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-survey</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Survey</language>
            <language key="intro.title" locale="ar">Survey</language>
            <language key="intro.body" locale="en">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are required, and you will not be able to continue without answering them.</language>
            <language key="intro.body" locale="ar">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are required, and you will not be able to continue without answering them.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.label" locale="ar">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image" locale="ar">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (Survey1)</language>
            <language key="intro.image.alt" locale="ar">Intro content image (Survey1)</language>
            <language key="templateurl" locale="en">survey_radio_group.tpl.html</language>
            <language key="templateurl" locale="ar">survey_radio_group.tpl.html</language>
            <language key="help" locale="en">Help</language>
            <language key="help" locale="ar">Help</language>
            <profile key="help" value="true"/>
            <profile key="widget" value="radio-group"/>
            <profile key="widget.notapplicableoption" value="true"/>
        </resource>
        <resource name="survey2" value="survey">
            <resource-element value="Percent Widget 1 Question"/>
            <resource-element value="Percent Widget 2 Question"/>
            <resource-element value="Percent Widget 3 Question"/>
            <resource-element value="Percent Widget 4 Question"/>
            <resource-element value="Percent Widget Total Question"/>
            <language key="title" locale="en">How is your time divided among the following platforms in terms of media consumption?</language>
            <language key="title" locale="ar">How is your time divided among the following platforms in terms of media consumption?</language>
            <language key="title.tooltip" locale="en">This is a mock tooltip for stage.</language>
            <language key="title.tooltip" locale="ar">This is a mock tooltip for stage.</language>
            <language key="instructions" locale="en">
                <![CDATA[<p>
                Adjust the sliders that are relevant to you to reach a total value of 100%.
                </p>]]>
            </language>
            <language key="instructions" locale="ar">
                <![CDATA[<p>
                Adjust the sliders that are relevant to you to reach a total value of 100%.
                </p>]]>
            </language>
            <language key="breadcrumbdisplay.message" locale="en">Survey Page</language>
            <language key="breadcrumbdisplay.message" locale="ar">Survey Page</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-survey</language>
            <language key="templateurl" locale="en">survey_percent_allocation.tpl.html</language>
            <language key="templateurl" locale="ar">survey_percent_allocation.tpl.html</language>
            <profile key="defaultmodelvalue" value="0"/>
            <profile key="maxmodelvalue" value="100"/>
            <profile key="modelvaluestep" value="1"/>
            <profile key="totalquestion" value="Percent Widget Total"/>
        </resource>
        <resource name="output" value="output">
            <resource-element value="Messagedata Question"/>
            <resource-element value="Email To Question"/>
            <resource-element value="Email From Question"/>
            <resource-element value="Email Note Question"/>
            <language key="title" locale="en">Here's some personalized information about your product that is most interesting. You have a great chance for success!</language>
            <language key="title" locale="ar">Here's some personalized information about your product that is most interesting. You have a great chance for success!</language>
            <language key="subtitle1" locale="en">Below are specific things that will be helpful to you going forward.</language>
            <language key="subtitle1" locale="ar">Below are specific things that will be helpful to you going forward.</language>
            <language key="preferenceprofile.title" locale="en">Your Preference Profile</language>
            <language key="preferenceprofile.title" locale="ar">Your Preference Profile</language>
            <language key="preferenceprofile.preferencekey" locale="en">Your Preferences</language>
            <language key="preferenceprofile.preferencekey" locale="ar">Your Preferences</language>
            <language key="preferenceprofile.peerkey" locale="en">Your Peers</language>
            <language key="preferenceprofile.peerkey" locale="ar">Your Peers</language>
            <language key="footer" locale="en">You can now close your browser</language>
            <language key="footer" locale="ar">You can now close your browser</language>
            <language key="breadcrumbdisplay.message" locale="en">Output</language>
            <language key="breadcrumbdisplay.message" locale="ar">Output</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-output</language>
            <language key="breadcrumbdisplay.cssclass" locale="ar">breadcrumb-output</language>
            <language key="button1.label" locale="en">Contact</language>
            <language key="button1.label" locale="ar">Contact</language>
            <language key="button1.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="button1.url" locale="ar">http://www.truechoicesolutions.com</language>
            <language key="button2.label" locale="en">Yahoo</language>
            <language key="button2.label" locale="ar">Yahoo</language>
            <language key="button2.url" locale="en">http://www.yahoo.com</language>
            <language key="button2.url" locale="ar">http://www.yahoo.com</language>
            <language key="button3.label" locale="en">Google</language>
            <language key="button3.label" locale="ar">Google</language>
            <language key="button3.url" locale="en">http://www.google.com</language>
            <language key="button3.url" locale="ar">http://www.google.com</language>
            <language key="button4.label" locale="en">Email a friend</language>
            <language key="button4.label" locale="ar">Email a friend</language>
            <language key="button4.url" locale="en">emailafriend</language>
            <language key="button4.url" locale="ar">emailafriend</language>
            <language key="socialbutton1.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="socialbutton1.url" locale="ar">http://www.truechoicesolutions.com</language>
            <language key="socialbutton2.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="socialbutton2.url" locale="ar">http://www.truechoicesolutions.com</language>
            <language key="socialbutton3.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="socialbutton3.url" locale="ar">http://www.truechoicesolutions.com</language>
            <!-- Email Popup -->
            <language key="emailpopup.send" locale="en">SUBMIT</language>
            <language key="emailpopup.send" locale="ar">SUBMIT</language>
            <language key="emailpopup.close" locale="en">Close</language>
            <language key="emailpopup.close" locale="ar">Close</language>
            <language key="emailpopup.title" locale="en">Email results</language>
            <language key="emailpopup.title" locale="ar">Email results</language>
            <language key="emailpopup.error.invalidtoemail" locale="en">Please enter a valid TO Email address.</language>
            <language key="emailpopup.error.invalidtoemail" locale="ar">Please enter a valid TO Email address.</language>
            <language key="emailpopup.error.invalidfromemail" locale="en">Please enter a valid FROM Email address.</language>
            <language key="emailpopup.error.invalidfromemail" locale="ar">Please enter a valid FROM Email address.</language>
            <language key="emailpopup.error.invalidallemails" locale="en">Please enter valid TO/FROM Email addresses.</language>
            <language key="emailpopup.error.invalidallemails" locale="ar">Please enter valid TO/FROM Email addresses.</language>
            <!-- Product templates, cfm, and styles -->
            <language key="templateurl" locale="en">output.mb.tpl.html</language>
            <language key="templateurl" locale="ar">output.mb.tpl.html</language>
            <profile key="levelmessagekeyorder" value="name||image||title||description"/>
            <profile key="emailquestions" value="emailto||emailfrom||emailnote"/>
            <profile key="isproductbased" value="false"/>
            <profile key="persistjsondata" value="false"/>
        </resource>
        <!-- GDPR Consent Resources -->
        <resource name="Consent Title Label" type="Alias" value="Consent Title"/>
        <resource name="Consent Label One" type="Alias" value="Consent One Label"/>
        <resource name="Consent One Question" type="Alias" value="Consent One"/>
        <resource name="Consent Two Question" type="Alias" value="Consent Two"/>
        <resource name="Consent Label Two" type="Alias" value="Consent Two Label"/>
        <resource name="Consent Contact Info One Label" type="Alias" value="Consent Contact Info One"/>
        <resource name="Consent Contact Info Two Label" type="Alias" value="Consent Contact Info Two"/>
        <!-- Attribute Select Resources -->     
        <resource name="Attribute Select Label One" type="Alias" value="Attribute Select One"/>        
        <resource name="Attribute Select Question" type="Alias" value="Attribute Select"/>       
        <!-- About You Resources -->
        <resource name="Name Question" type="Alias" value="Full Name"/>
        <resource name="State Province Question" type="Alias" value="State Province"/>
        <resource name="Email Question" type="Alias" value="Email"/>
        <resource name="Date of Birth Question" type="Alias" value="Date of Birth"/>
        <resource name="What is the likelihood that you will answer all of these questions? Question" type="Alias" value="What is the likelihood that you will answer all of these questions?"/>
        <resource name="Favorite Month Question" type="Alias" value="Favorite Month"/>
        <resource name="Contact Me Question" type="Alias" value="Contact Me"/>
        <resource name="How much energy do you use per year Question" type="Alias" value="How much energy do you use per year"/>
        <resource name="Favorite Number Question" type="Alias" value="Favorite Number"/>
        <!-- Survey 1 Resources -->
        <resource name="Potential market size Question" type="Alias" value="Potential market size">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Target customer Question" type="Alias" value="Target customer">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product coolness Question" type="Alias" value="Product coolness">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product durability Question" type="Alias" value="Product durability">
            <profile key="type" value="radiobutton"/>
        </resource>
        <!-- Survey 2 Resources -->
        <resource name="Percent Widget 1 Question" type="Alias" value="Percent Widget 1">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget 2 Question" type="Alias" value="Percent Widget 2">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget 3 Question" type="Alias" value="Percent Widget 3">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget 4 Question" type="Alias" value="Percent Widget 4">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget Total Question" type="Alias" value="Percent Widget Total">
            <profile key="type" value="text"/>
        </resource>
        <!-- Output Questions -->
        <resource name="Email To Question" type="Alias" value="emailto">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Email From Question" type="Alias" value="emailfrom">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Email Note Question" type="Alias" value="emailnote">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Messagedata Question" type="Alias" value="messagedata">
            <profile key="type" value="text"/>
        </resource>
        <!-- App naming name -->
        <naming name="e2e_prototype" by-owner="false"/>
        <!-- GDPR Consent profile keys -->
        <profile-key key="Consent Title" required="false">
            <language key="displayname" locale="en"><![CDATA[<span style="font-size:20px;"><b>User Transparency</b></span>]]></language>
            <language key="displayname" locale="ar"><![CDATA[<span style="font-size:20px;"><b>User Transparency</b></span>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent One Label" required="false">
            <language key="displayname" locale="en"><![CDATA[<p><b>TrueChoice Solutions, Inc. is a data analytics company that will collect your product and service preferences data. This will help BrandCo develop future product and service strategies that benefit your business.</b></p>]]></language>
            <language key="displayname" locale="ar"><![CDATA[<p><b>TrueChoice Solutions, Inc. is a data analytics company that will collect your product and service preferences data. This will help BrandCo develop future product and service strategies that benefit your business.</b></p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent One" required="true">
            <language key="displayname" locale="en">Do you consent to this?</language>
            <language key="displayname" locale="ar">Do you consent to this?</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="optin" value="I consent">
                <language key="displayname" locale="en">I consent</language>
                <language key="displayname" locale="ar">I consent</language>
                <language key="error.requiredinput.label" locale="en">Must consent to proceed</language>
                <language key="error.requiredinput.label" locale="ar">Must consent to proceed</language>
            </profile-value>
        </profile-key>
        <profile-key key="Consent Two Label" required="false">
            <language key="displayname" locale="en"><![CDATA[<p>TrueChoice Solutions, Inc. will share your data with BrandCo for the duration of this 2 month project. We will collect product and service preferences and customer satisfaction information. We will analyze the data in the United States.</p>]]></language>
            <language key="displayname" locale="ar"><![CDATA[<p>TrueChoice Solutions, Inc. will share your data with BrandCo for the duration of this 2 month project. We will collect product and service preferences and customer satisfaction information. We will analyze the data in the United States.</p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent Two" required="false">
            <language key="displayname" locale="en">Do you consent to tracking with Facebook Pixel?</language>
            <language key="displayname" locale="ar">Do you consent to tracking with Facebook Pixel?</language>
            <profile key="externalanalytics.optin" value="true"/>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="analyticstracking" value="I consent">
                <language key="displayname" locale="en">I consent</language>
                <language key="displayname" locale="ar">I consent</language>
            </profile-value>
        </profile-key>
        <profile-key key="Consent Contact Info One" required="false">
            <language key="displayname" locale="en"><![CDATA[<p>To learn more about how TrueChoice Solutions, Inc. will manage your data and about your data privacy rights, click or tap <a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>here</i></a>.</p>]]></language>
            <language key="displayname" locale="ar"><![CDATA[<p>To learn more about how TrueChoice Solutions, Inc. will manage your data and about your data privacy rights, click or tap <a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>here</i></a>.</p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
            </profile-key>
        <profile-key key="Consent Contact Info Two" required="false">
            <language key="displayname" locale="en"><![CDATA[BrandCo will control the data collected from you by TrueChoice Solutions, Inc. BrandCo's contact information is: <p class="label-display-blockquote">E-mail: privacy@email.com<br/><a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>www.BrandCo.com</i></a></p>]]></language>
            <language key="displayname" locale="ar"><![CDATA[BrandCo will control the data collected from you by TrueChoice Solutions, Inc. BrandCo's contact information is: <p class="label-display-blockquote">E-mail: privacy@email.com<br/><a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>www.BrandCo.com</i></a></p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <!-- Attribute Select profile keys -->
        <profile-key key="Attribute Select One" required="false">
            <language key="displayname" locale="en"><![CDATA[<b>TrueChoice Solutions, Inc. would like to understand the value specific solutions to provide your organization.</b><br/>The following screens will present different prodict categories and solutions and ask you to indicate how valuable each is to your organization.]]></language>
            <language key="displayname" locale="ar"><![CDATA[<b>TrueChoice Solutions, Inc. would like to understand the value specific solutions to provide your organization.</b><br/>The following screens will present different prodict categories and solutions and ask you to indicate how valuable each is to your organization.]]></language>
            <language key="tooltip" locale="en">Tooltip in label-display</language>
            <language key="tooltip" locale="ar">Tooltip in label-display</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Attribute Select" required="false">
            <language key="displayname" locale="en"><![CDATA[<br/><b>Please select at least three product categories below. If there is an area that you have very limited familiarity with, you may opt to skip that category.</b><br/><font color="red">We encourage you to provide your viewpoint on as many of the categories as possible.</font>]]></language>
            <language key="displayname" locale="ar"><![CDATA[<br/><b>Please select at least three product categories below. If there is an area that you have very limited familiarity with, you may opt to skip that category.</b><br/><font color="red">We encourage you to provide your viewpoint on as many of the categories as possible.</font>]]></language>
            <language key="tooltip" locale="en">Select all that apply.</language>
            <language key="tooltip" locale="ar">Select all that apply.</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="all options" value="all options">
                <language key="displayname" locale="en">Select All</language>
                <language key="displayname" locale="ar">Select All</language>
            </profile-value>
            <profile-value key="color" value="color">
                <language key="displayname" locale="en">color such as red, blue, and green</language>
                <language key="displayname" locale="ar">color such as red, blue, and green</language>
                <language key="tooltip" locale="en">Colors such as red, blue, and green</language>
                <language key="tooltip" locale="ar">Colors such as red, blue, and green</language>
                <profile key="attributename" value="color"/>
            </profile-value>
            <profile-value key="basepay" value="basepay">
                <language key="displayname" locale="en">basepay is your income without bonuses and additional incentives</language>
                <language key="displayname" locale="ar">basepay is your income without bonuses and additional incentives</language>
                <language key="tooltip" locale="en">Basepay is your income without bonuses and additional incentives</language>                
                <language key="tooltip" locale="ar">Basepay is your income without bonuses and additional incentives</language>                
                <profile key="attributename" value="basepay"/>
            </profile-value>
            <profile-value key="size" value="size">
                <language key="displayname" locale="en">size</language>
                <language key="displayname" locale="ar">size</language>
                <profile key="attributename" value="size"/>
            </profile-value>
            <profile-value key="weight" value="weight">
                <language key="displayname" locale="en">weight</language>
                <language key="displayname" locale="ar">weight</language>
                <profile key="attributename" value="weight"/>
            </profile-value>
            <profile-value key="intuition" value="intuition">
                <language key="displayname" locale="en">intuition</language>
                <language key="displayname" locale="ar">intuition</language>
                <profile key="attributename" value="intuition"/>
            </profile-value>                                    
        </profile-key>
        <!-- About You profile keys -->
        <profile-key key="Full Name" required="true">
            <language key="displayname" locale="en">Your full name</language>
            <language key="displayname" locale="ar">Your full name</language>
            <language key="placeholder" locale="en">--</language>
            <language key="placeholder" locale="ar">--</language>
            <language key="tooltip" locale="en">Your first and last name. Middle name too, if you want.</language>
            <language key="tooltip" locale="ar">Your first and last name. Middle name too, if you want.</language>
            <language key="error.requiredinput.label" locale="en">Can not leave blank</language>
            <language key="error.requiredinput.label" locale="ar">Can not leave blank</language>
            <language key="error.minlength.message" locale="en">Invalid length</language>
            <language key="error.minlength.message" locale="ar">Invalid length</language>
            <language key="error.minlength.title" locale="en">Invalid input title</language>
            <language key="error.minlength.title" locale="ar">Invalid input title</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
            <profile key="maxlength" value="8"/>
            <profile key="minlength" value="3"/>
        </profile-key>
        <profile-key key="State Province" required="true">
            <language key="displayname" locale="en">Please enter the State/Province that you live in:</language>
            <language key="displayname" locale="ar">Please enter the State/Province that you live in:</language>
            <language key="tooltip" locale="en">Please enter the State/Province that you live in:</language>
            <language key="tooltip" locale="ar">Please enter the State/Province that you live in:</language>
            <profile key="type" value="dropbox"/>
            <profile key="widget" value="drop-down"/>
            <profile-value key="AL" value="AL">
                <language key="displayname" locale="en">Alabama</language>
                <language key="displayname" locale="ar">Alabama</language>
            </profile-value>
            <profile-value key="AK" value="AK">
                <language key="displayname" locale="en">Alaska</language>
                <language key="displayname" locale="ar">Alaska</language>
            </profile-value>
            <profile-value key="AZ" value="AZ">
                <language key="displayname" locale="en">Arizona</language>
                <language key="displayname" locale="ar">Arizona</language>
            </profile-value>
            <profile-value key="AR" value="AR">
                <language key="displayname" locale="en">Arkansas</language>
                <language key="displayname" locale="ar">Arkansas</language>
            </profile-value>
            <profile-value key="British Columbia" value="British Columbia">
                <language key="displayname" locale="en">British Columbia</language>
                <language key="displayname" locale="ar">British Columbia</language>
            </profile-value>
            <profile-value key="CA" value="CA">
                <language key="displayname" locale="en">California</language>
                <language key="displayname" locale="ar">California</language>
            </profile-value>
            <profile-value key="CO" value="CO">
                <language key="displayname" locale="en">Colorado</language>
                <language key="displayname" locale="ar">Colorado</language>
            </profile-value>
            <profile-value key="CT" value="CT">
                <language key="displayname" locale="en">Connecticut</language>
                <language key="displayname" locale="ar">Connecticut</language>
            </profile-value>
            <profile-value key="DE" value="DE">
                <language key="displayname" locale="en">Delaware</language>
                <language key="displayname" locale="ar">Delaware</language>
            </profile-value>
            <profile-value key="DC" value="DC">
                <language key="displayname" locale="en">District of Columbia     </language>
                <language key="displayname" locale="ar">District of Columbia     </language>
            </profile-value>
            <profile-value key="FL" value="FL">
                <language key="displayname" locale="en">Florida</language>
                <language key="displayname" locale="ar">Florida</language>
            </profile-value>
            <profile-value key="GA" value="GA">
                <language key="displayname" locale="en">Georgia</language>
                <language key="displayname" locale="ar">Georgia</language>
            </profile-value>
            <profile-value key="HI" value="HI">
                <language key="displayname" locale="en">Hawaii</language>
                <language key="displayname" locale="ar">Hawaii</language>
            </profile-value>
            <profile-value key="ID" value="ID">
                <language key="displayname" locale="en">Idaho</language>
                <language key="displayname" locale="ar">Idaho</language>
            </profile-value>
            <profile-value key="IL" value="IL">
                <language key="displayname" locale="en">Illinois</language>
                <language key="displayname" locale="ar">Illinois</language>
            </profile-value>
            <profile-value key="IN" value="IN">
                <language key="displayname" locale="en">Indiana</language>
                <language key="displayname" locale="ar">Indiana</language>
            </profile-value>
            <profile-value key="IA" value="IA">
                <language key="displayname" locale="en">Iowa</language>
                <language key="displayname" locale="ar">Iowa</language>
            </profile-value>
            <profile-value key="KS" value="KS">
                <language key="displayname" locale="en">Kansas</language>
                <language key="displayname" locale="ar">Kansas</language>
            </profile-value>
            <profile-value key="KY" value="KY">
                <language key="displayname" locale="en">Kentucky</language>
                <language key="displayname" locale="ar">Kentucky</language>
            </profile-value>
            <profile-value key="LA" value="LA">
                <language key="displayname" locale="en">Louisiana</language>
                <language key="displayname" locale="ar">Louisiana</language>
            </profile-value>
            <profile-value key="ME" value="ME">
                <language key="displayname" locale="en">Maine</language>
                <language key="displayname" locale="ar">Maine</language>
            </profile-value>
            <profile-value key="MD" value="MD">
                <language key="displayname" locale="en">Maryland</language>
                <language key="displayname" locale="ar">Maryland</language>
            </profile-value>
            <profile-value key="MA" value="MA">
                <language key="displayname" locale="en">Massachusetts</language>
                <language key="displayname" locale="ar">Massachusetts</language>
            </profile-value>
            <profile-value key="MI" value="MI">
                <language key="displayname" locale="en">Michigan</language>
                <language key="displayname" locale="ar">Michigan</language>
            </profile-value>
            <profile-value key="MN" value="MN">
                <language key="displayname" locale="en">Minnesota</language>
                <language key="displayname" locale="ar">Minnesota</language>
            </profile-value>
            <profile-value key="MS" value="MS">
                <language key="displayname" locale="en">Mississippi</language>
                <language key="displayname" locale="ar">Mississippi</language>
            </profile-value>
            <profile-value key="MO" value="MO">
                <language key="displayname" locale="en">Missouri</language>
                <language key="displayname" locale="ar">Missouri</language>
            </profile-value>
            <profile-value key="MT" value="MT">
                <language key="displayname" locale="en">Montana</language>
                <language key="displayname" locale="ar">Montana</language>
            </profile-value>
            <profile-value key="NE" value="NE">
                <language key="displayname" locale="en">Nebraska</language>
                <language key="displayname" locale="ar">Nebraska</language>
            </profile-value>
            <profile-value key="NV" value="NV">
                <language key="displayname" locale="en">Nevada</language>
                <language key="displayname" locale="ar">Nevada</language>
            </profile-value>
            <profile-value key="NH" value="NH">
                <language key="displayname" locale="en">New Hampshire</language>
                <language key="displayname" locale="ar">New Hampshire</language>
            </profile-value>
            <profile-value key="NJ" value="NJ">
                <language key="displayname" locale="en">New Jersey</language>
                <language key="displayname" locale="ar">New Jersey</language>
            </profile-value>
            <profile-value key="NM" value="NM">
                <language key="displayname" locale="en">New Mexico</language>
                <language key="displayname" locale="ar">New Mexico</language>
            </profile-value>
            <profile-value key="NY" value="NY">
                <language key="displayname" locale="en">New York</language>
                <language key="displayname" locale="ar">New York</language>
            </profile-value>
            <profile-value key="Newfoundland" value="Newfoundland">
                <language key="displayname" locale="en">Newfoundland</language>
                <language key="displayname" locale="ar">Newfoundland</language>
            </profile-value>
            <profile-value key="NC" value="NC">
                <language key="displayname" locale="en">North Carolina</language>
                <language key="displayname" locale="ar">North Carolina</language>
            </profile-value>
            <profile-value key="ND" value="ND">
                <language key="displayname" locale="en">North Dakota</language>
                <language key="displayname" locale="ar">North Dakota</language>
            </profile-value>
            <profile-value key="Northwest Territories" value="Northwest Territories">
                <language key="displayname" locale="en">Northwest Territories</language>
                <language key="displayname" locale="ar">Northwest Territories</language>
            </profile-value>
            <profile-value key="Nova Scotia" value="Nova Scotia">
                <language key="displayname" locale="en">Nova Scotia</language>
                <language key="displayname" locale="ar">Nova Scotia</language>
            </profile-value>
            <profile-value key="Nunavut" value="Nunavut">
                <language key="displayname" locale="en">Nunavut</language>
                <language key="displayname" locale="ar">Nunavut</language>
            </profile-value>
            <profile-value key="OH" value="OH">
                <language key="displayname" locale="en">Ohio</language>
                <language key="displayname" locale="ar">Ohio</language>
            </profile-value>
            <profile-value key="OK" value="OK">
                <language key="displayname" locale="en">Oklahoma</language>
                <language key="displayname" locale="ar">Oklahoma</language>
            </profile-value>
            <profile-value key="Ontario" value="Ontario">
                <language key="displayname" locale="en">Ontario</language>
                <language key="displayname" locale="ar">Ontario</language>
            </profile-value>
            <profile-value key="OR" value="OR">
                <language key="displayname" locale="en">Oregon</language>
                <language key="displayname" locale="ar">Oregon</language>
            </profile-value>
            <profile-value key="PA" value="PA">
                <language key="displayname" locale="en">Pennsylvania</language>
                <language key="displayname" locale="ar">Pennsylvania</language>
            </profile-value>
            <profile-value key="Prince Edward Island" value="Prince Edward Island">
                <language key="displayname" locale="en">Prince Edward Island</language>
                <language key="displayname" locale="ar">Prince Edward Island</language>
            </profile-value>
            <profile-value key="Quebec" value="Quebec">
                <language key="displayname" locale="en">Quebec</language>
                <language key="displayname" locale="ar">Quebec</language>
            </profile-value>
            <profile-value key="RI" value="RI">
                <language key="displayname" locale="en">Rhode Island</language>
                <language key="displayname" locale="ar">Rhode Island</language>
            </profile-value>
            <profile-value key="Saskatchewan" value="Saskatchewan">
                <language key="displayname" locale="en">Saskatchewan</language>
                <language key="displayname" locale="ar">Saskatchewan</language>
            </profile-value>
            <profile-value key="SC" value="SC">
                <language key="displayname" locale="en">South Carolina</language>
                <language key="displayname" locale="ar">South Carolina</language>
            </profile-value>
            <profile-value key="SD" value="SD">
                <language key="displayname" locale="en">South Dakota</language>
                <language key="displayname" locale="ar">South Dakota</language>
            </profile-value>
            <profile-value key="TN" value="TN">
                <language key="displayname" locale="en">Tennessee</language>
                <language key="displayname" locale="ar">Tennessee</language>
            </profile-value>
            <profile-value key="TX" value="TX">
                <language key="displayname" locale="en">Texas</language>
                <language key="displayname" locale="ar">Texas</language>
            </profile-value>
            <profile-value key="UT" value="UT">
                <language key="displayname" locale="en">Utah</language>
                <language key="displayname" locale="ar">Utah</language>
            </profile-value>
            <profile-value key="VT" value="VT">
                <language key="displayname" locale="en">Vermont</language>
                <language key="displayname" locale="ar">Vermont</language>
            </profile-value>
            <profile-value key="VA" value="VA">
                <language key="displayname" locale="en">Virginia</language>
                <language key="displayname" locale="ar">Virginia</language>
            </profile-value>
            <profile-value key="WA" value="WA">
                <language key="displayname" locale="en">Washington</language>
                <language key="displayname" locale="ar">Washington</language>
            </profile-value>
            <profile-value key="WV" value="WV">
                <language key="displayname" locale="en">West Virginia</language>
                <language key="displayname" locale="ar">West Virginia</language>
            </profile-value>
            <profile-value key="WI" value="WI">
                <language key="displayname" locale="en">Wisconsin</language>
                <language key="displayname" locale="ar">Wisconsin</language>
            </profile-value>
            <profile-value key="WY" value="WY">
                <language key="displayname" locale="en">Wyoming</language>
                <language key="displayname" locale="ar">Wyoming</language>
            </profile-value>
            <profile-value key="Yukon" value="Yukon">
                <language key="displayname" locale="en">Yukon</language>
                <language key="displayname" locale="ar">Yukon</language>
            </profile-value>
        </profile-key>
        <profile-key key="Email" required="true">
            <language key="displayname" locale="en">Your email address</language>
            <language key="displayname" locale="ar">Your email address</language>
            <language key="tooltip" locale="en">The email address you use most often</language>
            <language key="tooltip" locale="ar">The email address you use most often</language>
            <language key="error.requiredinput.label" locale="en">Answer must be a valid email</language>
            <language key="error.requiredinput.label" locale="ar">Answer must be a valid email</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Date of Birth" required="true">
            <language key="displayname" locale="en">What is your birthday</language>
            <language key="displayname" locale="ar">What is your birthday</language>
            <language key="placeholder" locale="en">MM/DD/YYYY</language>
            <language key="placeholder" locale="ar">MM/DD/YYYY</language>
            <language key="tooltip" locale="en">What is your birthday</language>
            <language key="tooltip" locale="ar">What is your birthday</language>
            <language key="error.requiredinput.label" locale="en">Can not leave blank</language>
            <language key="error.requiredinput.label" locale="ar">Can not leave blank</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Contact Me" required="true">
            <language key="displayname" locale="en">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us.</language>
            <language key="displayname" locale="ar">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us.</language>
            <language key="tooltip" locale="en">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us. If you would like to be contacted please select "Yes, please contact me via email that I have previously provided for you".</language>
            <language key="tooltip" locale="ar">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us. If you would like to be contacted please select "Yes, please contact me via email that I have previously provided for you".</language>
            <profile key="type" value="radio"/>
            <profile key="widget" value="radio-button"/>
            <profile-value key="Yes" value="Yes, contact me">
                <language key="displayname" locale="en">Yes, please contact me through the email that I have provided</language>
                <language key="displayname" locale="ar">Yes, please contact me through the email that I have provided</language>
            </profile-value>
            <profile-value key="No" value="No, do not contact me">
                <language key="displayname" locale="en">No, do not contact me, I do not want to recieve emails.</language>
                <language key="displayname" locale="ar">No, do not contact me, I do not want to recieve emails.</language>
            </profile-value>
        </profile-key>
        <profile-key key="Favorite Month" required="true">
            <language key="displayname" locale="en">What are your favorite months?  I'm betting it's the month you were born in!</language>
            <language key="displayname" locale="ar">What are your favorite months?  I'm betting it's the month you were born in!</language>
            <language key="tooltip" locale="en">Select all that apply.</language>
            <language key="tooltip" locale="ar">Select all that apply.</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="January" value="January">
                <language key="displayname" locale="en">January - Ambitious and serious</language>
                <language key="displayname" locale="ar">January - Ambitious and serious</language>
            </profile-value>
            <profile-value key="February" value="February">
                <language key="displayname" locale="en">February - Abstract thoughts</language>
                <language key="displayname" locale="ar">February - Abstract thoughts</language>
            </profile-value>
            <profile-value key="March" value="March">
                <language key="displayname" locale="en">March - Attractive personality</language>
                <language key="displayname" locale="ar">March - Attractive personality</language>
            </profile-value>
            <profile-value key="April" value="April">
                <language key="displayname" locale="en">April - Active and dynamic</language>
                <language key="displayname" locale="ar">April - Active and dynamic</language>
            </profile-value>
            <profile-value key="May" value="May">
                <language key="displayname" locale="en">May - Stubborn and hard-hearted</language>
                <language key="displayname" locale="ar">May - Stubborn and hard-hearted</language>
            </profile-value>
            <profile-value key="June" value="June">
                <language key="displayname" locale="en">June - Thinks far with vision</language>
                <language key="displayname" locale="ar">June - Thinks far with vision</language>
            </profile-value>
            <profile-value key="July" value="July">
                <language key="displayname" locale="en">July - Fun to be with</language>
                <language key="displayname" locale="ar">July - Fun to be with</language>
            </profile-value>
            <profile-value key="August" value="August">
                <language key="displayname" locale="en">August - Loves to joke</language>
                <language key="displayname" locale="ar">August - Loves to joke</language>
            </profile-value>
            <profile-value key="September" value="September">
                <language key="displayname" locale="en">September - Suave and compromising</language>
                <language key="displayname" locale="ar">September - Suave and compromising</language>
            </profile-value>
            <profile-value key="October" value="October">
                <language key="displayname" locale="en">October - Loves to chat</language>
                <language key="displayname" locale="ar">October - Loves to chat</language>
            </profile-value>
            <profile-value key="November" value="November">
                <language key="displayname" locale="en">November - Have a lot of ideas</language>
                <language key="displayname" locale="ar">November - Have a lot of ideas</language>
            </profile-value>
            <profile-value key="December" value="December">
                <language key="displayname" locale="en">December - Loyal and generous</language>
                <language key="displayname" locale="ar">December - Loyal and generous</language>
            </profile-value>
        </profile-key>
        <profile-key key="What is the likelihood that you will answer all of these questions?" required="true">
            <language key="displayname" locale="en">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <language key="displayname" locale="ar">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <language key="tooltip" locale="en">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <language key="tooltip" locale="ar">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <language key="error.requiredinput.label" locale="en">Must change answer</language>
            <language key="error.requiredinput.label" locale="ar">Must change answer</language>
            <profile key="type" value="rating"/>
                <profile key="widget" value="rating-scale"/>
            <profile key="usehashmarks" value="true"/>
            <profile key="useallhashlabels" value="true"/>
            <profile-value key="NA" value="null">
                <language key="displayname" locale="en"> -- Please select a value -- </language>
                <language key="displayname" locale="ar"> -- Please select a value -- </language>
                <language key="hashlabel" locale="en">N/A</language>
                <language key="hashlabel" locale="ar">N/A</language>
            </profile-value>
            <profile-value key="0" value="0">
                <language key="displayname" locale="en">0 - Not at all likely</language>
                <language key="displayname" locale="ar">0 - Not at all likely</language>
                <language key="hashlabel" locale="en">0</language>
                <language key="hashlabel" locale="ar">0</language>
            </profile-value>
            <profile-value key="1" value="1">
                <language key="displayname" locale="en">1 - If you force me to</language>
                <language key="displayname" locale="ar">1 - If you force me to</language>
                <language key="hashlabel" locale="en">1</language>
                <language key="hashlabel" locale="ar">1</language>
            </profile-value>
            <profile-value key="2" value="2">
                <language key="displayname" locale="en">2 - Grudgingly</language>
                <language key="displayname" locale="ar">2 - Grudgingly</language>
                <language key="hashlabel" locale="en">2</language>
                <language key="hashlabel" locale="ar">2</language>
            </profile-value>
            <profile-value key="3" value="3">
                <language key="displayname" locale="en">3 - Do I have to</language>
                <language key="displayname" locale="ar">3 - Do I have to</language>
                <language key="hashlabel" locale="en">3</language>
                <language key="hashlabel" locale="ar">3</language>
            </profile-value>
            <profile-value key="4" value="4">
                <language key="displayname" locale="en">4 - Ok, but I'd rather not</language>
                <language key="displayname" locale="ar">4 - Ok, but I'd rather not</language>
                <language key="hashlabel" locale="en">4</language>
                <language key="hashlabel" locale="ar">4</language>
            </profile-value>
            <profile-value key="5" value="5">
                <language key="displayname" locale="en">5 - Maybe I will, maybe I won't</language>
                <language key="displayname" locale="ar">5 - Maybe I will, maybe I won't</language>
                <language key="hashlabel" locale="en">5</language>
                <language key="hashlabel" locale="ar">5</language>
            </profile-value>
            <profile-value key="6" value="6">
                <language key="displayname" locale="en">6 - Sure, but not right now</language>
                <language key="displayname" locale="ar">6 - Sure, but not right now</language>
                <language key="hashlabel" locale="en">6</language>
                <language key="hashlabel" locale="ar">6</language>
            </profile-value>
            <profile-value key="7" value="7">
                <language key="displayname" locale="en">7 - Yes, but in an hour</language>
                <language key="displayname" locale="ar">7 - Yes, but in an hour</language>
                <language key="hashlabel" locale="en">7</language>
                <language key="hashlabel" locale="ar">7</language>
            </profile-value>
            <profile-value key="8" value="8">
                <language key="displayname" locale="en">8 - OK, just a sec</language>
                <language key="displayname" locale="ar">8 - OK, just a sec</language>
                <language key="hashlabel" locale="en">8</language>
                <language key="hashlabel" locale="ar">8</language>
            </profile-value>
            <profile-value key="9" value="9">
                <language key="displayname" locale="en">9 - YES!  I'll stop what I'm doing to help out</language>
                <language key="displayname" locale="ar">9 - YES!  I'll stop what I'm doing to help out</language>
                <language key="hashlabel" locale="en">9</language>
                <language key="hashlabel" locale="ar">9</language>
            </profile-value>
            <profile-value key="10" value="10">
                <language key="displayname" locale="en">10 - Absolutely, already done!  I'm a team player!</language>
                <language key="displayname" locale="ar">10 - Absolutely, already done!  I'm a team player!</language>
                <language key="hashlabel" locale="en">10</language>
                <language key="hashlabel" locale="ar">10</language>
            </profile-value>
        </profile-key>
        <profile-key key="How much energy do you use per year" required="true">
            <language key="displayname" locale="en">How much energy do you use per year:</language>
            <language key="displayname" locale="ar">How much energy do you use per year:</language>
            <language key="error.requiredinput.label" locale="en">Must change answer</language>
            <language key="error.requiredinput.label" locale="ar">Must change answer</language>
            <profile key="widget" value="rating-scale"/>
            <profile key="type" value="rating"/>
            <profile key="usehashmarks" value="true"/>
            <profile key="useallhashlabels" value="false"/>
            <profile-value key="NA" value="null">
                <language key="displayname" locale="en">-- Please select a value --</language>
                <language key="displayname" locale="ar">-- Please select a value --</language>
                <language key="hashlabel" locale="en">N/A</language>
                <language key="hashlabel" locale="ar">N/A</language>
            </profile-value>
            <profile-value key="0" value="0 kWh">
                <language key="displayname" locale="en">0 kWh</language>
                <language key="displayname" locale="ar">0 kWh</language>
            </profile-value>
            <profile-value key="100" value="100 kWh">
                <language key="displayname" locale="en">100 kWh</language>
                <language key="displayname" locale="ar">100 kWh</language>
            </profile-value>
            <profile-value key="200" value="200 kWh">
                <language key="displayname" locale="en">200 kWh</language>
                <language key="displayname" locale="ar">200 kWh</language>
            </profile-value>
            <profile-value key="300" value="300 kWh">
                <language key="displayname" locale="en">300 kWh</language>
                <language key="displayname" locale="ar">300 kWh</language>
            </profile-value>
            <profile-value key="400" value="400 kWh">
                <language key="displayname" locale="en">400 kWh</language>
                <language key="displayname" locale="ar">400 kWh</language>
            </profile-value>
        </profile-key>
        <profile-key key="Favorite Number" required="false">
            <language key="displayname" locale="en">What is your favorite number</language>
            <language key="displayname" locale="ar">What is your favorite number</language>
            <language key="placeholder" locale="en">e.g. 1</language>
            <language key="placeholder" locale="ar">e.g. 1</language>
            <language key="tooltip" locale="en">Your favorite Number</language>
            <language key="tooltip" locale="ar">Your favorite Number</language>
            <language key="error.requiredinput.label" locale="en">Must answer</language>
            <language key="error.requiredinput.label" locale="ar">Must answer</language>
            <profile key="type" value="number"/>
            <profile key="widget" value="text-input"/>
            <profile key="maxlength" value="8"/>
        </profile-key>
        <!-- Survey 1 Radio Group 7 Header profile keys -->
        <profile-key key="Potential market size" required="true">
            <language key="displayname" locale="en">The potential market size for my product is huge!</language>
            <language key="displayname" locale="ar">The potential market size for my product is huge!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="displayname" locale="ar">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
                <language key="tooltip" locale="ar">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="displayname" locale="ar">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
                <language key="tooltip" locale="ar">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="displayname" locale="ar">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
                <language key="tooltip" locale="ar">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="displayname" locale="ar">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
                <language key="tooltip" locale="ar">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="displayname" locale="ar">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
                <language key="tooltip" locale="ar">You agree with this statement</language>
            </profile-value>
                <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="displayname" locale="ar">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
                <language key="tooltip" locale="ar">You strongly agree with this statement</language>
                </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="displayname" locale="ar">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
                <language key="tooltip" locale="ar">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Target customer" required="true">
            <language key="displayname" locale="en">I am targeting customers who are totally "up on it" and have money to burn!</language>
            <language key="displayname" locale="ar">I am targeting customers who are totally "up on it" and have money to burn!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
              <language key="displayname" locale="en">Strongly Disagree</language>
              <language key="displayname" locale="ar">Strongly Disagree</language>
              <language key="tooltip" locale="en">You strongly disagree with this statement</language>
              <language key="tooltip" locale="ar">You strongly disagree with this statement</language>
          </profile-value>
          <profile-value key="Disagree" value="Disagree">
              <language key="displayname" locale="en">Disagree</language>
              <language key="displayname" locale="ar">Disagree</language>
              <language key="tooltip" locale="en">You disagree with this statement</language>
              <language key="tooltip" locale="ar">You disagree with this statement</language>
          </profile-value>
          <profile-value key="Slightly Disagree" value="Slightly Disagree">
              <language key="displayname" locale="en">Slightly Disagree</language>
              <language key="displayname" locale="ar">Slightly Disagree</language>
              <language key="tooltip" locale="en">You slightly disagree with this statement</language>
              <language key="tooltip" locale="ar">You slightly disagree with this statement</language>
          </profile-value>
          <profile-value key="Slightly Agree" value="Slightly Agree">
              <language key="displayname" locale="en">Slightly Agree</language>
              <language key="displayname" locale="ar">Slightly Agree</language>
              <language key="tooltip" locale="en">You slightly agree with this statement</language>
              <language key="tooltip" locale="ar">You slightly agree with this statement</language>
          </profile-value>
          <profile-value key="Agree" value="Agree">
              <language key="displayname" locale="en">Agree</language>
              <language key="displayname" locale="ar">Agree</language>
              <language key="tooltip" locale="en">You agree with this statement</language>
              <language key="tooltip" locale="ar">You agree with this statement</language>
          </profile-value>
              <profile-value key="Strongly Agree" value="Strongly Agree">
              <language key="displayname" locale="en">Strongly Agree</language>
              <language key="displayname" locale="ar">Strongly Agree</language>
              <language key="tooltip" locale="en">You strongly agree with this statement</language>
              <language key="tooltip" locale="ar">You strongly agree with this statement</language>
              </profile-value>
          <profile-value key="Do NOT Care" value="Do NOT Care">
              <language key="displayname" locale="en">Do NOT Care</language>
              <language key="displayname" locale="ar">Do NOT Care</language>
              <language key="tooltip" locale="en">You do not care about this statement</language>
              <language key="tooltip" locale="ar">You do not care about this statement</language>
          </profile-value>
        </profile-key>
        <profile-key key="Product coolness" required="true">
            <language key="displayname" locale="en">My product is totally cool, unique, and trendy and everyone will NEED to own it.</language>
            <language key="displayname" locale="ar">My product is totally cool, unique, and trendy and everyone will NEED to own it.</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
              <language key="displayname" locale="en">Strongly Disagree</language>
              <language key="displayname" locale="ar">Strongly Disagree</language>
              <language key="tooltip" locale="en">You strongly disagree with this statement</language>
              <language key="tooltip" locale="ar">You strongly disagree with this statement</language>
          </profile-value>
          <profile-value key="Disagree" value="Disagree">
              <language key="displayname" locale="en">Disagree</language>
              <language key="displayname" locale="ar">Disagree</language>
              <language key="tooltip" locale="en">You disagree with this statement</language>
              <language key="tooltip" locale="ar">You disagree with this statement</language>
          </profile-value>
          <profile-value key="Slightly Disagree" value="Slightly Disagree">
              <language key="displayname" locale="en">Slightly Disagree</language>
              <language key="displayname" locale="ar">Slightly Disagree</language>
              <language key="tooltip" locale="en">You slightly disagree with this statement</language>
              <language key="tooltip" locale="ar">You slightly disagree with this statement</language>
          </profile-value>
          <profile-value key="Slightly Agree" value="Slightly Agree">
              <language key="displayname" locale="en">Slightly Agree</language>
              <language key="displayname" locale="ar">Slightly Agree</language>
              <language key="tooltip" locale="en">You slightly agree with this statement</language>
              <language key="tooltip" locale="ar">You slightly agree with this statement</language>
          </profile-value>
          <profile-value key="Agree" value="Agree">
              <language key="displayname" locale="en">Agree</language>
              <language key="displayname" locale="ar">Agree</language>
              <language key="tooltip" locale="en">You agree with this statement</language>
              <language key="tooltip" locale="ar">You agree with this statement</language>
          </profile-value>
              <profile-value key="Strongly Agree" value="Strongly Agree">
              <language key="displayname" locale="en">Strongly Agree</language>
              <language key="displayname" locale="ar">Strongly Agree</language>
              <language key="tooltip" locale="en">You strongly agree with this statement</language>
              <language key="tooltip" locale="ar">You strongly agree with this statement</language>
              </profile-value>
          <profile-value key="Do NOT Care" value="Do NOT Care">
              <language key="displayname" locale="en">Do NOT Care</language>
              <language key="displayname" locale="ar">Do NOT Care</language>
              <language key="tooltip" locale="en">You do not care about this statement</language>
              <language key="tooltip" locale="ar">You do not care about this statement</language>
          </profile-value>
        </profile-key>
        <profile-key key="Product durability" required="true">
            <language key="displayname" locale="en">Durability is a key factor of my product and it won't drop even if you drop it!</language>
            <language key="displayname" locale="ar">Durability is a key factor of my product and it won't drop even if you drop it!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
              <language key="displayname" locale="en">Strongly Disagree</language>
              <language key="displayname" locale="ar">Strongly Disagree</language>
              <language key="tooltip" locale="en">You strongly disagree with this statement</language>
              <language key="tooltip" locale="ar">You strongly disagree with this statement</language>
          </profile-value>
          <profile-value key="Disagree" value="Disagree">
              <language key="displayname" locale="en">Disagree</language>
              <language key="displayname" locale="ar">Disagree</language>
              <language key="tooltip" locale="en">You disagree with this statement</language>
              <language key="tooltip" locale="ar">You disagree with this statement</language>
          </profile-value>
          <profile-value key="Slightly Disagree" value="Slightly Disagree">
              <language key="displayname" locale="en">Slightly Disagree</language>
              <language key="displayname" locale="ar">Slightly Disagree</language>
              <language key="tooltip" locale="en">You slightly disagree with this statement</language>
              <language key="tooltip" locale="ar">You slightly disagree with this statement</language>
          </profile-value>
          <profile-value key="Slightly Agree" value="Slightly Agree">
              <language key="displayname" locale="en">Slightly Agree</language>
              <language key="displayname" locale="ar">Slightly Agree</language>
              <language key="tooltip" locale="en">You slightly agree with this statement</language>
              <language key="tooltip" locale="ar">You slightly agree with this statement</language>
          </profile-value>
          <profile-value key="Agree" value="Agree">
              <language key="displayname" locale="en">Agree</language>
              <language key="displayname" locale="ar">Agree</language>
              <language key="tooltip" locale="en">You agree with this statement</language>
              <language key="tooltip" locale="ar">You agree with this statement</language>
          </profile-value>
              <profile-value key="Strongly Agree" value="Strongly Agree">
              <language key="displayname" locale="en">Strongly Agree</language>
              <language key="displayname" locale="ar">Strongly Agree</language>
              <language key="tooltip" locale="en">You strongly agree with this statement</language>
              <language key="tooltip" locale="ar">You strongly agree with this statement</language>
              </profile-value>
          <profile-value key="Do NOT Care" value="Do NOT Care">
              <language key="displayname" locale="en">Do NOT Care</language>
              <language key="displayname" locale="ar">Do NOT Care</language>
              <language key="tooltip" locale="en">You do not care about this statement</language>
              <language key="tooltip" locale="ar">You do not care about this statement</language>
          </profile-value>
        </profile-key>
        <!-- Survey 2 profile keys -->
        <profile-key key="Percent Widget 1" required="false">
            <language key="displayname" locale="en">Netflix</language>
            <language key="displayname" locale="ar">Netflix</language>
            <language key="tooltip" locale="en">Netflix and code</language>
            <language key="tooltip" locale="ar">Netflix and code</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget 2" required="false">
            <language key="displayname" locale="en">Hulu</language>
            <language key="displayname" locale="ar">Hulu</language>
            <language key="tooltip" locale="en">Hulu</language>
            <language key="tooltip" locale="ar">Hulu</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget 3" required="false">
            <language key="displayname" locale="en">Amazon</language>
            <language key="displayname" locale="ar">Amazon</language>
            <language key="tooltip" locale="en">Amazon</language>
            <language key="tooltip" locale="ar">Amazon</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget 4" required="false">
            <language key="displayname" locale="en">Other (No tooltip)</language>
            <language key="displayname" locale="ar">Other (No tooltip)</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget Total" required="false">
            <profile key="hidden" value="true"/>
        </profile-key>
        <!-- Output Questions profile keys -->
        <profile-key key="emailto" required="true">
            <language key="displayname" locale="en">To: (email address)</language>
            <language key="displayname" locale="ar">To: (email address)</language>
            <language key="placeholder" locale="en">Example: john@example.com</language>
            <language key="placeholder" locale="ar">Example: john@example.com</language>
            <language key="error" locale="en">'TO' email address is not valid.</language>
            <language key="error" locale="ar">'TO' email address is not valid.</language>
            <profile key="widget" value="text-input"/>
            <profile key="inputtype" value="email"/>
        </profile-key>
        <profile-key key="emailfrom" required="true">
            <language key="displayname" locale="en">From: (email address)</language>
            <language key="displayname" locale="ar">From: (email address)</language>
            <language key="placeholder" locale="en">Example: jane@example.com</language>
            <language key="placeholder" locale="ar">Example: jane@example.com</language>
            <language key="error" locale="en">'FROM' email address is not valid.</language>
            <language key="error" locale="ar">'FROM' email address is not valid.</language>
            <profile key="widget" value="text-input"/>
            <profile key="inputtype" value="email"/>
        </profile-key>
        <profile-key key="emailnote" required="false">
            <language key="displayname" locale="en">Note: (optional)</language>
            <language key="displayname" locale="ar">Note: (optional)</language>
            <language key="placeholder" locale="en">Please check out this great product!</language>
            <language key="placeholder" locale="ar">Please check out this great product!</language>
            <profile key="widget" value="text-area"/>
            <profile key="inputtype" value="text"/>
        </profile-key>
        <profile-key key="messagedata" required="false">
            <profile key="type" value="text"/>
            <profile key="hidden" value="true"/>
        </profile-key>
        <!-- Output Questions profile keys -->
        <profile-key key="uid" required="false">
            <naming name="e2e_prototypeUid"/>
        </profile-key>
        <profile key="BestChoice" value="10"/>
    </game>
</client>
',
          app_pb:
            '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE client SYSTEM "object.dtd">
<client name="e2e_prototype_pb">
	<game name="e2e_prototype_pb" fixed="false">
		<attribute name="color" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="red">
                <language key="description" locale="en"><![CDATA[<img src="assets/tooltips/color_red.jpg">]]>Electric crimson or red is a color whose hue resembles that of blood, or a ruby, and is of the long-wave extreme of the visible spectrum. Red is also a primary color. The hex for this color is #FF003F and the first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">&lt;b&gt;Electric Crimson&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/color_red.png</language>
            </level>
            <level value="orange">
                <language key="description" locale="en">Orange is a color between red and yellow that is like the color of fire and carrots. It is also a fruit that grows in California and Florida. The hex for this color is #FF9966 and the first know word usage was in 1542.</language>
                <language key="displayname" locale="en">Orange</language>
                <language key="icon" locale="en">assets/icons/color_orange.png</language>
            </level>
            <level value="yellow">
                <language key="description" locale="en">Yellow is having the color of the sun, butter, or ripe lemons. Yellow is also a primary color. It can be mixed with the other 2 primary colors to make lots of other colors but no colors mixed together can make yellow. The hex for this color is #ffd500 and the first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Butter Yellow</language>
                <language key="icon" locale="en">assets/icons/color_yellow.png</language>
            </level>
            <level value="green">
                <language key="description" locale="en">Green is a color whose hue is between yellow and blue and is associated with growing fresh grass, an emerald, Spring, evil, or envy. A person can also be "green with envy." The "Wicked Witch of the West" was green. The hex for this color is#009900 and the first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Green</language>
                <language key="icon" locale="en">assets/icons/color_green.png</language>
            </level>
            <level value="gray">
                <language key="description" locale="en">Gray is a series of neutral colors ranging between black and white and is often the color associated with age, usually depicted gray or silver hair. Also Gray is also the color associated with cloudy days and clouds filled with rain, hence the saying, "it's a gray day today." The hex for this color is #848482 and the first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Battleship Gray</language>
                <language key="icon" locale="en">assets/icons/color_gray.png</language>
            </level>
            <level value="blue">
                <language key="description" locale="en">Blue is a color whose hue is that of the clear sky, water, and is the portion of the color spectrum lying between green and violet. Blue is also a primary color. It can be mixed with the other 2 primary colors to make lots of other colors but no colors mixed together can make blue. The hex for this color is #007af3 and the first known word usage was before the 13th century.</language>
                <language key="displayname" locale="en">Blue</language>
                <language key="icon" locale="en">assets/icons/color_blue.png</language>
            </level>
            <level value="purple">
                <language key="description" locale="en">Purple is any of various colors that fall about midway between red and blue in hue, an is often the color worn as an emblem of rank or authority. The hex for this color is #4b0082 and the first known word usage was before the 15th century.</language>
                <language key="displayname" locale="en">Purple</language>
                <language key="icon" locale="en">assets/icons/color_purple.png</language>
            </level>
            <level value="black">
                <language key="description" locale="en">Black is a word that has many, many meanings. Examples are typically associated with evil as in "black magic", a VERY bad mood, having the very dark color of coal, the night sky, something served without cream or milk as in "black coffee", or even used to describe humor that deals with subjects which are usually regarded as very serious or unpleasant. To make the color black, mix all of the other colors together and voila!, you get a mess, or black. The hex for this color is #000000 and the first known usage was before 12th century.</language>
                <language key="displayname" locale="en">Starry Night</language>
                <language key="icon" locale="en">assets/icons/color_black.png</language>
            </level>
            <level value="maroon">
                <language key="description" locale="en">Maroon is a variant of the color red and is considered a dark red color. The word maroon comes from the French word maroon which means "chestnut".  Vajrayana Buddhist monks wear robes that are colored various shades of maroon. To make maroon start with red, add some blue and a little black and there you have it! Crayola introduced the maroon crayon to their pack in 1949. The crayola crayon hex for this color is #C32148 and the first recorded use of maroon as a color name in English was in 1789.</language>
                <language key="displayname" locale="en">&lt;b&gt;Maroon&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/color_maroon.png</language>
            </level>
			<language key="description" locale="en">Color is defined as the phenomenon of light (as red, brown, pink, or gray) or visual perception that enables one to differentiate otherwise identical objects.</language>
			<language key="displayname" locale="en">Which color do you prefer?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate a GREATER or LESSER preference for the colors shown.</language>
			<language key="leastpreferred" locale="en">Prefer Less</language>
			<language key="mostpreferred" locale="en">Prefer More</language>
			<language key="icon" locale="en">assets/icons/color.png</language>
			<language key="group" locale="en"/>
			<language key="shortname" locale="en">Color</language>
		</attribute>
        <attribute name="basepay" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="number" unacceptables-allowed="true">
            <level value="0">
                <language key="displayname" locale="en">0%</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value=".5">
                <language key="displayname" locale="en">0.5%</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="1">
                <language key="displayname" locale="en">1%</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="1.5">
                <language key="displayname" locale="en">1.5%</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="2">
                <language key="displayname" locale="en">2%</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="2.5">
                <language key="displayname" locale="en">2.5%</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="3">
                <language key="displayname" locale="en">3%</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <language key="displayname" locale="en">What base pay increase do you prefer?</language>
            <language key="shortname" locale="en">Base Pay</language>
            <language key="instructions" locale="en">Move the slider to the option you prefer.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">This question is asking you to move the horizontal slider to the option you most prefer.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="group" locale="en"/>
            <language key="minicon" locale="en">assets/icons/price_low.png</language>
            <language key="maxicon" locale="en">assets/icons/price_high.png</language>
            <language key="mindisplayname" locale="en">&lt;b&gt;0% Increase&lt;/b&gt;</language>
            <language key="maxdisplayname" locale="en">&lt;b&gt;3% Increase&lt;/b&gt;</language>
            <language key="mindescription" locale="en">0% Increase</language>
            <language key="maxdescription" locale="en">3% Increase</language>
            <profile key="groupwidget" value="range-scale-single-thumb-large-icon"/>
        </attribute>
        <attribute name="power vs efficiency" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="number" unacceptables-allowed="false">
            <level value="1">
                <language key="description" locale="en">Ultimate Efficiency</language>
                <language key="displayname" locale="en">&lt;b&gt;Ultimate Efficiency&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="2">
                <language key="description" locale="en">High Efficiency</language>
                <language key="displayname" locale="en">High Efficiency</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="3">
                <language key="description" locale="en">Medium Efficiency</language>
                <language key="displayname" locale="en">Medium Efficiency</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="4">
                <language key="description" locale="en">Medium Power</language>
                <language key="displayname" locale="en">Medium Power</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="5">
                <language key="description" locale="en">High Power</language>
                <language key="displayname" locale="en">High Power</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="6">
                <language key="description" locale="en">Ultimate Power</language>
                <language key="displayname" locale="en">&lt;b&gt;Ultimate Power&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <language key="description" locale="en">The balance between power and fuel economy that you would like to achieve.</language>
            <language key="displayname" locale="en">What balance would you like between ultimate power and ultimate fuel-efficiency?</language>
            <language key="shortname" locale="en">Power vs. efficiency</language>
            <language key="instructions" locale="en">Move the slider towards the option you prefer. How far you move the slider depends on how strongly you prefer that option.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">This question is asking you to move the horizontal slider to the option you most prefer.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="minicon" locale="en">assets/icons/noindicator/price_low.png</language>
            <language key="maxicon" locale="en">assets/icons/noindicator/price_high.png</language>
            <language key="mindisplayname" locale="en">&lt;b&gt;Ultimate Efficiency&lt;/b&gt;</language>
            <language key="maxdisplayname" locale="en">&lt;b&gt;Ultimate Power&lt;/b&gt;</language>
            <language key="maxdisplayprefix" locale="en">Maximum: </language>
            <language key="mindisplayprefix" locale="en">Minimum: </language>
            <language key="help.title" locale="en">Instructions</language>
            <language key="help.body" locale="en">Move the slider to show the calendar-year deductible / premium combination that is most acceptable to you.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="group" locale="en"/>
            <language key="upperboundincrement" locale="en">1</language>
            <language key="lowerbounddecrement" locale="en">1</language>
            <profile key="groupwidget" value="range-scale-single-thumb"/>
            <profile key="softimplicit" value="descending"/>
            <profile key="implicit.min" value="0"/>
            <profile key="implicit.max" value="10"/>
        </attribute>
        <attribute name="fuel consumption" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="number" unacceptables-allowed="false">
            <!-- UK MPG -->
            <level value="20">
                <language key="description" locale="en">Average fuel consumption of 20 MPG</language>
                <language key="displayname" locale="en">&lt;b&gt;20 MPG&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="25">
                <language key="description" locale="en">Average fuel consumption of 25 MPG</language>
                <language key="displayname" locale="en">25 MPG</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="30">
                <language key="description" locale="en">Average fuel consumption of 30 MPG</language>
                <language key="displayname" locale="en">30 MPG</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="35">
                <language key="description" locale="en">Average fuel consumption of 35 MPG</language>
                <language key="displayname" locale="en">35 MPG</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="40">
                <language key="description" locale="en">Average fuel consumption of 40 MPG</language>
                <language key="displayname" locale="en">40 MPG</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="45">
                <language key="description" locale="en">Average fuel consumption of 45 MPG</language>
                <language key="displayname" locale="en">45 MPG</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="50">
                <language key="description" locale="en">Average fuel consumption of 50 MPG</language>
                <language key="displayname" locale="en">50 MPG</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="55">
                <language key="description" locale="en">Average fuel consumption of 55 MPG</language>
                <language key="displayname" locale="en">55 MPG</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <level value="60">
                <language key="description" locale="en">Average fuel consumption of 60 MPG</language>
                <language key="displayname" locale="en">&lt;b&gt;60 MPG&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/price_high.png</language>
            </level>
            <language key="description" locale="en">How much fuel does the car use?</language>
            <language key="displayname" locale="en">What fuel consumption are you expecting from your new car?</language>
            <language key="shortname" locale="en">Fuel consumption</language>
            <language key="instructions" locale="en">Move the slider towards the option you prefer. How far you move the slider depends on how strongly you prefer that option.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">This question is asking you to move the horizontal slider to the option you most prefer.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="minicon" locale="en">assets/icons/noindicator/price_low.png</language>
            <language key="maxicon" locale="en">assets/icons/noindicator/price_high.png</language>
            <language key="mindisplayname" locale="en">&lt;b&gt;20 MPG&lt;/b&gt;</language>
            <language key="maxdisplayname" locale="en">&lt;b&gt;60 MPG&lt;/b&gt;</language>
            <language key="maxdisplayprefix" locale="en">Maximum: </language>
            <language key="mindisplayprefix" locale="en">Minimum: </language>
            <language key="levelwidget.options" locale="en">1||2||3||4||5</language>
            <language key="upperboundincrement" locale="en">1</language>
            <language key="lowerbounddecrement" locale="en">1</language>
            <profile key="horizontalslider" value="price"/>
            <profile key="groupwidget" value="range-scale-two-thumb"/>
            <profile key="softimplicit" value="ascending"/>
            <profile key="implicit.min" value="0"/>
            <profile key="implicit.max" value="10"/>
        </attribute>
        <attribute name="size" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="small">
                <language key="description" locale="en">Small, in this case, refers to having comparatively little size or slight dimensions. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">&lt;b&gt;Small&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/size_small.png</language>
            </level>
            <level value="medium">
                <language key="description" locale="en">Medium, in this case, refers to something in a middle position. The first known word usage was in 1589.</language>
                <language key="displayname" locale="en">Medium</language>
                <language key="icon" locale="en">assets/icons/size_medium.png</language>
            </level>
            <level value="large">
                <language key="description" locale="en">Large, in this case, refers to exceeding most other things of like kind especially in quantity or size. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">Large</language>
                <language key="icon" locale="en">assets/icons/size_large.png</language>
            </level>
            <level value="xlarge">
                <language key="description" locale="en">Extra large, in this case, refers to large or great in dimensions, bulk, or extent. The first known word usage was before the 12th century.</language>
                <language key="displayname" locale="en">&lt;b&gt;Extra Large&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/size_xlarge.png</language>
            </level>
			<language key="description" locale="en">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
			<language key="displayname" locale="en">What size should your product be?</language>
			<language key="leastpreferred" locale="en">Less Important</language>
			<language key="mostpreferred" locale="en">More Important</language>
			<language key="icon" locale="en">assets/icons/size.png</language>
            <language key="intro.title" locale="en">Size</language>
			<language key="intro.body" locale="en">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
			<language key="intro.label" locale="en">Close</language>
			<language key="intro.image" locale="en">assets/popups/content/image.jpg</language>
			<language key="intro.image.alt" locale="en">Intro content image</language>
			<language key="group" locale="en"/>
			<language key="shortname" locale="en">Size</language>
			<profile key="implicitwarning" type="String" value="descending"/>
		</attribute>
		<attribute name="weight" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">My product should be exceedingly light and should weigh next to nothing or be light as air.</language>
                <language key="displayname" locale="en">&lt;b&gt;0 or Light as air&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/weight_0.png</language>
            </level>
            <level value="5">
                <language key="description" locale="en">My product should weigh no more than 5 pounds because I am going to carry it in my arms or tote it around in my backpack for long enough to be a problem if it weighs more.</language>
                <language key="displayname" locale="en">5 Pounds</language>
                <language key="icon" locale="en">assets/icons/weight_5.png</language>
            </level>
            <level value="10">
                <language key="description" locale="en">My product can weigh up to 10 pounds because I am going to carry it in my backpack or in my carry on luggage so I will not be directly stressed by the weight.</language>
                <language key="displayname" locale="en">10 Pounds</language>
                <language key="icon" locale="en">assets/icons/weight_10.png</language>
            </level>
            <level value="15">
                <language key="description" locale="en">My product can weigh 15 pounds or more because I am never going to be carrying it. It will sit on my desk either at work or home.</language>
                <language key="displayname" locale="en">&lt;b&gt;15 Pounds&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/weight_15.png</language>
            </level>
			<language key="description" locale="en">Weight is the standard or established amount that a thing should weigh. The first known word usage was in 1647.</language>
			<language key="displayname" locale="en">How much should your product weigh?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the weights shown.</language>
			<language key="leastpreferred" locale="en">Less Important</language>
			<language key="mostpreferred" locale="en">More Important</language>
			<language key="icon" locale="en">assets/icons/weight.png</language>
			<language key="group" locale="en"/>
			<language key="shortname" locale="en">Weight</language>
		</attribute>
		<attribute name="shape" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="circle">
                <language key="description" locale="en">A circle is a closed plane curve and every point is equidistant from a fixed point within the curve. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a &lt;b&gt;Circle&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/shape_circle.png</language>
            </level>
            <level value="square">
                <language key="description" locale="en">A square is defined as having four equal sides and four right angles. The first known word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Square</language>
                <language key="icon" locale="en">assets/icons/shape_square.png</language>
            </level>
            <level value="triangle">
                <language key="description" locale="en">A triangle is a geometric figure with three sides and three angles. Each two sides meet at a point called a vertex, and the three angles sum to 180°. A triangle with one 90° (right) angle is a right triangle. A triangle with all sides (and thus all angles) equal is equilateral, one with two sides equal is isosceles, and one with no two sides equal is scalene. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Triangle</language>
                <language key="icon" locale="en">assets/icons/shape_triangle.png</language>
            </level>
            <level value="rectangle">
                <language key="description" locale="en">A rectangle is defined as a parallelogram whose angles are all right angles and whose adjacent sides are of unequal length. The first know word usage was in 1571.</language>
                <language key="displayname" locale="en">My product will be in the shape of a &lt;b&gt;Rectangle&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/shape_rectangle.png</language>
            </level>
			<language key="description" locale="en">Shape is defined as the visible makeup characteristic of a particular item or kind of item. The first known word usage was before the 12th century.</language>
			<language key="displayname" locale="en">What shape should your product be?</language>
			<language key="leastpreferred" locale="en"><![CDATA[<p>Less<br/>Like</p>]]></language>
			<language key="mostpreferred" locale="en"><![CDATA[<p>More<br/>Like</p>]]></language>
			<language key="icon" locale="en">assets/icons/shape.png</language>
			<language key="group" locale="en"/>
			<language key="shortname" locale="en">Shape</language>
		</attribute>
		<attribute name="intuition" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="completely intuitive">
                <language key="description" locale="en">No education is needed. You can use this product with little or no instruction.</language>
                <language key="displayname" locale="en">&lt;b&gt;Completely intuitive&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/intuition_completelyintuitive.png</language>
                <profile key="groupname" type="String" value="intuitive"/>
            </level>
            <level value="grade school">
                <language key="description" locale="en">Someone with a grade school education will be able to use this product.</language>
                <language key="displayname" locale="en">Grade School</language>
                <language key="icon" locale="en">assets/icons/intuition_gradeschool.png</language>
                <profile key="groupname" type="String" value="grade-school"/>
            </level>
            <level value="junior high school">
                <language key="description" locale="en">Someone with a junior high school education can use this product.</language>
                <language key="displayname" locale="en">Junior High school</language>
                <language key="icon" locale="en">assets/icons/intuition_juniorhighschool.png</language>
                <profile key="groupname" type="String" value="junior-high-school"/>
            </level>
            <level value="high school">
                <language key="description" locale="en">You need at least a high school education to use this product.</language>
                <language key="displayname" locale="en">High School</language>
                <language key="icon" locale="en">assets/icons/intuition_highschool.png</language>
                <profile key="groupname" type="String" value="high-school"/>
            </level>
            <level value="college">
                <language key="description" locale="en">You need a college degree to use this product.</language>
                <language key="displayname" locale="en">College</language>
                <language key="icon" locale="en">assets/icons/intuition_college.png</language>
                <profile key="groupname" type="String" value="college"/>
            </level>
            <level value="graduate degree">
                <language key="description" locale="en">You need a graduate degree to use this product.</language>
                <language key="displayname" locale="en">Graduate School</language>
                <language key="icon" locale="en">assets/icons/intuition_graduatedegree.png</language>
                <profile key="groupname" type="String" value="graduate"/>
            </level>
            <level value="doctorate">
                <language key="description" locale="en">Without a doctorate you'll never figure this product out.</language>
                <language key="displayname" locale="en">&lt;b&gt;Doctorate&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/intuition_doctorate.png</language>
                <profile key="groupname" type="String" value="doctorate"/>
            </level>
			<language key="description" locale="en">In a perfect world, your product will be easy for anyone to use and figure out, but this is not a perfect world. How intuitive is your product?</language>
			<language key="displayname" locale="en">How intuitive does your product need to be?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate a GREATER or LESSER preference for the level of intuition shown.</language>
			<language key="leastpreferred" locale="en">Less Intuitive</language>
			<language key="mostpreferred" locale="en">More Intuitive</language>
			<language key="icon" locale="en">assets/icons/intuition.png</language>
			<language key="group" locale="en"/>
			<language key="shortname" locale="en">Product intuition</language>
		</attribute>
		<attribute name="delivery" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="same day">
                <language key="description" locale="en">You want same-day delivery for time-sensitive stuff because it's really important.</language>
                <language key="displayname" locale="en">&lt;b&gt;Same day&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/delivery_same.png</language>
            </level>
            <level value="next day">
                <language key="description" locale="en">You can wait for next-day delivery for your important stuff because it'll still come in time.</language>
                <language key="displayname" locale="en">Next day</language>
                <language key="icon" locale="en">assets/icons/delivery_next.png</language>
            </level>
            <level value="3 days">
                <language key="description" locale="en">You're good with waiting a few extra days for delivery.</language>
                <language key="displayname" locale="en">3 days</language>
                <language key="icon" locale="en">assets/icons/delivery_3.png</language>
            </level>
            <level value="5 days">
                <language key="description" locale="en">You can wait 5 days for delivery, but just barely.</language>
                <language key="displayname" locale="en">5 days</language>
                <language key="icon" locale="en">assets/icons/delivery_5.png</language>
            </level>
            <level value="7 days">
                <language key="description" locale="en">You're not so impatient that 7 days will kill you to wait for delivery.</language>
                <language key="displayname" locale="en">&lt;b&gt;7 days&lt;/b&gt;</language>
                <language key="icon" locale="en">assets/icons/delivery_7.png</language>
            </level>
			<language key="description" locale="en">For some people, speed is of the essence and for others, they can wait until the cows come home!  So the question is, how impatient are you?</language>
			<language key="displayname" locale="en">How fast do you want your product delivered to you?</language>
			<language key="icon" locale="en">assets/icons/delivery.png</language>
            <language key="instructions" locale="en">Select the delivery speed most important to you.</language>
			<language key="group" locale="en"/>
			<language key="shortname" locale="en">Delivery</language>
			<profile key="groupwidget" value="single-select"/>
			<profile key="groupwidget.showoptiontext" type="String" value="true"/>
		</attribute>
		<attribute name="price" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="number" unacceptables-allowed="true">
            <level value="0">
                <language key="description" locale="en">I am not willing to spend any amount of money per month.</language>
                <language key="displayname" locale="en">&#36;0</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="25">
                <language key="description" locale="en">I am willing to spend up to &#36;25 per month.</language>
                <language key="displayname" locale="en">&#36;25</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="50">
                <language key="description" locale="en">I am willing to spend up to &#36;50 per month.</language>
                <language key="displayname" locale="en">&#36;50</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="75">
                <language key="description" locale="en">I am willing to spend up to &#36;75 per month.</language>
                <language key="displayname" locale="en">&#36;75</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="100">
                <language key="description" locale="en">I am willing to spend up to &#36;100 per month.</language>
                <language key="displayname" locale="en">&#36;100</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="125">
                <language key="description" locale="en">I am willing to spend up to &#36;125 per month.</language>
                <language key="displayname" locale="en">&#36;125</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="150">
                <language key="description" locale="en">I am willing to spend up to &#36;150 per month.</language>
                <language key="displayname" locale="en">&#36;150</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="175">
                <language key="description" locale="en">I am willing to spend up to &#36;175 per month.</language>
                <language key="displayname" locale="en">&#36;175</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
            <level value="200">
                <language key="description" locale="en">I am willing to spend up to &#36;200 per month.</language>
                <language key="displayname" locale="en">&#36;200</language>
                <language key="icon" locale="en">assets/icons/price_med.png</language>
            </level>
			<language key="description" locale="en">This is the amount in dollars that you would like to spend per month.</language>
			<language key="displayname" locale="en">What is the amount of money that you would be willing to spend each month?</language>
			<language key="group" locale="en"/>
			<language key="shortname" locale="en">Price</language>
			<language key="minicon" locale="en">assets/icons/noindicator/price_low.png</language>
			<language key="maxicon" locale="en">assets/icons/noindicator/price_high.png</language>
			<language key="mindescription" locale="en">No monthly premium paid for prescription drug coverage.</language>
			<language key="maxdescription" locale="en">$200 monthly premium paid for prescription drug coverage.</language>
			<language key="icon" locale="en">assets/icons/price.png</language>
            <language key="instructions" locale="en">Use the controls to indicate your minimum and maximum prices.</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">This question asks you to choose your top preference from a set of several options. Click on the single left or right arrow to incrementally adjust the option. Clicking on the double right arrow will jump to the highest option of $200. Clicking on the double left arrow will jump to the lowest option multiple of $0.</language>
			<language key="help.gotit" locale="en">Got it!</language>
			<language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
			<language key="help.assets.image.alt" locale="en">Help content image</language>
			<profile key="horizontalslider" value="price"/>
			<profile key="groupwidget" value="counter"/>
		</attribute>
        <attribute name="Hidden Price" implicit="descending" must-have-allowed="false" skip-allowed="false" type="price" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">0</language>
                <language key="displayname" locale="en">0</language>
                <language key="icon" locale="en"/>
            </level>
            <level value="1">
                <language key="description" locale="en">1</language>
                <language key="displayname" locale="en">1</language>
                <language key="icon" locale="en"/>
            </level>
            <language key="description" locale="en">Hidden Price</language>
            <language key="displayname" locale="en">Hidden Price</language>
            <language key="group" locale="en"/>
            <profile key="hidden" value="true"/>
        </attribute>
        <!--Restricted Pairs-->
		<restricted-set name="1">
			<restricted-attribute name="color">
				<restricted-level value="orange"/>
				<restricted-level value="red"/>
				<restricted-level value="purple"/>
				<restricted-level value="blue"/>
				<restricted-level value="green"/>
				<restricted-level value="maroon"/>
				<restricted-level value="yellow"/>
				<restricted-level value="gray"/>
				<restricted-level value="black"/>
			</restricted-attribute>
			<restricted-attribute name="Hidden Price">
				<restricted-level value="1"/>
				<restricted-level value="0"/>
			</restricted-attribute>
		</restricted-set>
		<restricted-set name="2">
			<restricted-attribute name="size">
				<restricted-level value="small"/>
				<restricted-level value="large"/>
				<restricted-level value="medium"/>
				<restricted-level value="xlarge"/>
			</restricted-attribute>
			<restricted-attribute name="Hidden Price">
				<restricted-level value="1"/>
				<restricted-level value="0"/>
			</restricted-attribute>
		</restricted-set>
		<restricted-set name="3">
			<restricted-attribute name="weight">
				<restricted-level value="10"/>
				<restricted-level value="0"/>
				<restricted-level value="5"/>
				<restricted-level value="15"/>
			</restricted-attribute>
			<restricted-attribute name="Hidden Price">
				<restricted-level value="1"/>
				<restricted-level value="0"/>
			</restricted-attribute>
		</restricted-set>
		<restricted-set name="4">
			<restricted-attribute name="shape">
				<restricted-level value="rectangle"/>
				<restricted-level value="triangle"/>
				<restricted-level value="square"/>
				<restricted-level value="circle"/>
			</restricted-attribute>
			<restricted-attribute name="Hidden Price">
				<restricted-level value="1"/>
				<restricted-level value="0"/>
			</restricted-attribute>
		</restricted-set>
		<restricted-set name="5">
			<restricted-attribute name="intuition">
				<restricted-level value="grade school"/>
				<restricted-level value="doctorate"/>
				<restricted-level value="high school"/>
				<restricted-level value="completely intuitive"/>
				<restricted-level value="college"/>
				<restricted-level value="graduate degree"/>
				<restricted-level value="junior high school"/>
			</restricted-attribute>
			<restricted-attribute name="Hidden Price">
				<restricted-level value="1"/>
				<restricted-level value="0"/>
			</restricted-attribute>
		</restricted-set>
		<restricted-set name="6">
			<restricted-attribute name="Hidden Price">
				<restricted-level value="1"/>
				<restricted-level value="0"/>
			</restricted-attribute>
			<restricted-attribute name="delivery">
				<restricted-level value="5 days"/>
				<restricted-level value="7 days"/>
				<restricted-level value="next day"/>
				<restricted-level value="3 days"/>
				<restricted-level value="same day"/>
			</restricted-attribute>
		</restricted-set>
		<restricted-set name="7">
			<restricted-attribute name="Hidden Price">
				<restricted-level value="1"/>
				<restricted-level value="0"/>
			</restricted-attribute>
			<restricted-attribute name="price">
				<restricted-level value="125"/>
				<restricted-level value="150"/>
				<restricted-level value="0"/>
				<restricted-level value="175"/>
				<restricted-level value="200"/>
				<restricted-level value="25"/>
				<restricted-level value="100"/>
				<restricted-level value="75"/>
				<restricted-level value="50"/>
			</restricted-attribute>
		</restricted-set>
        <restricted-set name="8">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="fuel consumption">
                <restricted-level value="20"/>
                <restricted-level value="25"/>
                <restricted-level value="30"/>
                <restricted-level value="35"/>
                <restricted-level value="40"/>
                <restricted-level value="45"/>
                <restricted-level value="50"/>
                <restricted-level value="45"/>
                <restricted-level value="60"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="9">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="basepay">
                <restricted-level value="0"/>
                <restricted-level value=".5"/>
                <restricted-level value="1"/>
                <restricted-level value="1.5"/>
                <restricted-level value="2"/>
                <restricted-level value="2.5"/>
                <restricted-level value="3"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="10">
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
            <restricted-attribute name="power vs efficiency">
                <restricted-level value="1"/>
                <restricted-level value="2"/>
                <restricted-level value="3"/>
                <restricted-level value="4"/>
                <restricted-level value="5"/>
                <restricted-level value="6"/>
            </restricted-attribute>
        </restricted-set>
		<!--Subgame-->
		<subgame name="e2e_prototype_pb" version-label="0">
			<subgame-attribute name="color">
				<subgame-level value="red"/>
				<subgame-level value="orange"/>
				<subgame-level value="yellow"/>
				<subgame-level value="green"/>
				<subgame-level value="gray"/>
				<subgame-level value="blue"/>
				<subgame-level value="purple"/>
				<subgame-level value="black"/>
				<subgame-level value="maroon"/>
			</subgame-attribute>
            <subgame-attribute name="basepay">
                <subgame-level value="0"/>
                <subgame-level value=".5"/>
                <subgame-level value="1"/>
                <subgame-level value="1.5"/>
                <subgame-level value="2"/>
                <subgame-level value="2.5"/>
                <subgame-level value="3"/>
            </subgame-attribute>
            <subgame-attribute name="power vs efficiency">
                <subgame-level value="1" />
                <subgame-level value="2" />
                <subgame-level value="3" />
                <subgame-level value="4" />
                <subgame-level value="5" />
                <subgame-level value="6" />
            </subgame-attribute>
            <subgame-attribute name="fuel consumption">
                <!--fuel consumption range from 20 to 60 increments of 5-->
                <subgame-level value="20"/>
                <subgame-level value="25"/>
                <subgame-level value="30"/>
                <subgame-level value="35"/>
                <subgame-level value="40"/>
                <subgame-level value="45"/>
                <subgame-level value="50"/>
                <subgame-level value="55"/>
                <subgame-level value="60"/>
            </subgame-attribute>
			<subgame-attribute name="size">
				<subgame-level value="small"/>
				<subgame-level value="medium"/>
				<subgame-level value="large"/>
				<subgame-level value="xlarge"/>
			</subgame-attribute>
			<subgame-attribute name="weight">
				<subgame-level value="0"/>
				<subgame-level value="5"/>
				<subgame-level value="10"/>
				<subgame-level value="15"/>
			</subgame-attribute>
			<subgame-attribute name="shape">
				<subgame-level value="circle"/>
				<subgame-level value="square"/>
				<subgame-level value="triangle"/>
				<subgame-level value="rectangle"/>
			</subgame-attribute>
			<subgame-attribute name="intuition">
				<subgame-level value="completely intuitive"/>
				<subgame-level value="grade school"/>
				<subgame-level value="junior high school"/>
				<subgame-level value="high school"/>
				<subgame-level value="college"/>
				<subgame-level value="graduate degree"/>
				<subgame-level value="doctorate"/>
			</subgame-attribute>
			<subgame-attribute name="delivery">
				<subgame-level value="same day"/>
				<subgame-level value="next day"/>
				<subgame-level value="3 days"/>
				<subgame-level value="5 days"/>
				<subgame-level value="7 days"/>
			</subgame-attribute>
			<subgame-attribute name="price">
				<subgame-level value="0"/>
				<subgame-level value="25"/>
				<subgame-level value="50"/>
				<subgame-level value="75"/>
				<subgame-level value="100"/>
				<subgame-level value="125"/>
				<subgame-level value="150"/>
				<subgame-level value="175"/>
				<subgame-level value="200"/>
			</subgame-attribute>
			<subgame-attribute name="Hidden Price">
				<subgame-level value="0"/>
				<subgame-level value="1"/>
			</subgame-attribute>
            <naming name="e2e_prototype_pb" by-owner="true" type="bfd.domain.game.Game" owner="[Client]e2e_prototype_pb/[Game]e2e_prototype_pb"/>
		</subgame>
        <subgame name="prototypepbsubgame" version-label="0">
			<subgame-attribute name="color">
				<subgame-level value="red"/>
				<subgame-level value="orange"/>
				<subgame-level value="yellow"/>
				<subgame-level value="green"/>
				<subgame-level value="gray"/>
				<subgame-level value="blue"/>
				<subgame-level value="purple"/>
				<subgame-level value="black"/>
				<subgame-level value="maroon"/>
			</subgame-attribute>
            <subgame-attribute name="basepay">
                <subgame-level value="0"/>
                <subgame-level value=".5"/>
                <subgame-level value="1"/>
                <subgame-level value="1.5"/>
                <subgame-level value="2"/>
                <subgame-level value="2.5"/>
                <subgame-level value="3"/>
            </subgame-attribute>
            <subgame-attribute name="power vs efficiency">
                <subgame-level value="1" />
                <subgame-level value="2" />
                <subgame-level value="3" />
                <subgame-level value="4" />
                <subgame-level value="5" />
                <subgame-level value="6" />
            </subgame-attribute>
            <subgame-attribute name="fuel consumption">
                <!--fuel consumption range from 20 to 60 increments of 5-->
                <subgame-level value="20"/>
                <subgame-level value="25"/>
                <subgame-level value="30"/>
                <subgame-level value="35"/>
                <subgame-level value="40"/>
                <subgame-level value="45"/>
                <subgame-level value="50"/>
                <subgame-level value="55"/>
                <subgame-level value="60"/>
            </subgame-attribute>
			<subgame-attribute name="size">
				<subgame-level value="small"/>
				<subgame-level value="medium"/>
				<subgame-level value="large"/>
				<subgame-level value="xlarge"/>
			</subgame-attribute>
			<subgame-attribute name="weight">
				<subgame-level value="0"/>
				<subgame-level value="5"/>
				<subgame-level value="10"/>
				<subgame-level value="15"/>
			</subgame-attribute>
			<subgame-attribute name="shape">
				<subgame-level value="circle"/>
				<subgame-level value="square"/>
				<subgame-level value="triangle"/>
				<subgame-level value="rectangle"/>
			</subgame-attribute>
			<subgame-attribute name="intuition">
				<subgame-level value="completely intuitive"/>
				<subgame-level value="grade school"/>
				<subgame-level value="junior high school"/>
				<subgame-level value="high school"/>
				<subgame-level value="college"/>
				<subgame-level value="graduate degree"/>
				<subgame-level value="doctorate"/>
			</subgame-attribute>
			<subgame-attribute name="delivery">
				<subgame-level value="same day"/>
				<subgame-level value="next day"/>
				<subgame-level value="3 days"/>
				<subgame-level value="5 days"/>
				<subgame-level value="7 days"/>
			</subgame-attribute>
			<subgame-attribute name="price">
				<subgame-level value="0"/>
				<subgame-level value="25"/>
				<subgame-level value="50"/>
				<subgame-level value="75"/>
				<subgame-level value="100"/>
				<subgame-level value="125"/>
				<subgame-level value="150"/>
				<subgame-level value="175"/>
				<subgame-level value="200"/>
			</subgame-attribute>
			<subgame-attribute name="Hidden Price">
				<subgame-level value="0"/>
				<subgame-level value="1"/>
			</subgame-attribute>
            <naming name="prototypepbsubgame" by-owner="true" type="bfd.domain.game.Game" owner="[Client]e2e_prototype_pb/[Game]e2e_prototype_pb"/>
		</subgame>
        <subgame name="prototypepbsubgame2" version-label="0">
			<subgame-attribute name="color">
				<subgame-level value="red"/>
				<subgame-level value="orange"/>
				<subgame-level value="yellow"/>
				<subgame-level value="green"/>
				<subgame-level value="gray"/>
				<subgame-level value="blue"/>
				<subgame-level value="purple"/>
				<subgame-level value="black"/>
				<subgame-level value="maroon"/>
			</subgame-attribute>
            <subgame-attribute name="basepay">
                <subgame-level value="0"/>
                <subgame-level value=".5"/>
                <subgame-level value="1"/>
                <subgame-level value="1.5"/>
                <subgame-level value="2"/>
                <subgame-level value="2.5"/>
                <subgame-level value="3"/>
            </subgame-attribute>
            <subgame-attribute name="power vs efficiency">
                <subgame-level value="1" />
                <subgame-level value="2" />
                <subgame-level value="3" />
                <subgame-level value="4" />
                <subgame-level value="5" />
                <subgame-level value="6" />
            </subgame-attribute>
            <subgame-attribute name="fuel consumption">
                <!--fuel consumption range from 20 to 60 increments of 5-->
                <subgame-level value="20"/>
                <subgame-level value="25"/>
                <subgame-level value="30"/>
                <subgame-level value="35"/>
                <subgame-level value="40"/>
                <subgame-level value="45"/>
                <subgame-level value="50"/>
                <subgame-level value="55"/>
                <subgame-level value="60"/>
            </subgame-attribute>
			<subgame-attribute name="size">
				<subgame-level value="small"/>
				<subgame-level value="medium"/>
				<subgame-level value="large"/>
				<subgame-level value="xlarge"/>
			</subgame-attribute>
			<subgame-attribute name="weight">
				<subgame-level value="0"/>
				<subgame-level value="5"/>
				<subgame-level value="10"/>
				<subgame-level value="15"/>
			</subgame-attribute>
			<subgame-attribute name="shape">
				<subgame-level value="circle"/>
				<subgame-level value="square"/>
				<subgame-level value="triangle"/>
				<subgame-level value="rectangle"/>
			</subgame-attribute>
			<subgame-attribute name="intuition">
				<subgame-level value="completely intuitive"/>
				<subgame-level value="grade school"/>
				<subgame-level value="junior high school"/>
				<subgame-level value="high school"/>
				<subgame-level value="college"/>
				<subgame-level value="graduate degree"/>
				<subgame-level value="doctorate"/>
			</subgame-attribute>
			<subgame-attribute name="delivery">
				<subgame-level value="same day"/>
				<subgame-level value="next day"/>
				<subgame-level value="3 days"/>
				<subgame-level value="5 days"/>
				<subgame-level value="7 days"/>
			</subgame-attribute>
			<subgame-attribute name="price">
				<subgame-level value="0"/>
				<subgame-level value="25"/>
				<subgame-level value="50"/>
				<subgame-level value="75"/>
				<subgame-level value="100"/>
				<subgame-level value="125"/>
				<subgame-level value="150"/>
				<subgame-level value="175"/>
				<subgame-level value="200"/>
			</subgame-attribute>
			<subgame-attribute name="Hidden Price">
				<subgame-level value="0"/>
				<subgame-level value="1"/>
			</subgame-attribute>
            <naming name="prototypepbsubgame2" by-owner="true" type="bfd.domain.game.Game" owner="[Client]e2e_prototype_pb/[Game]e2e_prototype_pb"/>
		</subgame>
        <!--Misc Client Files-->
        <resource name="main" value="truechoice/app/clients/prototype/4.3.2/">
            <language key="browserTitle" locale="en">Prototype - PB</language>
        </resource>
		<!--game description-->
		<resource name="system">
			<language key="error.scrollbarnotmoved.message" locale="en">Are you sure you have scrolled down to answer all of the questions? The scroll bar is located on the right side of your screen. Click 'yes' to continue or 'no' to modify your answers.</language>
			<!-- English System Messages -->
			<language key="title.attention" locale="en">Attention</language>
			<language key="error.helpdeskemail.title" locale="en">Attention</language>
			<language key="error.helpdeskemail.message" locale="en">Your last request failed because of a communications problem with our servers.
            &lt;br&gt;&lt;br&gt;Please restart by refreshing this webpage.  We apologize for the inconvenience.
            &lt;br&gt;&lt;br&gt;Before you try again, please make sure your network connection is active and reconfirm that you are connected to the internet.
            &lt;br&gt;&lt;br&gt;For further assistance, please email</language>
			<language key="error.helpdeskemail.reference" locale="en">Reference</language>
			<language key="retry" locale="en">Retry</language>
			<language key="error.mustscale.message" locale="en">Please change the value for at least one option.</language>
			<language key="error.emailinvalid.title" locale="en">Invalid Email</language>
			<language key="error.emailinvalid.message" locale="en">Please verify that your email address is correct and try again.</language>
			<language key="error.missingrequired.title" locale="en">Questions Not Answered</language>
			<language key="error.missingrequired.message" locale="en">You have not answered all of the questions on this page. Please make sure the question marked with an asterisk (*) has been answered.</language>
            <language key="devicenotsupported.body" locale="en">Your screen resolution is insufficient to view this application. Must be at least 1024x768.&lt;br&gt;&lt;br&gt;Please try on a device with a larger screen.</language>
			<language key="devicenotsupported.footer" locale="en">Should you require assistance, please contact us at &lt;a href="mailto:helpdesk@truechoicesolutions.com?subject=Device%20Support"&gt;helpdesk@truechoicesolutions.com&lt;/a&gt;</language>
            <!-- Director alert -->
            <language key="error.director.title" locale="en">Response required</language>
			<language key="error.director.message" locale="en">To proceed further, please select an option and click or tap "Next" to continue.</language>
            <!-- restart alert -->
            <language key="restart.title" locale="en">ATTENTION - You are about to return to the start of the survey.</language>
            <language key="restart.message" locale="en">Hey! Testing restart alert popup and restart application feature. Click "Yes" to restart the application. Click on "No" to remain in this stage.</language>
            <!--general-->
			<language key="next" locale="en">Next</language>
			<language key="back" locale="en">Back</language>
			<language key="help" locale="en">Help</language>
			<language key="skip" locale="en">SKIP</language>
			<language key="disclosure" locale="en">Information</language>
			<language key="alert.button.close" locale="en">Close</language>
			<language key="alert.button.ok" locale="en">Ok</language>
			<language key="alert.button.yes" locale="en">Yes</language>
			<language key="alert.button.no" locale="en">No</language>
			<language key="disclaimer" locale="en">Copyright © 2020 TrueChoice Solutions, Inc. | <![CDATA[<a href="//www.truechoicesolutions.com/Privacy-Policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>]]>. | </language>
			<language key="loading" locale="en">Loading...</language>
            <language key="assets.main.loading" locale="en">assets/main/loading.gif</language>
            <language key="preference.importance.labels" locale="en">NOT IMPORTANT||SOMEWHAT IMPORTANT||IMPORTANT||VERY IMPORTANT||EXTREMELY IMPORTANT</language>
            <!-- implicit warning -->
			<language key="implicitwarning.moveup.message" locale="en">Note: You have rated a more valued option equal to or below a less valued one.</language>
			<language key="implicitwarning.moveup.title" locale="en">Move up.</language>
			<language key="implicitwarning.movedown.message" locale="en">Note: You have rated a less valued option equal to or above a more valued one.</language>
			<language key="implicitwarning.movedown.title" locale="en">Move down.</language>
			<language key="implicitwarning.message" locale="en">The sliders are now out of order. Would you like to move the slider to its original position?</language>
			<language key="implicitwarning.title" locale="en">Attention</language>
			<language key="implicitwarning.morebelowless.message" locale="en">Did you know that you have rated a more valued option equal to or below a less valued one? Do you want to proceed?</language>
			<language key="implicitwarning.lessabovemore.message" locale="en">Did you know that you have rated a less valued option equal to or above a more valued one? Do you want to proceed?</language>
			<!--stage 2-->
			<language key="attributes.leastpreferred" locale="en">Less Important</language>
			<language key="attributes.mostpreferred" locale="en">More Important</language>
			<!--stage 3-->
			<language key="tradeoffs.vs" locale="en">OR</language>
			<language key="tradeoffs.offer1" locale="en">Option 1</language>
			<language key="tradeoffs.offer2" locale="en">Option 2</language>
            <language key="tradeoffs.preference.labels" locale="en">Greatly Prefer Option 1||Prefer Option 1||Slightly Prefer Option 1||Indifferent||Slightly Prefer Option 2||Prefer Option 2||Greatly Prefer Option 2</language>
            <!-- Stage 4 -->
            <language key="error.requiredinput.label" locale="en">Your Answer Is Invalid</language>
			<!-- Percent Allocation -->
			<language key="percentmeter.totalmaxalert" locale="en">Maximum of 100% has been reached</language>
			<language key="percentmeter.valuedisplaytext" locale="en">/ 100%</language>
            <language key="error.sumvaluesinvalid.title" locale="en">Invalid sum</language>
            <language key="error.sumvaluesinvalid.message" locale="en">Values must equate to 100</language>
			<!-- disclosure popup -->
			<language key="disclosure.title" locale="en">Information</language>
			<language key="disclosure.body" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.&lt;br&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.</language>
			<language key="disclosure.gotit" locale="en">Close</language>
			<!-- Set flag to true to animate the icons -->
			<language key="animateicons" locale="en">true</language>
            <!-- Warning to user to confirm navigating away from app -->
            <language key="warning.leavingapp.message" locale="en">Warning! You are about to leave the app and lose all data</language>
			<!-- app template -->
            <profile key="app.templateversion" value="1"/>
			<!-- widget thumb states -->
			<profile key="usethumbstates" value="true"/>
			<!-- PC and Tablets only: true/false -->
			<profile key="devicenotsupported" value="false"/>
			<!-- request processor -->
			<profile key="instance-attribute-requestprocessor" value="averaging"/>
            <!-- To use dynamic breadcrumbs or not: true|false -->
            <profile key="usedynamicbreadcrumbs" value="true"/>
            <!-- Notification Bar -->
            <profile key="notificationbar.timeout" value="4000"/>
		</resource>
		<resource name="controls">
			<resource-element value="consent"/>
			<resource-element value="levels"/>
			<resource-element value="attributes"/>
			<resource-element value="tradeoffs"/>
			<resource-element value="aboutyou"/>
            <resource-element value="survey1"/>
            <resource-element value="survey2"/>
            <resource-element value="output"/>
		</resource>
		<!-- UID passed in from URL -->
        <resource name="url">
            <resource-element value="uid" />
        </resource>
		<!--stage description-->
        <resource name="consent" value="survey">
            <resource-element value="Consent Title Label"/>
            <resource-element value="Consent Label One"/>
            <resource-element value="Consent One Question"/>
            <resource-element value="Consent Label Two"/>
            <resource-element value="Consent Two Question"/>
            <resource-element value="Consent Contact Info One Label"/>
            <resource-element value="Consent Contact Info Two Label"/>
            <language key="help.title" locale="en">Attention</language>
            <language key="help.body" locale="en"><![CDATA[<p>Your consent is required to continue with this application.</p> <br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.gotit" locale="en">OK</language>
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="error.missingrequired.title" locale="en">Attention</language>
            <language key="alert.button.ok" locale="en">OK</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="error.missingrequired.message" locale="en"><![CDATA[<p>Your consent is required to continue with this application.</p> <br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="templateurl" locale="en">survey_consent.tpl.html</language>
            <profile key="help" value="true"/>
        </resource> 
		<resource name="levels" value="level">
            <language key="title" locale="en">Rate Your Preferences</language>
            <language key="instructions.unordered" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the elements shown.</language>
            <language key="instructions.ordered" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the elements shown. The sliders have been pre-set in order of generally accepted preferences. Therefore, you cannot move a slider above the one to its right or lower than the one to its left.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="mostpreferred" locale="en">More Important</language>
            <language key="leastpreferred" locale="en">Less Important</language>
			<language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What are we asking you to do here?</language>
            <language key="help.body" locale="en">
                <![CDATA[<p>
                This question is asking you to state your preferences across a range of items.
                <br/>
                <br/>
                Please indicate how much you prefer or value each item – in relation to the others – by moving the slider to a GREATER or LESSER preference or value for each of the elements shown. How far you move the slider depends on how strongly you feel about the item.
                <br/>
                <br/>
                You cannot have the same preference value for all the choices shown.
                </p>]]>
            </language>
            <language key="help.gotit" locale="en">Got it!</language>
			<language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
			<language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Part 1: || of ||</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>

            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Levels</language>
            <language key="intro.body" locale="en">First, we'd like to ask you about your preferences for items that inspire you create and develop a new product in areas including color, size, weight, shape and price. </language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/level/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (levels)</language>
			<profile key="help" value="true"/>
			<profile key="implicit.min" value="4.8"/>
			<profile key="implicit.max" value="5.2"/>
			<profile key="widget" value="level-scale"/>
            <profile key="widget.showvalueasinteger" value="true"/>
			<profile key="groupwidget.hideleastmost" value="true"/>
		</resource>
		<resource name="attributes" value="attribute">
			<language key="title" locale="en">What's more important to you?</language>
			<language key="leastpreferred" locale="en">Least Important</language>
			<language key="mostpreferred" locale="en">Most Important</language>
			<language key="infodisplay.header" locale="en">Your Choices from Part 1:</language>
			<language key="infodisplay.header.topchoice" locale="en">Your Top Choice from Part 1:</language>
			<language key="infodisplay.leastpreferred" locale="en">Least Preferred</language>
			<language key="infodisplay.mostpreferred" locale="en">Most Preferred</language>
			<language key="infodisplay.mostpreferred.mobile" locale="en">Most Preferred From Part 1:</language>
            <language key="infodisplay.leastpreferred.mobile" locale="en">Least Preferred From Part 1:</language>
            <language key="infodisplay.vs" locale="en">vs</language>
			<language key="infodisplay.rating.header" locale="en">Your Rating for this Attribute</language>
            <language key="instructions" locale="en">
                <![CDATA[<p>
                For each of the categories below, indicate its importance <b><u>relative to the others</u></b> by moving the slider towards the right (more important) or towards the left (less important).
                </p>]]>
            </language>
            <language key="help.title" locale="en">What are we asking you to do here?</language>
            <language key="help.body" locale="en">
                <![CDATA[<p>
                This screen lists the feature categories we asked you about in the first part of this application. Now, we'd like to understand how important each of these feature categories are relative to one another. As you consider each category, your most and least preferred choices appear to remind you of your earlier responses.
                <br/>
                <br/>
                For each category, you are being asked to indicate how important each is to you, from a scale of LEAST importance (1) to GREATEST importance (100).
                </p>]]>
            </language>
            <language key="help.label" locale="en">Close</language>
			<language key="help.gotit" locale="en">Got it!</language>
			<language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
			<language key="help.assets.image.alt" locale="en">Help content image</language>
			<language key="breadcrumbdisplay.message" locale="en">Part 2</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-attribute</language>
			<!-- Stage intro popup -->
            <language key="intro.title" locale="en">Attributes</language>
            <language key="intro.body" locale="en">Next we will ask you to rate the options from section one against each other. Please click or tap each option to indicate its importance to you and your product.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/attribute/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (attribute)</language>
			<language key="groupwidget.displayname" locale="en">Please select your most important feature.</language>
			<language key="groupwidget.placeholder" locale="en">Please select...</language>
			<language key="groupwidget.icon" locale="en">assets/icons/color_red.png</language>
			<profile key="help" value="true"/>
			<profile key="widget" value="attribute-scale"/>
		</resource>
		<resource name="tradeoffs" value="tradeoff">
            <language key="title" locale="en">Which option do you prefer?</language>
            <language key="instructions" locale="en">
                <![CDATA[<p>
                Assume all your choices are identical in every way except for the features shown. Based on the strength of your preference, slide towards the combination you prefer.
                </p>]]>
            </language>
			<language key="mostpreferred" locale="en">Most Preferred</language>
			<language key="leastpreferred" locale="en">Least Preferred</language>
			<language key="help.title" locale="en">Which Do You Prefer?</language>
            <language key="help.body" locale="en">
                <![CDATA[<p>
                Assume all your choices are identical in every way except for the features shown. Based on the strength of your preference, move the slider towards the combination you prefer.
                </p>]]>
            </language>
			<language key="help.label" locale="en">Close</language>
			<language key="help.gotit" locale="en">Got it!</language>
			<language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
			<language key="help.assets.image.alt" locale="en">Help content image</language>
			<language key="breadcrumbdisplay.message" locale="en">Part 3: || of ||</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-tradeoff</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Tradeoffs</language>
            <language key="intro.body" locale="en">Next we will show several different feature combinations based on the level of importance you place on these option in section two. Based on the strength of your preference, tap on the combination you prefer. If the displayed combination is unimportant to you, click next and move onto the next combination.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/tradeoff/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (tradeoff)</language>
			<profile key="help" value="true"/>
			<profile key="numtradeoffs" value="4"/>
			<profile key="widget" value="tradeoff-scale"/>
			<profile key="widget.showvaluefromzerototen" value="true"/>
		</resource>
		<resource name="aboutyou" value="survey">
            <resource-element value="Name Question"/>
            <resource-element value="State Province Question"/>
            <resource-element value="Email Question"/>
            <resource-element value="Date of Birth Question"/>
            <resource-element value="What is the likelihood that you will answer all of these questions? Question"/>
            <resource-element value="Favorite Month Question"/>
            <resource-element value="How much energy do you use per year Question"/>
            <resource-element value="Contact Me Question"/>
            <resource-element value="Favorite Day Question"/>
            <resource-element value="What is your age Question"/>
            <resource-element value="Example Radio Button Question"/>
            <resource-element value="About Yourself Question"/>
            <resource-element value="Comments Question"/>
            <language key="title" locale="en">Please take a moment to tell us a little about yourself:</language>
            <language key="instructions" locale="en">Not so optional questions about you because all of the these fields are REQUIRED.</language>
            <language key="breadcrumbdisplay.message" locale="en">About You</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">About You</language>
            <language key="intro.body" locale="en">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are completely optional.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (About You)</language>
            <profile key="columns" value="2"/>
		</resource>
		<resource name="survey1" value="survey">
            <resource-element value="Potential market size Question"/>
			<resource-element value="Product coolness Question"/>
			<resource-element value="Product durability Question"/>
            <resource-element value="Target customer Question"/>
            <language key="title" locale="en">Product Features</language>
			<language key="instructions" locale="en">I have a good understanding of my product: (Select one response for each)</language>
			<language key="numberoflabels" locale="en">7</language>
            <language key="label1" locale="en">Strongly Disagree</language>
			<language key="labeltooltip1" locale="en">You strongly disagree with this statement</language>
            <language key="label2" locale="en">Disagree</language>
			<language key="labeltooltip2" locale="en">You disagree with this statement</language>
            <language key="label3" locale="en">Slightly Disagree</language>
			<language key="labeltooltip3" locale="en">You slightly disagree with this statement</language>
			<language key="label4" locale="en">Slightly Agree</language>
			<language key="labeltooltip4" locale="en">You slightly agree with this statement</language>
            <language key="label5" locale="en">Agree</language>
			<language key="labeltooltip5" locale="en">You agree with this statement</language>
            <language key="label6" locale="en">Strongly Agree</language>
			<language key="labeltooltip6" locale="en">You strongly agree with this statement</language>
			<language key="label7" locale="en">Do NOT Care</language>
            <language key="labeltooltip7" locale="en">You do not care about this statement</language>
            <language key="breadcrumbdisplay.message" locale="en">Survey 1</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Survey</language>
            <language key="intro.body" locale="en">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are required, and you will not be able to continue without answering them.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (Survey1)</language>
            <language key="templateurl" locale="en">survey_radio_group.tpl.html</language>
			<language key="boldallgrouplabels" locale="en">false</language>
            <language key="help" locale="en"></language>
            <profile key="help" value="true"/>
            <profile key="widget" value="radio-group"/>
            <profile key="widget.notapplicableoption" value="true"/>
		</resource>
        <!-- Used for testing "unbolded" radio groups (see previous resource's profile key 'boldallgrouplabels') -->
        <resource name="survey2" value="survey">
            <resource-element value="Potential market size Question"/>
			<resource-element value="Product coolness Question"/>
			<language key="title" locale="en">Product Features</language>
			<language key="instructions" locale="en">I have a good understanding of my product: (Select one response for each)</language>
			<language key="numberoflabels" locale="en">7</language>
            <language key="label1" locale="en">Strongly Disagree</language>
			<language key="labeltooltip1" locale="en">You strongly disagree with this statement</language>
            <language key="label2" locale="en">Disagree</language>
			<language key="labeltooltip2" locale="en">You disagree with this statement</language>
            <language key="label3" locale="en">Slightly Disagree</language>
			<language key="labeltooltip3" locale="en">You slightly disagree with this statement</language>
			<language key="label4" locale="en">Slightly Agree</language>
			<language key="labeltooltip4" locale="en">You slightly agree with this statement</language>
            <language key="label5" locale="en">Agree</language>
			<language key="labeltooltip5" locale="en">You agree with this statement</language>
            <language key="label6" locale="en">Strongly Agree</language>
			<language key="labeltooltip6" locale="en">You strongly agree with this statement</language>
			<language key="label7" locale="en">Do NOT Care</language>
            <language key="labeltooltip7" locale="en">You do not care about this statement</language>
            <language key="breadcrumbdisplay.message" locale="en">Survey 1</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Survey</language>
            <language key="intro.body" locale="en">Almost done! Now we just have a few questions that we'd like to ask you. Any information you provide will be kept completely confidential and will not be shared with any third party. These questions are required, and you will not be able to continue without answering them.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/survey/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (Survey1)</language>
            <language key="templateurl" locale="en">survey_radio_group.tpl.html</language>
			<profile key="widget" value="radio-group"/>
            <profile key="widget.notapplicableoption" value="true"/>
            <profile key="widget.buttoncolors" value="false"/>
		</resource>
        <resource name="output" value="output">
			<resource-element value="Product1 Question"/>
			<resource-element value="Product2 Question"/>
			<resource-element value="Email To Question"/>
			<resource-element value="Email From Question"/>
			<resource-element value="Email Note Question"/>
			<language key="title" locale="en">Thank You!</language>
			<language key="subtitle" locale="en">Here's some personalized information about your product that is most interesting. You have a great chance for success!</language>
            <language key="breadcrumbdisplay.message" locale="en">Your Recommendations</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-output</language>
            <language key="button1.label" locale="en">Contact Me Now</language>
			<language key="button2.label" locale="en">Yahoo</language>
			<language key="button3.label" locale="en">Google</language>
			<language key="button4.label" locale="en">Email a friend</language>
			<language key="button5.label" locale="en">Game Stuff</language>
			<language key="button6.label" locale="en">TCS</language>
			<language key="button7.label" locale="en">ESPN</language>
			<language key="button8.label" locale="en">Restart</language>
			<language key="footer" locale="en">You can now close your browser</language>
			<language key="links.title" locale="en">Helpful links:</language>
			<language key="link1.label" locale="en">Link to TCS - Click here if you would like to visit the TCS website!</language>
			<language key="link2.label" locale="en">Link to Yahoo - Click here if you would like to visit the Yahoo! website!</language>
			<language key="link3.label" locale="en">Link to Google - Click here if you would like to visit the Google website!</language>
			<language key="messagesheader.label" locale="en">What you said was important:</language>
			<language key="preferenceprofile.title" locale="en">Your Preference Profile</language>
			<language key="preferenceprofile.preferencekey" locale="en">Your Preferences</language>
			<language key="preferenceprofile.peerkey" locale="en">Your Peers</language>
            <language key="producttitle" locale="en">About the product</language>
            <language key="productfeaturestitle" locale="en">More product features we want to tell you about:</language>
			<language key="outputinfopopupheader.label" locale="en">How do these products relate to your preferences?</language>
			<language key="outputinfopopuptitle.label" locale="en">This recommendation was given based on your preferences. Here is the breakdown of your responses.</language>
			<language key="tab1.label" locale="en">Top Solution Suggestion</language>
			<language key="tab2.label" locale="en">Also of Interest</language>
			<!-- Email Popup -->
			<language key="emailpopup.send" locale="en">SUBMIT</language>
			<language key="emailpopup.close" locale="en">Close</language>
			<language key="emailpopup.title" locale="en">Email results</language>
			<language key="emailpopup.error.invalidtoemail" locale="en">Please enter a valid TO Email address.</language>
			<language key="emailpopup.error.invalidfromemail" locale="en">Please enter a valid FROM Email address.</language>
			<language key="emailpopup.error.invalidallemails" locale="en">Please enter valid TO/FROM Email addresses.</language>
			<!-- Product templates, cfm -->
			<language key="cfm.url" locale="en">data/pb/cfm.xml</language>
			<language key="templateurl" locale="en">output.pb.tpl.html</language>
			<language key="product1.templateurl" locale="en">output.pb.layout.html</language>
			<language key="product2.templateurl" locale="en">output.pb.layout.html</language>
			<language key="product3.templateurl" locale="en">output.pb.layout.html</language>
			<!-- Product template subversions: 'a' is default, 'b' is small-image -->
			<language key="templatesubversion" locale="en">a</language>
			<profile key="restart.directurl.param.game" value="prototype_director"/>
			<profile key="restart.prettyurl.param.loc" value="prototype_director"/>
            <profile key="restart.subgame.prototypepbsubgame.directurl.param.game" value="functional_tests" />
            <profile key="restart.subgame.prototypepbsubgame.prettyurl.param.loc" value="functional_tests" />            
            <profile key="restart.subgame.prototypepbsubgame2.directurl.param.game" value="prototype" />
            <profile key="restart.subgame.prototypepbsubgame2.prettyurl.param.loc" value="prototype" />
            <profile key="emailquestions" value="emailto||emailfrom||emailnote"/>
			<profile key="isproductbased" value="true"/>
            <profile key="persistjsondata" value="false"/>
		</resource>
		<!-- Consent Resources -->
        <resource name="Consent Title Label" type="Alias" value="Consent Title"/>
        <resource name="Consent Label One" type="Alias" value="Consent One Label"/>
        <resource name="Consent One Question" type="Alias" value="Consent One"/>
        <resource name="Consent Two Question" type="Alias" value="Consent Two"/>
        <resource name="Consent Label Two" type="Alias" value="Consent Two Label"/>
        <resource name="Consent Contact Info One Label" type="Alias" value="Consent Contact Info One"/>
        <resource name="Consent Contact Info Two Label" type="Alias" value="Consent Contact Info Two"/> 
		<!-- About You Resources -->
        <resource name="Name Question" type="Alias" value="Full Name"/>
        <resource name="State Province Question" type="Alias" value="State Province"/>
        <resource name="Email Question" type="Alias" value="Email"/>
        <resource name="Date of Birth Question" type="Alias" value="Date of Birth"/>
        <resource name="What is the likelihood that you will answer all of these questions? Question" type="Alias" value="What is the likelihood that you will answer all of these questions?"/>
        <resource name="Favorite Month Question" type="Alias" value="Favorite Month"/>
        <resource name="Contact Me Question" type="Alias" value="Contact Me"/>
        <resource name="How much energy do you use per year Question" type="Alias" value="How much energy do you use per year"/>
		<resource name="Favorite Day Question" type="Alias" value="Favorite Day"/>
        <resource name="What is your age Question" type="Alias" value="What is your age"/>
        <resource name="Example Radio Button Question" type="Alias" value="Example Radio Button"/>
        <resource name="About Yourself Question" type="Alias" value="About Yourself"/>
        <resource name="Comments Question" type="Alias" value="Comments"/>
        <!-- Survey 1 Resources -->
        <resource name="Potential market size Question" type="Alias" value="Potential market size">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Target customer Question" type="Alias" value="Target customer">
            <profile key="type" value="radiobutton"/>
		</resource>
		<resource name="Product coolness Question" type="Alias" value="Product coolness">
            <profile key="type" value="radiobutton"/>
		</resource>
		<resource name="Product durability Question" type="Alias" value="Product durability">
            <profile key="type" value="radiobutton"/>
		</resource>
        <!-- Output Questions -->
		<resource name="Product1 Question" type="Alias" value="Product1">
			<profile key="type" value="text"/>
		</resource>
		<resource name="Product2 Question" type="Alias" value="Product2">
			<profile key="type" value="text"/>
		</resource>
		<resource name="Email To Question" type="Alias" value="emailto">
			<profile key="type" value="text"/>
		</resource>
		<resource name="Email From Question" type="Alias" value="emailfrom">
			<profile key="type" value="text"/>
		</resource>
		<resource name="Email Note Question" type="Alias" value="emailnote">
			<profile key="type" value="text"/>
		</resource>
		<naming name="e2e_prototype_pb" by-owner="false"/>
		<!-- Consent profile keys -->
        <profile-key key="Consent Title" required="false">
            <language key="displayname" locale="en"><![CDATA[<span style="font-size:20px;"><b>User Transparency</b></span>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent One Label" required="false">
            <language key="displayname" locale="en"><![CDATA[<p><b>TrueChoice Solutions, Inc. is a data analytics company that will collect your product and service preferences data. This will help BrandCo develop future product and service strategies that benefit your business.</b></p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent One" required="true">
            <language key="displayname" locale="en">Do you consent to this?</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="optin" value="I consent">
                <language key="displayname" locale="en">I consent</language>
                <language key="error.requiredinput.label" locale="en">Must consent to proceed</language>
            </profile-value>
        </profile-key>
        <profile-key key="Consent Two Label" required="false">
            <language key="displayname" locale="en"><![CDATA[<p>TrueChoice Solutions, Inc. will share your data with BrandCo for the duration of this 2 month project. We will collect product and service preferences and customer satisfaction information. We will analyze the data in the United States.</p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent Two" required="false">
            <language key="displayname" locale="en">Do you consent to tracking with Facebook Pixel?</language>
            <profile key="externalanalytics.optin" value="true"/>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="analyticstracking" value="I consent">
                <language key="displayname" locale="en">I consent</language>
            </profile-value>
        </profile-key>
        <profile-key key="Consent Contact Info One" required="false">
            <language key="displayname" locale="en"><![CDATA[<p>To learn more about how TrueChoice Solutions, Inc. will manage your data and about your data privacy rights, click or tap <a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>here</i></a>.</p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
            </profile-key>
        <profile-key key="Consent Contact Info Two" required="false">
            <language key="displayname" locale="en"><![CDATA[BrandCo will control the data collected from you by TrueChoice Solutions, Inc. BrandCo's contact information is: <p class="label-display-blockquote">E-mail: privacy@email.com<br/><a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>www.BrandCo.com</i></a></p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
		<!-- About You profile keys -->
        <profile-key key="Full Name" required="false">
            <language key="displayname" locale="en">Your full name</language>
            <language key="placeholder" locale="en">--</language>
            <language key="tooltip" locale="en">Your first and last name. Middle name too, if you want.</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="State Province" required="false">
            <language key="displayname" locale="en">Please enter the State/Province that you live in:</language>
            <language key="tooltip" locale="en">Please enter the State/Province that you live in:</language>
            <profile key="type" value="dropbox"/>
            <profile key="widget" value="drop-down"/>
            <profile-value key="AL" value="AL">
                <language key="displayname" locale="en">Alabama</language>
            </profile-value>
            <profile-value key="AK" value="AK">
                <language key="displayname" locale="en">Alaska</language>
            </profile-value>
            <profile-value key="AZ" value="AZ">
                <language key="displayname" locale="en">Arizona</language>
            </profile-value>
            <profile-value key="AR" value="AR">
                <language key="displayname" locale="en">Arkansas</language>
            </profile-value>
            <profile-value key="British Columbia" value="British Columbia">
                <language key="displayname" locale="en">British Columbia</language>
            </profile-value>
            <profile-value key="CA" value="CA">
                <language key="displayname" locale="en">California</language>
            </profile-value>
            <profile-value key="CO" value="CO">
                <language key="displayname" locale="en">Colorado</language>
            </profile-value>
            <profile-value key="CT" value="CT">
                <language key="displayname" locale="en">Connecticut</language>
            </profile-value>
            <profile-value key="DE" value="DE">
                <language key="displayname" locale="en">Delaware</language>
            </profile-value>
            <profile-value key="DC" value="DC">
                <language key="displayname" locale="en">District of Columbia     </language>
            </profile-value>
            <profile-value key="FL" value="FL">
                <language key="displayname" locale="en">Florida</language>
            </profile-value>
            <profile-value key="GA" value="GA">
                <language key="displayname" locale="en">Georgia</language>
            </profile-value>
            <profile-value key="HI" value="HI">
                <language key="displayname" locale="en">Hawaii</language>
            </profile-value>
            <profile-value key="ID" value="ID">
                <language key="displayname" locale="en">Idaho</language>
            </profile-value>
            <profile-value key="IL" value="IL">
                <language key="displayname" locale="en">Illinois</language>
            </profile-value>
            <profile-value key="IN" value="IN">
                <language key="displayname" locale="en">Indiana</language>
            </profile-value>
            <profile-value key="IA" value="IA">
                <language key="displayname" locale="en">Iowa</language>
            </profile-value>
            <profile-value key="KS" value="KS">
                <language key="displayname" locale="en">Kansas</language>
            </profile-value>
            <profile-value key="KY" value="KY">
                <language key="displayname" locale="en">Kentucky</language>
            </profile-value>
            <profile-value key="LA" value="LA">
                <language key="displayname" locale="en">Louisiana</language>
            </profile-value>
            <profile-value key="ME" value="ME">
                <language key="displayname" locale="en">Maine</language>
            </profile-value>
            <profile-value key="MD" value="MD">
                <language key="displayname" locale="en">Maryland</language>
            </profile-value>
            <profile-value key="MA" value="MA">
                <language key="displayname" locale="en">Massachusetts</language>
            </profile-value>
            <profile-value key="MI" value="MI">
                <language key="displayname" locale="en">Michigan</language>
            </profile-value>
            <profile-value key="MN" value="MN">
                <language key="displayname" locale="en">Minnesota</language>
            </profile-value>
            <profile-value key="MS" value="MS">
                <language key="displayname" locale="en">Mississippi</language>
            </profile-value>
            <profile-value key="MO" value="MO">
                <language key="displayname" locale="en">Missouri</language>
            </profile-value>
            <profile-value key="MT" value="MT">
                <language key="displayname" locale="en">Montana</language>
            </profile-value>
            <profile-value key="NE" value="NE">
                <language key="displayname" locale="en">Nebraska</language>
            </profile-value>
            <profile-value key="NV" value="NV">
                <language key="displayname" locale="en">Nevada</language>
            </profile-value>
            <profile-value key="NH" value="NH">
                <language key="displayname" locale="en">New Hampshire</language>
            </profile-value>
            <profile-value key="NJ" value="NJ">
                <language key="displayname" locale="en">New Jersey</language>
            </profile-value>
            <profile-value key="NM" value="NM">
                <language key="displayname" locale="en">New Mexico</language>
            </profile-value>
            <profile-value key="NY" value="NY">
                <language key="displayname" locale="en">New York</language>
            </profile-value>
            <profile-value key="Newfoundland" value="Newfoundland">
                <language key="displayname" locale="en">Newfoundland</language>
            </profile-value>
            <profile-value key="NC" value="NC">
                <language key="displayname" locale="en">North Carolina</language>
            </profile-value>
            <profile-value key="ND" value="ND">
                <language key="displayname" locale="en">North Dakota</language>
            </profile-value>
            <profile-value key="Northwest Territories" value="Northwest Territories">
                <language key="displayname" locale="en">Northwest Territories</language>
            </profile-value>
            <profile-value key="Nova Scotia" value="Nova Scotia">
                <language key="displayname" locale="en">Nova Scotia</language>
            </profile-value>
            <profile-value key="Nunavut" value="Nunavut">
                <language key="displayname" locale="en">Nunavut</language>
            </profile-value>
            <profile-value key="OH" value="OH">
                <language key="displayname" locale="en">Ohio</language>
            </profile-value>
            <profile-value key="OK" value="OK">
                <language key="displayname" locale="en">Oklahoma</language>
            </profile-value>
            <profile-value key="Ontario" value="Ontario">
                <language key="displayname" locale="en">Ontario</language>
            </profile-value>
            <profile-value key="OR" value="OR">
                <language key="displayname" locale="en">Oregon</language>
            </profile-value>
            <profile-value key="PA" value="PA">
                <language key="displayname" locale="en">Pennsylvania</language>
            </profile-value>
            <profile-value key="Prince Edward Island" value="Prince Edward Island">
                <language key="displayname" locale="en">Prince Edward Island</language>
            </profile-value>
            <profile-value key="Quebec" value="Quebec">
                <language key="displayname" locale="en">Quebec</language>
            </profile-value>
            <profile-value key="RI" value="RI">
                <language key="displayname" locale="en">Rhode Island</language>
            </profile-value>
            <profile-value key="Saskatchewan" value="Saskatchewan">
                <language key="displayname" locale="en">Saskatchewan</language>
            </profile-value>
            <profile-value key="SC" value="SC">
                <language key="displayname" locale="en">South Carolina</language>
            </profile-value>
            <profile-value key="SD" value="SD">
                <language key="displayname" locale="en">South Dakota</language>
            </profile-value>
            <profile-value key="TN" value="TN">
                <language key="displayname" locale="en">Tennessee</language>
            </profile-value>
            <profile-value key="TX" value="TX">
                <language key="displayname" locale="en">Texas</language>
            </profile-value>
            <profile-value key="UT" value="UT">
                <language key="displayname" locale="en">Utah</language>
            </profile-value>
            <profile-value key="VT" value="VT">
                <language key="displayname" locale="en">Vermont</language>
            </profile-value>
            <profile-value key="VA" value="VA">
                <language key="displayname" locale="en">Virginia</language>
            </profile-value>
            <profile-value key="WA" value="WA">
                <language key="displayname" locale="en">Washington</language>
            </profile-value>
            <profile-value key="WV" value="WV">
                <language key="displayname" locale="en">West Virginia</language>
            </profile-value>
            <profile-value key="WI" value="WI">
                <language key="displayname" locale="en">Wisconsin</language>
            </profile-value>
            <profile-value key="WY" value="WY">
                <language key="displayname" locale="en">Wyoming</language>
            </profile-value>
            <profile-value key="Yukon" value="Yukon">
                <language key="displayname" locale="en">Yukon</language>
            </profile-value>
        </profile-key>
        <profile-key key="Email" required="false">
            <language key="displayname" locale="en">Your email address</language>
            <language key="tooltip" locale="en">The email address you use most often</language>
            <language key="boldlabel" locale="en">false</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Date of Birth" required="false">
            <language key="displayname" locale="en">What is your birthday</language>
            <language key="placeholder" locale="en">MM/DD/YYYY</language>
            <language key="tooltip" locale="en">What is your birthday</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Contact Me" required="false">
            <language key="displayname" locale="en">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us.</language>
            <language key="tooltip" locale="en">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us. If you would like to be contacted please select "Yes, please contact me via email that I have previously provided for you".</language>
            <profile key="type" value="radio"/>
            <profile key="widget" value="radio-button"/>
            <profile-value key="Yes" value="Yes, contact me">
                <language key="displayname" locale="en">Yes, please contact me through the email that I have provided</language>
            </profile-value>
            <profile-value key="No" value="No, do not contact me">
                <language key="displayname" locale="en">No, do not contact me, I do not want to recieve emails.</language>
            </profile-value>
        </profile-key>
        <profile-key key="Favorite Month" required="false">
            <language key="displayname" locale="en">What are your favorite months?  I'm betting it's the month you were born in!</language>
            <language key="tooltip" locale="en">Select all that apply.</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="January" value="January">
                <language key="displayname" locale="en">January - Ambitious and serious</language>
            </profile-value>
            <profile-value key="February" value="February">
                <language key="displayname" locale="en">February - Abstract thoughts</language>
            </profile-value>
            <profile-value key="March" value="March">
                <language key="displayname" locale="en">March - Attractive personality</language>
            </profile-value>
            <profile-value key="April" value="April">
                <language key="displayname" locale="en">April - Active and dynamic</language>
            </profile-value>
            <profile-value key="May" value="May">
                <language key="displayname" locale="en">May - Stubborn and hard-hearted</language>
            </profile-value>
            <profile-value key="June" value="June">
                <language key="displayname" locale="en">June - Thinks far with vision</language>
            </profile-value>
            <profile-value key="July" value="July">
                <language key="displayname" locale="en">July - Fun to be with</language>
            </profile-value>
            <profile-value key="August" value="August">
                <language key="displayname" locale="en">August - Loves to joke</language>
            </profile-value>
            <profile-value key="September" value="September">
                <language key="displayname" locale="en">September - Suave and compromising</language>
            </profile-value>
            <profile-value key="October" value="October">
                <language key="displayname" locale="en">October - Loves to chat</language>
            </profile-value>
            <profile-value key="November" value="November">
                <language key="displayname" locale="en">November - Have a lot of ideas</language>
            </profile-value>
            <profile-value key="December" value="December">
                <language key="displayname" locale="en">December - Loyal and generous</language>
            </profile-value>
        </profile-key>
        <profile-key key="What is the likelihood that you will answer all of these questions?" required="false">
            <language key="displayname" locale="en">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <language key="tooltip" locale="en">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <profile key="type" value="rating"/>
            <profile key="widget" value="rating-scale"/>
            <profile key="usehashmarks" value="true"/>
            <profile key="useallhashlabels" value="true"/>
            <profile-value key="NA" value="null">
                <language key="displayname" locale="en"> -- Please select a value -- </language>
                <language key="hashlabel" locale="en">N/A</language>
            </profile-value>
            <profile-value key="0" value="0">
                <language key="displayname" locale="en">0 - Not at all likely</language>
                <language key="hashlabel" locale="en">0</language>
            </profile-value>
            <profile-value key="1" value="1">
                <language key="displayname" locale="en">1 - If you force me to</language>
                <language key="hashlabel" locale="en">1</language>
            </profile-value>
            <profile-value key="2" value="2">
                <language key="displayname" locale="en">2 - Grudgingly</language>
                <language key="hashlabel" locale="en">2</language>
            </profile-value>
            <profile-value key="3" value="3">
                <language key="displayname" locale="en">3 - Do I have to</language>
                <language key="hashlabel" locale="en">3</language>
            </profile-value>
            <profile-value key="4" value="4">
                <language key="displayname" locale="en">4 - Ok, but I'd rather not</language>
                <language key="hashlabel" locale="en">4</language>
            </profile-value>
            <profile-value key="5" value="5">
                <language key="displayname" locale="en">5 - Maybe I will, maybe I won't</language>
                <language key="hashlabel" locale="en">5</language>
            </profile-value>
            <profile-value key="6" value="6">
                <language key="displayname" locale="en">6 - Sure, but not right now</language>
                <language key="hashlabel" locale="en">6</language>
            </profile-value>
            <profile-value key="7" value="7">
                <language key="displayname" locale="en">7 - Yes, but in an hour</language>
                <language key="hashlabel" locale="en">7</language>
            </profile-value>
            <profile-value key="8" value="8">
                <language key="displayname" locale="en">8 - OK, just a sec</language>
                <language key="hashlabel" locale="en">8</language>
            </profile-value>
            <profile-value key="9" value="9">
                <language key="displayname" locale="en">9 - YES!  I'll stop what I'm doing to help out</language>
                <language key="hashlabel" locale="en">9</language>
            </profile-value>
            <profile-value key="10" value="10">
                <language key="displayname" locale="en">10 - Absolutely, already done!  I'm a team player!</language>
                <language key="hashlabel" locale="en">10</language>
            </profile-value>
        </profile-key>
        <profile-key key="How much energy do you use per year" required="false">
            <language key="displayname" locale="en">How much energy do you use per year:</language>
            <language key="boldlabel" locale="en">false</language>
            <profile key="widget" value="rating-scale"/>
            <profile key="type" value="rating"/>
            <profile key="usehashmarks" value="true"/>
            <profile key="useallhashlabels" value="false"/>
            <profile-value key="NA" value="null">
                <language key="displayname" locale="en">-- Please select a value --</language>
                <language key="hashlabel" locale="en">N/A</language>
            </profile-value>
            <profile-value key="0" value="0 kWh">
                <language key="displayname" locale="en">0 kWh</language>
            </profile-value>
            <profile-value key="100" value="100 kWh">
                <language key="displayname" locale="en">100 kWh</language>
            </profile-value>
            <profile-value key="200" value="200 kWh">
                <language key="displayname" locale="en">200 kWh</language>
            </profile-value>
            <profile-value key="300" value="300 kWh">
                <language key="displayname" locale="en">300 kWh</language>
            </profile-value>
            <profile-value key="400" value="400 kWh">
                <language key="displayname" locale="en">400 kWh</language>
            </profile-value>
        </profile-key>
        <profile-key key="Favorite Day" required="false">
            <language key="displayname" locale="en">What is your favorite day?  I'm betting it's the weekend!</language>
            <language key="boldlabel" locale="en">false</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="Monday" value="Monday">
                <language key="displayname" locale="en">Monday</language>
            </profile-value>
			<profile-value key="Tuesday" value="Tuesday">
                <language key="displayname" locale="en">Tuesday</language>
            </profile-value>
			<profile-value key="Wednesday" value="Wednesday">
                <language key="displayname" locale="en">Wednesday</language>
            </profile-value>
			<profile-value key="Thursday" value="Thursday">
                <language key="displayname" locale="en">Thursday</language>
            </profile-value>
			<profile-value key="Friday" value="Friday">
                <language key="displayname" locale="en">Friday</language>
            </profile-value>
			<profile-value key="Saturday" value="Saturday">
                <language key="displayname" locale="en">Saturday</language>
            </profile-value>
			<profile-value key="Sunday" value="Sunday">
                <language key="displayname" locale="en">Sunday</language>
            </profile-value>
		</profile-key>
		<profile-key key="What is your age" required="false">
            <language key="displayname" locale="en">Please choose your age range:</language>
            <language key="boldlabel" locale="en">false</language>
            <profile key="type" value="dropbox"/>
            <profile key="widget" value="drop-down"/>
            <profile-value key="20-29" value="20-29">
                <language key="displayname" locale="en">20-29</language>
            </profile-value>
			<profile-value key="30-39" value="30-39">
                <language key="displayname" locale="en">30-39</language>
            </profile-value>
			<profile-value key="40-49" value="40-49">
                <language key="displayname" locale="en">40-49</language>
            </profile-value>
			<profile-value key="50 or older" value="50 or older">
                <language key="displayname" locale="en">50 or older</language>
            </profile-value>
        </profile-key>
        <profile-key key="Example Radio Button" required="false">
            <language key="displayname" locale="en">Example Radio Button Label.</language>
            <language key="tooltip" locale="en">Example Radio Button tooltip</language>
            <language key="boldlabel" locale="en">false</language>
            <profile key="type" value="radio"/>
            <profile key="widget" value="radio-button"/>
            <profile-value key="Yes" value="Yes, contact me">
                <language key="displayname" locale="en">Yes, please contact me through the email that I have provided</language>
            </profile-value>
            <profile-value key="No" value="No, do not contact me">
                <language key="displayname" locale="en">No, do not contact me, I do not want to recieve emails.</language>
            </profile-value>
        </profile-key>
        <profile-key key="About Yourself" required="false">
            <language key="displayname" locale="en">Tell us about yourself</language>
            <language key="tooltip" locale="en">What kind of a profession are you in, etc.</language>
            <profile key="widget" value="text-area"/>
        </profile-key>
        <profile-key key="Comments" required="false">
            <language key="displayname" locale="en">Comments</language>
            <language key="tooltip" locale="en">Provide any additional comments</language>
            <language key="boldlabel" locale="en">false</language>
            <profile key="widget" value="text-area"/>
        </profile-key>
        <!-- Survey 1 Radio Group 7 Header profile keys -->
        <profile-key key="Potential market size" required="true">
			<language key="displayname" locale="en">The potential market size for my product is huge!</language>
            <language key="tooltip" locale="en">Tooltip text 1 with longer text to test</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
				<language key="displayname" locale="en">Strongly Disagree</language>
				<language key="tooltip" locale="en">You strongly disagree with this statement</language>
			</profile-value>
			<profile-value key="Disagree" value="Disagree">
				<language key="displayname" locale="en">Disagree</language>
				<language key="tooltip" locale="en">You disagree with this statement</language>
			</profile-value>
			<profile-value key="Slightly Disagree" value="Slightly Disagree">
				<language key="displayname" locale="en">Slightly Disagree</language>
				<language key="tooltip" locale="en">You slightly disagree with this statement</language>
			</profile-value>
			<profile-value key="Slightly Agree" value="Slightly Agree">
				<language key="displayname" locale="en">Slightly Agree</language>
				<language key="tooltip" locale="en">You slightly agree with this statement</language>
			</profile-value>
			<profile-value key="Agree" value="Agree">
				<language key="displayname" locale="en">Agree</language>
				<language key="tooltip" locale="en">You agree with this statement</language>
			</profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
				<language key="displayname" locale="en">Strongly Agree</language>
				<language key="tooltip" locale="en">You strongly agree with this statement</language>
			</profile-value>
			<profile-value key="Do NOT Care" value="Do NOT Care">
				<language key="displayname" locale="en">Do NOT Care</language>
				<language key="tooltip" locale="en">You do not care about this statement</language>
			</profile-value>
        </profile-key>
        <profile-key key="Target customer" required="true">
			<language key="displayname" locale="en">I am targeting customers who are totally "up on it" and have money to burn!</language>
            <language key="tooltip" locale="en">Tooltip text 3</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
				<language key="displayname" locale="en">Strongly Disagree</language>
				<language key="tooltip" locale="en">You strongly disagree with this statement</language>
			</profile-value>
			<profile-value key="Disagree" value="Disagree">
				<language key="displayname" locale="en">Disagree</language>
				<language key="tooltip" locale="en">You disagree with this statement</language>
			</profile-value>
			<profile-value key="Slightly Disagree" value="Slightly Disagree">
				<language key="displayname" locale="en">Slightly Disagree</language>
				<language key="tooltip" locale="en">You slightly disagree with this statement</language>
			</profile-value>
			<profile-value key="Slightly Agree" value="Slightly Agree">
				<language key="displayname" locale="en">Slightly Agree</language>
				<language key="tooltip" locale="en">You slightly agree with this statement</language>
			</profile-value>
			<profile-value key="Agree" value="Agree">
				<language key="displayname" locale="en">Agree</language>
				<language key="tooltip" locale="en">You agree with this statement</language>
			</profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
				<language key="displayname" locale="en">Strongly Agree</language>
				<language key="tooltip" locale="en">You strongly agree with this statement</language>
			</profile-value>
			<profile-value key="Do NOT Care" value="Do NOT Care">
				<language key="displayname" locale="en">Do NOT Care</language>
				<language key="tooltip" locale="en">You do not care about this statement</language>
			</profile-value>
        </profile-key>
		<profile-key key="Product coolness" required="true">
			<language key="displayname" locale="en">My product is totally cool, unique, and trendy and everyone will NEED to own it.</language>
            <language key="tooltip" locale="en">Tooltip text 4</language>
            <profile key="showoptiontext" type="String" value="true"/>
			<profile-value key="Strongly Disagree" value="Strongly Disagree">
				<language key="displayname" locale="en">Strongly Disagree</language>
				<language key="tooltip" locale="en">You strongly disagree with this statement</language>
			</profile-value>
			<profile-value key="Disagree" value="Disagree">
				<language key="displayname" locale="en">Disagree</language>
				<language key="tooltip" locale="en">You disagree with this statement</language>
			</profile-value>
			<profile-value key="Slightly Disagree" value="Slightly Disagree">
				<language key="displayname" locale="en">Slightly Disagree</language>
				<language key="tooltip" locale="en">You slightly disagree with this statement</language>
			</profile-value>
			<profile-value key="Slightly Agree" value="Slightly Agree">
				<language key="displayname" locale="en">Slightly Agree</language>
				<language key="tooltip" locale="en">You slightly agree with this statement</language>
			</profile-value>
			<profile-value key="Agree" value="Agree">
				<language key="displayname" locale="en">Agree</language>
				<language key="tooltip" locale="en">You agree with this statement</language>
			</profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
				<language key="displayname" locale="en">Strongly Agree</language>
				<language key="tooltip" locale="en">You strongly agree with this statement</language>
			</profile-value>
			<profile-value key="Do NOT Care" value="Do NOT Care">
				<language key="displayname" locale="en">Do NOT Care</language>
				<language key="tooltip" locale="en">You do not care about this statement</language>
			</profile-value>
        </profile-key>
		<profile-key key="Product durability" required="true">
			<language key="displayname" locale="en">Durability is a key factor of my product and it won't drop even if you drop it!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
				<language key="displayname" locale="en">Strongly Disagree</language>
				<language key="tooltip" locale="en">You strongly disagree with this statement</language>
			</profile-value>
			<profile-value key="Disagree" value="Disagree">
				<language key="displayname" locale="en">Disagree</language>
				<language key="tooltip" locale="en">You disagree with this statement</language>
			</profile-value>
			<profile-value key="Slightly Disagree" value="Slightly Disagree">
				<language key="displayname" locale="en">Slightly Disagree</language>
				<language key="tooltip" locale="en">You slightly disagree with this statement</language>
			</profile-value>
			<profile-value key="Slightly Agree" value="Slightly Agree">
				<language key="displayname" locale="en">Slightly Agree</language>
				<language key="tooltip" locale="en">You slightly agree with this statement</language>
			</profile-value>
			<profile-value key="Agree" value="Agree">
				<language key="displayname" locale="en">Agree</language>
				<language key="tooltip" locale="en">You agree with this statement</language>
			</profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
				<language key="displayname" locale="en">Strongly Agree</language>
				<language key="tooltip" locale="en">You strongly agree with this statement</language>
			</profile-value>
			<profile-value key="Do NOT Care" value="Do NOT Care">
				<language key="displayname" locale="en">Do NOT Care</language>
				<language key="tooltip" locale="en">You do not care about this statement</language>
			</profile-value>
        </profile-key>
		<!-- Output -->
		<profile-key key="Product1" required="false">
			<profile key="type" value="text"/>
			<profile key="hidden" value="true"/>
		</profile-key>
		<profile-key key="Product2" required="false">
			<profile key="hidden" value="true"/>
		</profile-key>
		<profile-key key="emailto" required="true">
			<language key="displayname" locale="en">To: (email address)</language>
			<language key="placeholder" locale="en">Example: john@example.com</language>
			<language key="error" locale="en">'TO' email address is not valid.</language>
			<profile key="widget" value="text-input"/>
			<profile key="inputtype" value="email"/>
		</profile-key>
		<profile-key key="emailfrom" required="true">
			<language key="displayname" locale="en">From: (email address)</language>
			<language key="placeholder" locale="en">Example: jane@example.com</language>
			<language key="error" locale="en">'FROM' email address is not valid.</language>
			<profile key="widget" value="text-input"/>
			<profile key="inputtype" value="email"/>
		</profile-key>
		<profile-key key="emailnote" required="false">
			<language key="displayname" locale="en">Note: (optional)</language>
			<language key="placeholder" locale="en">Please check out this great product!</language>
			<profile key="widget" value="text-area"/>
			<profile key="inputtype" value="text"/>
		</profile-key>
		<!-- Output Questions profile keys -->
        <profile-key key="uid" required="false">
            <naming name="e2e_prototype_pbUid"/>
        </profile-key>
		<profile key="BestChoice" value="10"/>
	</game>
</client>
',
          functional_tests:
            '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE client SYSTEM "object.dtd">
<client name="e2e_functional_tests">
    <game name="e2e_functional_tests" fixed="false">
        <!-- Attributes -->
        <attribute name="weight" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="1">
                <language key="description" locale="en">My product should be exceedingly light and should weigh next to nothing or be light as air.</language>
                <language key="displayname" locale="en">0 or Light as air</language>
                <language key="icon" locale="en">icon-weight-0</language>
                <language key="message" locale="en">weight||Weight||You like things that are very light and weigh next to nothing or light as air!||icon-weight-0</language>
            </level>
            <level value="5">
                <language key="description" locale="en">My product should weigh no more than 5 pounds because I am going to carry it in my arms or tote it around in my backpack for long enough to be a problem if it weighs more.</language>
                <language key="displayname" locale="en">5 Pounds</language>
                <language key="icon" locale="en">icon-weight-5</language>
                <language key="message" locale="en">weight||Weight||The maximum weight you will tolerate carrying for any length of time is 5 pounds - and even that is a stretch!||icon-weight-5</language>
            </level>
            <level value="10">
                <language key="description" locale="en">My product can weigh up to 10 pounds because I am going to carry it in my backpack or in my carry on luggage so I will not be directly stressed by the weight.</language>
                <language key="displayname" locale="en">10 Pounds</language>
                <language key="icon" locale="en">icon-weight-10</language>
                <language key="message" locale="en">weight||Weight||You're ok with a maximum weight of 10 pounds because you have no intention of carrying this around, except in a backpack or in carry on luggage.||icon-weight-10</language>
            </level>
            <level value="15">
                <language key="description" locale="en">My product can weigh 15 pounds or more because I am never going to be carrying it. It will sit on my desk either at work or home.</language>
                <language key="displayname" locale="en">15 Pounds</language>
                <language key="icon" locale="en">icon-weight-15</language>
                <language key="message" locale="en">weight||Weight||You're ok with a maximum weight of 15 pounds or more because you have not intention of every picking it up.||icon-weight-15</language>
            </level>
            <language key="description" locale="en">Weight is the standard or established amount that a thing should weigh. The first known word usage was in 1647.</language>
            <language key="displayname" locale="en">How much should your product weigh?</language>
            <language key="instructions" locale="en">Shift the sliders to indicate GREATER or LESSER importance for the weights shown.</language>
            <language key="icon" locale="en">icon-weight</language>
            <language key="group" locale="en">weight</language>
            <language key="shortname.levels" locale="en">Weight</language>
            <language key="shortname" locale="en">Weight</language>
            <language key="message" locale="en">weight||You're ok with a maximum weight of 15 pounds or more because you have not intention of every picking it up.||icon-weight-15</language>
            <profile key="whyguytoggle" value="true" />
        </attribute>
        <attribute name="shape" implicit="unordered" must-have-allowed="false" skip-allowed="true" type="string" unacceptables-allowed="false">
            <level value="circle">
                <language key="description" locale="en">A circle is a closed plane curve and every point is equidistant from a fixed point within the curve. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Circle</language>
                <language key="icon" locale="en">icon-shape-circle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are perfectly round and are in the shape of a circle, like coins.||icon-shape-circle</language>
            </level>
            <level value="square">
                <language key="description" locale="en">A square is defined as having four equal sides and four right angles. The first known word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Square</language>
                <language key="icon" locale="en">icon-shape-square</language>
                <language key="message" locale="en">Shape||Shape||You love things that are perfectly square, like a Rubik's cube!||icon-shape-square</language>
            </level>
            <level value="triangle">
                <language key="description" locale="en">A triangle is a geometric figure with three sides and three angles. Each two sides meet at a point called a vertex, and the three angles sum to 180°. A triangle with one 90° (right) angle is a right triangle. A triangle with all sides (and thus all angles) equal is equilateral, one with two sides equal is isosceles, and one with no two sides equal is scalene. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Triangle</language>
                <language key="icon" locale="en">icon-shape-triangle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are in the shape of a triangle, well, like a triangle in music.||icon-shape-triangle</language>
            </level>
            <level value="rectangle">
                <language key="description" locale="en">A rectangle is defined as a parallelogram whose angles are all right angles and whose adjacent sides are of unequal length. The first know word usage was in 1571.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Rectangle</language>
                <language key="icon" locale="en">icon-shape-rectangle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are in the shape of a rectangle, like a credit card.||icon-shape-rectangle</language>
            </level>
            <language key="description" locale="en">Horizontal / Vertical Scales that are typical throughout the platform.</language>
            <language key="displayname" locale="en">Horizontal / Vertical Scale</language>
            <language key="leastpreferred" locale="en">Less Like</language>
            <language key="mostpreferred" locale="en">More Like</language>
            <language key="icon" locale="en">icon-shape</language>
            <language key="group" locale="en">skipScale</language>
            <language key="shortname.levels" locale="en">Shape</language>
            <language key="shortname" locale="en">Shape</language>
            <language key="message" locale="en">shape||You love things that are in the shape of a rectangle, like a credit card.||icon-shape-rectangle</language>
        </attribute>
        <attribute name="implicitDescending" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="Red">
                <language key="description" locale="en">A circle is a closed plane curve and every point is equidistant from a fixed point within the curve. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Circle</language>
                <language key="icon" locale="en">icon-shape-circle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are perfectly round and are in the shape of a circle, like coins.||icon-shape-circle</language>
            </level>
            <level value="Green">
                <language key="description" locale="en">A square is defined as having four equal sides and four right angles. The first known word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Square</language>
                <language key="icon" locale="en">icon-shape-square</language>
                <language key="message" locale="en">Shape||Shape||You love things that are perfectly square, like a Rubik's cube!||icon-shape-square</language>
            </level>
            <level value="Blue">
                <language key="description" locale="en">A triangle is a geometric figure with three sides and three angles. Each two sides meet at a point called a vertex, and the three angles sum to 180°. A triangle with one 90° (right) angle is a right triangle. A triangle with all sides (and thus all angles) equal is equilateral, one with two sides equal is isosceles, and one with no two sides equal is scalene. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Triangle</language>
                <language key="icon" locale="en">icon-shape-triangle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are in the shape of a triangle, well, like a triangle in music.||icon-shape-triangle</language>
            </level>
            <level value="Yellow">
                <language key="description" locale="en">A rectangle is defined as a parallelogram whose angles are all right angles and whose adjacent sides are of unequal length. The first know word usage was in 1571.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Rectangle</language>
                <language key="icon" locale="en">icon-shape-rectangle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are in the shape of a rectangle, like a credit card.||icon-shape-rectangle</language>
            </level>
            <language key="description" locale="en">Horizontal / Vertical Scales that are typical throughout the platform.</language>
            <language key="displayname" locale="en">Horizontal / Vertical Scale</language>
            <language key="leastpreferred" locale="en">Less Like</language>
            <language key="mostpreferred" locale="en">More Like</language>
            <language key="icon" locale="en">icon-shape</language>
            <language key="group" locale="en">implicitDescendingScale</language>
            <language key="shortname.levels" locale="en">Shape</language>
            <language key="shortname" locale="en">Shape</language>
            <language key="message" locale="en">shape||You love things that are in the shape of a rectangle, like a credit card.||icon-shape-rectangle</language>
            <profile key="implicitwarning" type="String" value="descending"/>
        </attribute>
        <attribute name="implicitAscending" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="Red">
                <language key="description" locale="en">A circle is a closed plane curve and every point is equidistant from a fixed point within the curve. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Circle</language>
                <language key="icon" locale="en">icon-shape-circle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are perfectly round and are in the shape of a circle, like coins.||icon-shape-circle</language>
            </level>
            <level value="Green">
                <language key="description" locale="en">A square is defined as having four equal sides and four right angles. The first known word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Square</language>
                <language key="icon" locale="en">icon-shape-square</language>
                <language key="message" locale="en">Shape||Shape||You love things that are perfectly square, like a Rubik's cube!||icon-shape-square</language>
            </level>
            <level value="Blue">
                <language key="description" locale="en">A triangle is a geometric figure with three sides and three angles. Each two sides meet at a point called a vertex, and the three angles sum to 180°. A triangle with one 90° (right) angle is a right triangle. A triangle with all sides (and thus all angles) equal is equilateral, one with two sides equal is isosceles, and one with no two sides equal is scalene. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Triangle</language>
                <language key="icon" locale="en">icon-shape-triangle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are in the shape of a triangle, well, like a triangle in music.||icon-shape-triangle</language>
            </level>
            <level value="Yellow">
                <language key="description" locale="en">A rectangle is defined as a parallelogram whose angles are all right angles and whose adjacent sides are of unequal length. The first know word usage was in 1571.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Rectangle</language>
                <language key="icon" locale="en">icon-shape-rectangle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are in the shape of a rectangle, like a credit card.||icon-shape-rectangle</language>
            </level>
            <language key="description" locale="en">Horizontal / Vertical Scales that are typical throughout the platform.</language>
            <language key="displayname" locale="en">Horizontal / Vertical Scale</language>
            <language key="leastpreferred" locale="en">Less Like</language>
            <language key="mostpreferred" locale="en">More Like</language>
            <language key="icon" locale="en">icon-shape</language>
            <language key="group" locale="en">implicitAscendingScale</language>
            <language key="shortname.levels" locale="en">Shape</language>
            <language key="shortname" locale="en">Shape</language>
            <language key="message" locale="en">shape||You love things that are in the shape of a rectangle, like a credit card.||icon-shape-rectangle</language>
            <profile key="implicitwarning" type="String" value="ascending"/>
        </attribute>
        <attribute name="required" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="string" unacceptables-allowed="false">
            <level value="circle">
                <language key="description" locale="en">A circle is a closed plane curve and every point is equidistant from a fixed point within the curve. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Circle</language>
                <language key="icon" locale="en">icon-shape-circle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are perfectly round and are in the shape of a circle, like coins.||icon-shape-circle</language>
            </level>
            <level value="square">
                <language key="description" locale="en">A square is defined as having four equal sides and four right angles. The first known word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Square</language>
                <language key="icon" locale="en">icon-shape-square</language>
                <language key="message" locale="en">Shape||Shape||You love things that are perfectly square, like a Rubik's cube!||icon-shape-square</language>
            </level>
            <level value="triangle">
                <language key="description" locale="en">A triangle is a geometric figure with three sides and three angles. Each two sides meet at a point called a vertex, and the three angles sum to 180°. A triangle with one 90° (right) angle is a right triangle. A triangle with all sides (and thus all angles) equal is equilateral, one with two sides equal is isosceles, and one with no two sides equal is scalene. The first know word usage was in the 14th century.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Triangle</language>
                <language key="icon" locale="en">icon-shape-triangle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are in the shape of a triangle, well, like a triangle in music.||icon-shape-triangle</language>
            </level>
            <level value="rectangle">
                <language key="description" locale="en">A rectangle is defined as a parallelogram whose angles are all right angles and whose adjacent sides are of unequal length. The first know word usage was in 1571.</language>
                <language key="displayname" locale="en">My product will be in the shape of a Rectangle</language>
                <language key="icon" locale="en">icon-shape-rectangle</language>
                <language key="message" locale="en">Shape||Shape||You love things that are in the shape of a rectangle, like a credit card.||icon-shape-rectangle</language>
            </level>
            <language key="description" locale="en">Horizontal / Vertical Scales that are typical throughout the platform.</language>
            <language key="displayname" locale="en">Horizontal / Vertical Scale</language>
            <language key="leastpreferred" locale="en">Less Like</language>
            <language key="mostpreferred" locale="en">More Like</language>
            <language key="icon" locale="en">icon-shape</language>
            <language key="group" locale="en">requiredScale</language>
            <language key="shortname.levels" locale="en">Shape</language>
            <language key="shortname" locale="en">Shape</language>
            <language key="message" locale="en">shape||You love things that are in the shape of a rectangle, like a credit card.||icon-shape-rectangle</language>
        </attribute>
        <attribute name="rangeScaleSingleThumbWidget" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="number" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">0</language>
                <language key="displayname" locale="en">0</language>
                <language key="icon" locale="en">Level Icon Path</language>
            </level>
            <level value="1">
                <language key="description" locale="en">1</language>
                <language key="displayname" locale="en">1</language>
                <language key="icon" locale="en">Level Icon Path</language>
            </level>
            <level value="2">
                <language key="description" locale="en">2</language>
                <language key="displayname" locale="en">2</language>
                <language key="icon" locale="en">Level Icon Path</language>
            </level>
            <level value="3">
                <language key="description" locale="en">3</language>
                <language key="displayname" locale="en">3</language>
                <language key="icon" locale="en">Level Icon Path</language>
            </level>
            <level value="4">
                <language key="description" locale="en">4</language>
                <language key="displayname" locale="en">4</language>
                <language key="icon" locale="en">Level Icon Path</language>
            </level>
            <language key="icon" locale="en">Level Icon Path</language>
            <language key="message" locale="en">basepay||Base Pay||You are willing to spend up to &#36;150 per month.||icon-price-med</language>
            <language key="description" locale="en">Range Scale</language>
            <language key="displayname" locale="en">Range Scale</language>
            <language key="shortname.levels" locale="en">Range Scale</language>
            <language key="shortname" locale="en">Range Scale</language>
            <language key="minicon" locale="en">Min Level Icon Path</language>
            <language key="maxicon" locale="en">Max Level Icon Path</language>
            <language key="mindisplayname" locale="en">Min Value </language>
            <language key="maxdisplayname" locale="en">Max Value </language>
            <language key="mindescription" locale="en">Min Value </language>
            <language key="maxdescription" locale="en">Max Value </language>
            <language key="maxdisplayprefix" locale="en">Max Value </language>
            <language key="group" locale="en">rangeScaleSingleThumb</language>
            <profile key="groupwidget" value="range-scale-single-thumb"/>
        </attribute>
        <attribute name="rangeScaleTwoThumbWidget" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="number" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">0</language>
                <language key="displayname" locale="en">0</language>
                <language key="icon" locale="en">Level Min Icon Path</language>
            </level>
            <level value="1">
                <language key="description" locale="en">1</language>
                <language key="displayname" locale="en">1</language>
                <language key="icon" locale="en">Level Min Icon Path</language>
            </level>
            <level value="2">
                <language key="description" locale="en">2</language>
                <language key="displayname" locale="en">2</language>
                <language key="icon" locale="en">Level Min Icon Path</language>
            </level>
            <level value="3">
                <language key="description" locale="en">3</language>
                <language key="displayname" locale="en">3</language>
                <language key="icon" locale="en">Level Min Icon Path</language>
            </level>
            <level value="4">
                <language key="description" locale="en">4</language>
                <language key="displayname" locale="en">4</language>
                <language key="icon" locale="en">Level Min Icon Path</language>
            </level>
            <language key="description" locale="en">Range Scale Two Thumb</language>
            <language key="displayname" locale="en">Range Scale Two Thumb</language>
            <language key="shortname.levels" locale="en">Range Scale Two Thumb</language>
            <language key="shortname" locale="en">Range Scale Two Thumb</language>
            <language key="minicon" locale="en">Min Level Icon Path</language>
            <language key="maxicon" locale="en">Max Level Icon Path</language>
            <language key="mindisplayname" locale="en">Min Level </language>
            <language key="maxdisplayname" locale="en">Max Level </language>
            <language key="maxdisplayprefix" locale="en">Max Level </language>
            <language key="mindisplayprefix" locale="en">Min Level </language>
            <language key="group" locale="en">rangeScaleTwoThumb</language>
            <profile key="groupwidget" value="range-scale-two-thumb"/>
        </attribute>
        <attribute name="price" implicit="unordered" must-have-allowed="false" skip-allowed="false" type="number" unacceptables-allowed="true">
            <level value="0">
                <language key="description" locale="en">I am not willing to spend any amount of money per month.</language>
                <language key="displayname" locale="en">&#36;0</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You want to spend no money at all and like things best that are free!||icon-price-med</language>
            </level>
            <level value="25">
                <language key="description" locale="en">I am willing to spend up to &#36;25 per month.</language>
                <language key="displayname" locale="en">&#36;25</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;25 per month.||icon-price-med</language>
            </level>
            <level value="50">
                <language key="description" locale="en">I am willing to spend up to &#36;50 per month.</language>
                <language key="displayname" locale="en">&#36;50</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;50 per month.||icon-price-med</language>
            </level>
            <level value="75">
                <language key="description" locale="en">I am willing to spend up to &#36;75 per month.</language>
                <language key="displayname" locale="en">&#36;75</language>
                <language key="icon" locale="en">icon-price-med</language>
                <language key="message" locale="en">price||Price||You are willing to spend up to &#36;75 per month.||icon-price-med</language>
            </level>
            <language key="description" locale="en">Counter Widget</language>
            <language key="displayname" locale="en">Counter Widget</language>
            <language key="group" locale="en">counter</language>
            <language key="shortname.levels" locale="en">Price</language>
            <language key="shortname" locale="en">Price</language>
            <language key="minicon" locale="en">icon-price-low</language>
            <language key="maxicon" locale="en">icon-price-low</language>
            <language key="mindescription" locale="en">No monthly premium paid for prescription drug coverage.</language>
            <language key="maxdescription" locale="en">$200 monthly premium paid for prescription drug coverage.</language>
            <language key="icon" locale="en">assets/icons/price.png</language>
            <language key="instructions" locale="en">Use the controls to indicate your minimum and maximum prices. The minimum is the least amount you want to pay while the maximum is the most amount you want to pay.</language>
            <language key="help.title" locale="en">Instructions:</language>
            <language key="help.body" locale="en">This question is asking you to select the expected value multiple that is optimal for you. Click on the single right arrow to incrementally increase the value multiple. Click on the single left arrow to incrementally decrease the value multiple. Clicking on the double right arrow will jump to the highest value multiple of $200. Clicking on the double left arrow will jump to the lowest value multiple of $0.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="message" locale="en">price||You are willing to spend up to &#36;200 per month, but no more than that!||icon-price-med</language>
            <profile key="horizontalslider" value="price"/>
            <profile key="groupwidget" value="counter"/>
        </attribute>
        <attribute name="Hidden Price" implicit="descending" must-have-allowed="false" skip-allowed="false" type="price" unacceptables-allowed="false">
            <level value="0">
                <language key="description" locale="en">0</language>
                <language key="displayname" locale="en">0</language>
                <language key="icon" locale="en"/>
            </level>
            <level value="1">
                <language key="description" locale="en">1</language>
                <language key="displayname" locale="en">1</language>
                <language key="icon" locale="en"/>
            </level>
            <language key="description" locale="en">Hidden Price</language>
            <language key="displayname" locale="en">Hidden Price</language>
            <language key="group" locale="en">skipScale</language>
            <profile key="hidden" value="true"/>
        </attribute>
        <!--Restricted Pairs-->
        <restricted-set name="1">
            <restricted-attribute name="implicitDescending">
                <restricted-level value="Red"/>
                <restricted-level value="Green"/>
                <restricted-level value="Blue"/>
                <restricted-level value="Yellow"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="2">
            <restricted-attribute name="implicitAscending">
                <restricted-level value="Red"/>
                <restricted-level value="Green"/>
                <restricted-level value="Blue"/>
                <restricted-level value="Yellow"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="3">
            <restricted-attribute name="rangeScaleSingleThumbWidget">
                <restricted-level value="0"/>
                <restricted-level value="1"/>
                <restricted-level value="2"/>
                <restricted-level value="3"/>
                <restricted-level value="4"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="4">
            <restricted-attribute name="weight">
                <restricted-level value="1"/>
                <restricted-level value="5"/>
                <restricted-level value="10"/>
                <restricted-level value="15"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="5">
            <restricted-attribute name="rangeScaleTwoThumbWidget">
                <restricted-level value="0"/>
                <restricted-level value="1"/>
                <restricted-level value="2"/>
                <restricted-level value="3"/>
                <restricted-level value="4"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="6">
            <restricted-attribute name="price">
                <restricted-level value="0"/>
                <restricted-level value="25"/>
                <restricted-level value="50"/>
                <restricted-level value="75"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="7">
            <restricted-attribute name="required">
                <restricted-level value="rectangle"/>
                <restricted-level value="triangle"/>
                <restricted-level value="square"/>
                <restricted-level value="circle"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <restricted-set name="8">
            <restricted-attribute name="shape">
                <restricted-level value="rectangle"/>
                <restricted-level value="triangle"/>
                <restricted-level value="square"/>
                <restricted-level value="circle"/>
            </restricted-attribute>
            <restricted-attribute name="Hidden Price">
                <restricted-level value="1"/>
                <restricted-level value="0"/>
            </restricted-attribute>
        </restricted-set>
        <!--Subgame-->
        <subgame name="e2e_functional_tests" version-label="0">
            <subgame-attribute name="weight">
                <subgame-level value="1"/>
                <subgame-level value="5"/>
                <subgame-level value="10"/>
                <subgame-level value="15"/>
            </subgame-attribute>
            <subgame-attribute name="shape">
                <subgame-level value="circle"/>
                <subgame-level value="square"/>
                <subgame-level value="triangle"/>
                <subgame-level value="rectangle"/>
            </subgame-attribute>
            <subgame-attribute name="Hidden Price">
                <subgame-level value="0"/>
                <subgame-level value="1"/>
            </subgame-attribute>
            <subgame-attribute name="implicitDescending">
                <subgame-level value="Red"/>
                <subgame-level value="Green"/>
                <subgame-level value="Blue"/>
                <subgame-level value="Yellow"/>
            </subgame-attribute>
            <subgame-attribute name="implicitAscending">
                <subgame-level value="Red"/>
                <subgame-level value="Green"/>
                <subgame-level value="Blue"/>
                <subgame-level value="Yellow"/>
            </subgame-attribute>
            <subgame-attribute name="required">
                <subgame-level value="circle"/>
                <subgame-level value="square"/>
                <subgame-level value="triangle"/>
                <subgame-level value="rectangle"/>
            </subgame-attribute>
            <subgame-attribute name="rangeScaleSingleThumbWidget">
                <subgame-level value="0"/>
                <subgame-level value="1"/>
                <subgame-level value="2"/>
                <subgame-level value="3"/>
                <subgame-level value="4"/>
            </subgame-attribute>
            <subgame-attribute name="rangeScaleTwoThumbWidget">
                <subgame-level value="0"/>
                <subgame-level value="1"/>
                <subgame-level value="2"/>
                <subgame-level value="3"/>
                <subgame-level value="4"/>
            </subgame-attribute>
            <subgame-attribute name="price">
                <subgame-level value="0"/>
                <subgame-level value="25"/>
                <subgame-level value="50"/>
                <subgame-level value="75"/>
            </subgame-attribute>
            <naming name="e2e_functional_tests" by-owner="true" type="bfd.domain.game.Game" owner="[Client]e2e_functional_tests/[Game]e2e_functional_tests"/>
        </subgame>
        <!--Misc Client Files-->
        <resource name="main" value="truechoice/app/clients/prototype/4.3.2/">
            <language key="browserTitle" locale="en">Functional Tests</language>
        </resource>
        <!--game description-->
        <resource name="system">
            <language key="error.scrollbarnotmoved.message" locale="en">Are you sure you have scrolled down to answer all of the questions? The scroll bar is located on the right side of your screen. Click 'yes' to continue or 'no' to modify your answers.</language>
            <!-- English System Messages -->
            <language key="moveup" locale="en">Move Up</language>
            <language key="movedown" locale="en">Move Down</language>
            <language key="title.warning" locale="en">Warning</language>
            <language key="title.attention" locale="en">Attention</language>
            <language key="error.helpdeskemail.title" locale="en">Attention</language>
            <language key="error.helpdeskemail.message" locale="en">Your last request failed because of a communications problem with our servers.
            &lt;br&gt;&lt;br&gt;Please restart by refreshing this webpage.  We apologize for the inconvenience.
            &lt;br&gt;&lt;br&gt;Before you try again, please make sure your network connection is active and reconfirm that you are connected to the internet.
            &lt;br&gt;&lt;br&gt;For further assistance, please email</language>
            <language key="error.helpdeskemail.reference" locale="en">reference</language>
            <language key="retry" locale="en">Retry</language>
            <language key="title.error" locale="en">Error</language>
            <language key="title.error" locale="en">Error</language>
            <language key="error.system.title" locale="en">System Error</language>
            <language key="error.mustscale.message" locale="en">Please change the value for at least one option.</language>
            <language key="error.timeout.message" locale="en">The system has not responded in an appropriate amount of time. Please try again in a few moments. If the problem persists, please contact the administrator.</language>
            <language key="notatallimportant" locale="en">Strongly Disagree</language>
            <language key="extremelyImportant" locale="en">Strongly Agree</language>
            <language key="button.moveup" locale="en">Move Up</language>
            <language key="button.movedown" locale="en">Move Down</language>
            <language key="error.emailinvalid.title" locale="en">Invalid Email</language>
            <language key="error.emailinvalid.message" locale="en">Please verify that your email address is correct and try again.</language>
            <language key="error.missingrequired.title" locale="en">Questions Not Answered</language>
            <language key="error.missingrequired.message" locale="en">You have not answered all of the questions on this page. Please make sure the question marked with an asterisk (*) has been answered.</language>
            <language key="error.sumvaluesinvalid.title" locale="en">Invalid sum</language>
            <language key="error.sumvaluesinvalid.message" locale="en">Values must equate to 100</language>
            <language key="devicenotsupported.body" locale="en">Your screen resolution is insufficient to view this application. Must be at least 1024x768.&lt;br&gt;&lt;br&gt;Please try on a device with a larger screen.</language>
            <language key="devicenotsupported.footer" locale="en">Should you require assistance, please contact us at &lt;a href="mailto:helpdesk@truechoicesolutions.com?subject=Device%20Support"&gt;helpdesk@truechoicesolutions.com&lt;/a&gt;</language>
            <!-- Director alert -->
            <language key="error.director.title" locale="en">Questions Not Answered</language>
			<language key="error.director.message" locale="en">You have not answered the mandated question(s) on this screen. Please make sure any question marked with an asterisk (*) has been answered.</language>            <!-- restart alert -->
            <language key="restart.title" locale="en">ATTENTION - You are about to return to the start of the survey.</language>
            <language key="restart.message" locale="en">Hey! Testing restart alert popup and restart application feature. Click "Yes" to restart the application. Click on "No" to remain in this stage.</language>
            <!--general-->
            <language key="next" locale="en">Next</language>
            <language key="back" locale="en">Back</language>
            <language key="help" locale="en">Help</language>
            <language key="skip" locale="en">SKIP</language>
            <language key="helpbutton" locale="en">Help?</language>
            <language key="alert.button.close" locale="en">Close</language>
            <language key="alert.button.ok" locale="en">Ok</language>
            <language key="alert.button.yes" locale="en">Yes</language>
            <language key="alert.button.no" locale="en">No</language>
            <language key="levelscalemoveenablesnext" locale="en">false</language>
            <language key="leastpreferred" locale="en">Least</language>
            <language key="mostpreferred" locale="en">Most</language>
            <language key="disclaimer" locale="en">Copyright © 2020 TrueChoice Solutions, Inc. | <![CDATA[<a href="//www.truechoicesolutions.com/Privacy-Policy" target="_blank" rel="noopener noreferrer">Privacy Policy</a>]]>.</language>
            <language key="loading" locale="en">Loading...</language>
            <language key="assets.main.loading" locale="en">assets/main/loading.gif</language>
            <language key="preference.importance.labels" locale="en">NOT IMPORTANT||SOMEWHAT IMPORTANT||IMPORTANT||VERY IMPORTANT||EXTREMELY IMPORTANT</language>
            <!-- help -->
            <language key="help.button.label" locale="en">Close</language>
            <!-- implicit warning -->
            <language key="implicitwarning.moveup.message" locale="en">Note: You have rated a more valued option equal to or below a less valued one.</language>
            <language key="implicitwarning.moveup.title" locale="en">Move up.</language>
            <language key="implicitwarning.movedown.message" locale="en">Note: You have rated a less valued option equal to or above a more valued one.</language>
            <language key="implicitwarning.movedown.title" locale="en">Move down.</language>
            <language key="implicitwarning.message" locale="en">The sliders are now out of order. Would you like to move the slider to its original position?</language>
            <language key="implicitwarning.title" locale="en">Attention</language>
            <language key="implicitwarning.morebelowless.message" locale="en">Did you know that you have rated a more valued option equal to or below a less valued one? Do you want to proceed?</language>
            <language key="implicitwarning.lessabovemore.message" locale="en">Did you know that you have rated a less valued option equal to or above a more valued one? Do you want to proceed?</language>
            <!--stage 2-->
            <language key="attributes.leastpreferred" locale="en">Less Important</language>
            <language key="attributes.mostpreferred" locale="en">More Important</language>
            <!--stage 3-->
            <language key="tradeoffs.vs" locale="en">OR</language>
            <language key="tradeoffs.offer1" locale="en">Option 1</language>
            <language key="tradeoffs.offer2" locale="en">Option 2</language>
            <language key="tradeoffs.preference.labels" locale="en">Greatly Prefer Option 1||Prefer Option 1||Slightly Prefer Option 1||Indifferent||Slightly Prefer Option 2||Prefer Option 2||Greatly Prefer Option 2</language>
            <!-- Stage 4 -->
            <language key="error.requiredinput.label" locale="en">Your Answer Is Invalid</language>
            <!-- disclosure popup -->
            <language key="disclosure.title" locale="en">Information</language>
            <language key="disclosure.body" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.&lt;br&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tempor interdum metus nec laoreet. In luctus ligula nulla, a faucibus ante mollis sed. Donec hendrerit risus eros, et mollis lacus condimentum at. Quisque urna felis, pellentesque eget cursus ut, fringilla nec tortor. Donec felis nisi, auctor non molestie tempor, ultricies eu orci. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sodales maximus sollicitudin. Sed eu orci elementum, fermentum dui ut, tempus diam. Cras et interdum quam. Nullam aliquam sapien a leo interdum, sit amet euismod ex porta. Curabitur condimentum ligula vel diam gravida aliquet.</language>
            <language key="disclosure.gotit" locale="en">Close</language>
            <!-- Set flag to true to animate the icons -->
            <language key="animateicons" locale="en">false</language>
            <!-- Warning to user to confirm navigating away from app -->
            <language key="warning.leavingapp.message" locale="en">Warning! You are about to leave the app and lose all data</language>
            <!-- app template -->
            <profile key="app.templateversion" value="1"/>
            <!-- widget thumb states -->
            <profile key="usethumbstates" value="false"/>
            <!-- optimize for PC and Tablets: true/false -->
            <profile key="devicenotsupported" value="false"/>
            <!-- request processor -->
            <profile key="instance-attribute-requestprocessor" value="averaging"/>
            <!-- To use dynamic breadcrumbs or not: true|false -->
            <profile key="usedynamicbreadcrumbs" value="true"/>
            <!-- Notification Bar -->
            <profile key="notificationbar.timeout" value="4000"/>
        </resource>
        <resource name="controls">
            <resource-element value="consent"/>
            <resource-element value="onboardintrowithintropopup"/>
            <resource-element value="onboardintro2"/>
            <resource-element value="levelScale"/>
            <resource-element value="implicitDescendingScale"/>
            <resource-element value="implicitAscendingScale"/>
            <resource-element value="skipScale"/>
            <resource-element value="requiredScale"/>
            <resource-element value="rangeScaleSingleThumb"/>
            <resource-element value="rangeScaleTwoThumb"/>
            <resource-element value="counter"/>
            <resource-element value="attributeScale"/>
            <resource-element value="tradeoffScale"/>
            <resource-element value="requiredRadioGroups"/>
            <resource-element value="notRequiredRadioGroups"/>
            <resource-element value="requiredDemographicQuestions"/>
            <resource-element value="notRequiredDemographicQuestions"/>
            <resource-element value="percentAllocationPage"/>
            <resource-element value="directorSingleSelect"/>
            <resource-element value="directorRadioButtonWithIntroPopup"/>
            <resource-element value="directorUid"/>
            <resource-element value="directorLanguage1"/>
            <resource-element value="directorLanguage2"/>
            <resource-element value="thankYou"/>
        </resource>
        <!-- UID passed in from URL -->
        <resource name="url">
            <resource-element value="uid" />
        </resource>
        <resource name="onboardintrowithintropopup" value="display">
            <!-- header elements -->
            <language key="title" locale="en">Help Us Serve You Better!</language>
            <language key="body" locale="en">Your company has developed this tool to further understand your dealership needs and preferences and how to better meet them. It will take just a few minutes to share your perspectives. Afterwards, you will be presented with a summary of your feedback and how it compares to your peers.</language>
            <language key="header" locale="en">The core part of this tool is divided into three sections:</language>
            <!-- content elements -->
            <language key="content.pane1.image" locale="en">assets/stages/display/onboardIntro/content/part1.gif</language>
            <language key="content.pane1small.image" locale="en">assets/stages/display/onboardIntro/content/part1_320.gif</language>
            <language key="content.pane1.image.alt" locale="en">Content image</language>
            <language key="content.pane1.text" locale="en">&lt;b&gt;Feature Preferences&lt;/b&gt; – rate the importance of value-added business and operational sub-factors</language>
            <language key="content.pane2.image" locale="en">assets/stages/display/onboardIntro/content/part2.gif</language>
            <language key="content.pane2small.image" locale="en">assets/stages/display/onboardIntro/content/part2_320.gif</language>
            <language key="content.pane2.image.alt" locale="en">Content image</language>
            <language key="content.pane2.text" locale="en">&lt;b&gt;Importance of Preference&lt;/b&gt; – rate the relative importance of broader categories of business and operational value-added</language>
            <language key="content.pane3.image" locale="en">assets/stages/display/onboardIntro/content/part3.gif</language>
            <language key="content.pane3.image.alt" locale="en">Content image</language>
            <language key="content.pane3.text" locale="en">&lt;b&gt;Tradeoffs&lt;/b&gt; – refine your feedback by indicating preferences between paired options</language>
            <language key="content.pane4.image" locale="en">assets/stages/display/onboardIntro/content/part4.gif</language>
            <language key="content.pane4small.image" locale="en">assets/stages/display/onboardIntro/content/part4_320.gif</language>
            <language key="content.pane4.image.alt" locale="en">Content image</language>
            <language key="content.pane4.text" locale="en">&lt;b&gt;Survey&lt;/b&gt; – answer questions about your satisfaction across broader categories of business.</language>
            <language key="intro.title" locale="en">Intro Popup</language>
            <language key="intro.body" locale="en">We are going to go over what we will be doing in the application.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image</language>
            <!-- footer elements -->
            <language key="footer" locale="en">This exercise should not take you more than 10 mins. Thank you for your input and continued partnership!</language>
            <language key="note" locale="en">NOTE - Additional information is available for each option by clicking on or tapping the &lt;span class="tooltip-indicator-no-pointer"&gt;&lt;/span&gt; icons.&lt;br&gt;The information included may help further explain the option.</language>
            <!-- breadcrumb elements -->
            <language key="breadcrumbdisplay.message" locale="en">Introduction</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <!-- Template -->
            <language key="templateurl" locale="en">onboardIntro.tpl.html</language>
        </resource>
        <resource name="onboardintro2" value="display">
            <!-- header elements -->
            <language key="title" locale="en">Help Us Serve You Better!</language>
            <language key="body" locale="en">TrueChoice Solutions has developed this tool to further understand your needs and preferences and how to better meet them. See below to understand how the survey works before you begin.</language>
            <language key="header" locale="en">The survey tool is divided into three main sections:</language>
            <!-- content elements -->
            <language key="content.note.text" locale="en">&lt;b&gt;Important Tip!&lt;/b&gt; Click on the &lt;span class="tooltip-indicator-no-pointer"&gt;&lt;/span&gt; symbol for more info. You'll see it on every page, at the top of the section and on the icons. Just click to learn more whenever you have a question.</language>
            <language key="content.pane1.image" locale="en">assets/stages/display/onboardIntro/content/part1.gif</language>
            <language key="content.pane1small.image" locale="en">assets/stages/display/onboardIntro/content/part1_320.gif</language>
            <language key="content.pane1.image.alt" locale="en">Content image</language>
            <language key="content.pane1.text" locale="en">&lt;b&gt;1. Feature Preferences&lt;/b&gt; – First, we'll look at categories one by one. We'll show you a few different options and ask that you move the slider bar to tell us how you feel in a "more or less" way.</language>
            <language key="content.pane2.image" locale="en">assets/stages/display/onboardIntro/content/part2.gif</language>
            <language key="content.pane2small.image" locale="en">assets/stages/display/onboardIntro/content/part2_320.gif</language>
            <language key="content.pane2.image.alt" locale="en">Content image</language>
            <language key="content.pane2.text" locale="en">&lt;b&gt;2. Importance of Preference&lt;/b&gt; – Second, we'll show you options grouped together and ask you to rate which are most and least important to you.</language>
            <language key="content.pane3.image" locale="en">assets/stages/display/onboardIntro/content/part3.gif</language>
            <language key="content.pane3.image.alt" locale="en">Content image</language>
            <language key="content.pane3.text" locale="en">&lt;b&gt;3. Tradeoffs&lt;/b&gt; – Third, we'll use the info from your choices in the first two sections to create pairs of hypothetical packages. We'll ask you to choose which of the two options you prefer most.</language>
            <!-- footer elements -->
            <language key="footer" locale="en">&lt;b&gt;Thank you for your input! Understanding your priorities is an important part of making TrueChoice Solutions a great place to work.&lt;/b&gt;</language>
            <!-- breadcrumb elements --> 
            <language key="breadcrumbdisplay.message" locale="en">Introduction</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <!-- Template -->
            <language key="templateurl" locale="en">onboardIntro-2.tpl.html</language>
        </resource>
        <resource name="levelScale" value="level">
            <language key="title" locale="en">Rate Your Preferences</language>
            <language key="instructions.unordered" locale="en">These are scales that record inputs in an unordered manner.</language>
            <language key="instructions.ordered" locale="en">Moving a slider UP means the option is MORE important. Moving a slider DOWN means the option is LESS important. The sliders have been pre-set in order of generally accepted preferences. Therefore, you cannot move a slider above the one to its right or lower than the one to its left.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="group" locale="en">weight</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">These questions ask you to state your preferences among several features. Please indicate how much you like each choice in relation to the other options by sliding the icons up (increased preference) and down (decreased preference). You may not have the same preference for all choices.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Scales: Question || of ||</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <!-- Stage intro popup -->
            <language key="intro.title" locale="en">Levels</language>
            <language key="intro.body" locale="en">This is the intro popup</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/stages/level/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image (levels)</language>
            <language key="whyguy.text" locale="en">Why am I being asked this question in this way?</language>
            <language key="whyguy.tooltip" locale="en">We do not just want to know what you most prefer. We want to understand your preferences for all of the hypothetical options between the two extremes.</language>
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true" />
        </resource>
        <resource name="implicitDescendingScale" value="level">
            <language key="title" locale="en">Rate Your Preferences</language>
            <language key="instructions.unordered" locale="en">These are scales that record inputs in an unordered manner.</language>
            <language key="instructions.ordered" locale="en">Moving a slider UP means the option is MORE important. Moving a slider DOWN means the option is LESS important. The sliders have been pre-set in order of generally accepted preferences. Therefore, you cannot move a slider above the one to its right or lower than the one to its left.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="group" locale="en">implicitDescendingScale</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">These questions ask you to state your preferences among several features. Please indicate how much you like each choice in relation to the other options by sliding the icons up (increased preference) and down (decreased preference). You may not have the same preference for all choices.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Scales: Question || of ||</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <!-- Stage intro popup -->
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true" />
        </resource>
        <resource name="implicitAscendingScale" value="level">
            <language key="title" locale="en">Rate Your Preferences</language>
            <language key="instructions.unordered" locale="en">These are scales that record inputs in an unordered manner.</language>
            <language key="instructions.ordered" locale="en">Moving a slider UP means the option is MORE important. Moving a slider DOWN means the option is LESS important. The sliders have been pre-set in order of generally accepted preferences. Therefore, you cannot move a slider above the one to its right or lower than the one to its left.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="group" locale="en">implicitAscendingScale</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">These questions ask you to state your preferences among several features. Please indicate how much you like each choice in relation to the other options by sliding the icons up (increased preference) and down (decreased preference). You may not have the same preference for all choices.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Scales: Question || of ||</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <!-- Stage intro popup -->
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true" />
        </resource>
        <resource name="skipScale" value="level">
            <language key="title" locale="en">Rate Your Preferences</language>
            <language key="instructions.unordered" locale="en">These are scales that record inputs in an unordered manner.</language>
            <language key="instructions.ordered" locale="en">Moving a slider UP means the option is MORE important. Moving a slider DOWN means the option is LESS important. The sliders have been pre-set in order of generally accepted preferences. Therefore, you cannot move a slider above the one to its right or lower than the one to its left.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="group" locale="en">skipScale</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">These questions ask you to state your preferences among several features. Please indicate how much you like each choice in relation to the other options by sliding the icons up (increased preference) and down (decreased preference). You may not have the same preference for all choices.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Scales: Question || of ||</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true" />
        </resource>
        <resource name="requiredScale" value="level">
            <language key="title" locale="en">Rate Your Preferences</language>
            <language key="instructions.unordered" locale="en">These are scales that record inputs in an unordered manner.</language>
            <language key="instructions.ordered" locale="en">Moving a slider UP means the option is MORE important. Moving a slider DOWN means the option is LESS important. The sliders have been pre-set in order of generally accepted preferences. Therefore, you cannot move a slider above the one to its right or lower than the one to its left.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="group" locale="en">requiredScale</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">These questions ask you to state your preferences among several features. Please indicate how much you like each choice in relation to the other options by sliding the icons up (increased preference) and down (decreased preference). You may not have the same preference for all choices.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Scales: Question || of ||</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true" />
        </resource>
        <resource name="rangeScaleSingleThumb" value="level">
            <language key="title" locale="en">Range Scales</language>
            <language key="instructions.unordered" locale="en">Range Scales.</language>
            <language key="instructions.ordered" locale="en">Range Scales.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="group" locale="en">rangeScaleSingleThumb</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">These questions ask you to state your preferences among several features. Please indicate how much you like each choice in relation to the other options by sliding the icons up (increased preference) and down (decreased preference). You may not have the same preference for all choices.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Scales: Question || of ||</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true" />
        </resource>
        <resource name="rangeScaleTwoThumb" value="level">
            <language key="title" locale="en">Range Scales</language>
            <language key="instructions.unordered" locale="en">Range Scales.</language>
            <language key="instructions.ordered" locale="en">Range Scales.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="group" locale="en">rangeScaleTwoThumb</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">These questions ask you to state your preferences among several features. Please indicate how much you like each choice in relation to the other options by sliding the icons up (increased preference) and down (decreased preference). You may not have the same preference for all choices.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Scales: Question || of ||</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="level-scale"/>
            <profile key="groupwidget.hideleastmost" value="true" />
        </resource>
        <resource name="counter" value="level">
            <language key="title" locale="en">Counter Widget</language>
            <language key="instructions.unordered" locale="en">Counter Widget</language>
            <language key="instructions.ordered" locale="en">Moving a slider UP means the option is MORE important. Moving a slider DOWN means the option is LESS important. The sliders have been pre-set in order of generally accepted preferences. Therefore, you cannot move a slider above the one to its right or lower than the one to its left.</language>
            <language key="instructions.skip" locale="en">&lt;font&gt;&lt;b&gt;If this characteristic is irrelevant to you, click Next and you will not be asked about it again.&lt;/b&gt;&lt;/font&gt;</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="learnmore" locale="en">More Information</language>
            <language key="help.title" locale="en">What Are Your Preferences?</language>
            <language key="help.body" locale="en">These questions ask you to state your preferences among several features. Please indicate how much you like each choice in relation to the other options by sliding the icons up (increased preference) and down (decreased preference). You may not have the same preference for all choices.</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Counter: Question || of ||</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-level</language>
            <language key="group" locale="en">counter</language>
            <profile key="implicit.min" value="4.8"/>
            <profile key="implicit.max" value="5.2"/>
            <profile key="help" value="true"/>
            <profile key="widget" value="counter"/>
            <profile key="groupwidget.hideleastmost" value="true"/>
        </resource>
        <resource name="attributeScale" value="attribute">
            <language key="title" locale="en">Rate the relative importance of the following attributes.</language>
            <language key="leastpreferred" locale="en">Least Important</language>
            <language key="mostpreferred" locale="en">Most Important</language>
            <language key="infodisplay.header" locale="en">Your Choices from Part 1:</language>
            <language key="infodisplay.header.topchoice" locale="en">Your Top Choice from Part 1:</language>
            <language key="infodisplay.leastpreferred" locale="en">Least Preferred</language>
            <language key="infodisplay.mostpreferred" locale="en">Most Preferred</language>
            <language key="infodisplay.mostpreferred.mobile" locale="en">Most Preferred From Part 1:</language>
            <language key="infodisplay.leastpreferred.mobile" locale="en">Least Preferred From Part 1:</language>
            <language key="infodisplay.vs" locale="en">vs</language>
            <language key="infodisplay.rating.header" locale="en">Your Rating for this Attribute</language>
            <language key="instructions" locale="en"><![CDATA[<html><font color='#444444'><p>For each attribute below, indicate its importance relative to the others by clicking or tapping within the circle. A value of <b><u>1</u></b> is <b><u>less important</u></b> while a value of <b><u>100</u></b> is <b><u>more important</u></b>.</p></font></html>]]></language>
            <language key="help.title" locale="en">What's More Important to You?</language>
            <language key="help.body" locale="en">On the left side of the screen is a list of the features that we asked you about in Stage 1. As you respond to each feature, your most and least preferred choices will appear to the right to remind you of your earlier responses.

                For each feature, you're asked to indicate how important each is to you, from a scale of least important (1) to most important (100). Your responses here establish the set of trade-offs that you will be asked in the final stage, so please take care in moving the sliders to the left (less important features) and to the right (more important features).</language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/help/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">&lt;b&gt;Stage 2&lt;/b&gt;</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-attribute</language>
            <profile key="help" value="true"/>
            <profile key="widget" value="attribute-scale"/>
        </resource>
        <resource name="tradeoffScale" value="tradeoff">
            <language key="title" locale="en">What option do you prefer?</language>
            <language key="instructions" locale="en"><![CDATA[<html><font color='#444444'><p>Assume all your choices are identical in every way except for the features shown. Based on the strength of your preference, slide towards the combination you prefer.</p></font></html>]]></language>
            <language key="mostpreferred" locale="en">Most Preferred</language>
            <language key="leastpreferred" locale="en">Least Preferred</language>
            <language key="help.title" locale="en">Which Do You Prefer?</language>
            <language key="help.body" locale="en">These questions show several different feature combinations. Assuming your overall choices are identical in every way except for the features shown, please choose the combination you prefer and rate how strongly you prefer that option.

                For example, if you were to select a value of 10 for the combination on the right-hand side, it would tell the system that you strongly prefer this combination over the option on the left-hand side. Leaving the value at 0 would mean you don't prefer one over the other.</language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.gotit" locale="en">Got it!</language>
            <language key="help.assets.image" locale="en">assets/popups/help/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="breadcrumbdisplay.message" locale="en">Stage 3: Question || of ||</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-tradeoff</language>
            <profile key="help" value="true"/>
            <profile key="numtradeoffs" value="4"/>
            <profile key="widget" value="tradeoff-scale"/>
            <profile key="widget.showvaluefromzerototen" value="true"/>
        </resource>
        <resource name="requiredRadioGroups" value="survey">
            <resource-element value="Potential market size Question"/>
            <resource-element value="Product competition Question"/>
            <resource-element value="Product coolness Question"/>
            <resource-element value="Product durability Question"/>
            <resource-element value="Product markup Question"/>
            <resource-element value="Target customer Question"/>

            <language key="title" locale="en">Radio Groups</language>
            <language key="instructions" locale="en">An example of a Seven (7) </language>
            <language key="numberoflabels" locale="en">7</language>
            <language key="label1" locale="en">Strongly Disagree</language>
            <language key="labeltooltip1" locale="en">You strongly disagree with this statement</language>
            <language key="label2" locale="en">Disagree</language>
            <language key="labeltooltip2" locale="en">You disagree with this statement</language>
            <language key="label3" locale="en">Slightly Disagree</language>
            <language key="labeltooltip3" locale="en">You slightly disagree with this statement</language>
            <language key="label4" locale="en">Slightly Agree</language>
            <language key="labeltooltip4" locale="en">You slightly agree with this statement</language>
            <language key="label5" locale="en">Agree</language>
            <language key="labeltooltip5" locale="en">You agree with this statement</language>
            <language key="label6" locale="en">Strongly Agree</language>
            <language key="labeltooltip6" locale="en">You strongly agree with this statement</language>
            <language key="label7" locale="en">Do NOT Care</language>
            <language key="labeltooltip7" locale="en">You do not care about this statement</language>
            <language key="breadcrumbdisplay.message" locale="en">Survey Page</language>
            <language key="breadcrumbdisplay.bg.index" locale="en">5</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="templateurl" locale="en">survey_radio_group.tpl.html</language>
            <profile key="widget" value="radio-group"/>
        </resource>
        <resource name="consent" value="survey">
            <resource-element value="Consent Title Label"/>
            <resource-element value="Consent Label One"/>
            <resource-element value="Consent One Question"/>
            <resource-element value="Consent Label Two"/>
            <resource-element value="Consent Two Question"/>
            <resource-element value="Consent Contact Info One Label"/>
            <resource-element value="Consent Contact Info Two Label"/>
            <language key="help.title" locale="en">Attention</language>
            <language key="help.body" locale="en"><![CDATA[<p>Your consents are required to continue with this application.</p><br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="help.label" locale="en">Close</language>
            <language key="help.gotit" locale="en">OK</language>
            <language key="error.requiredinput.label" locale="en">Must consent to proceed</language>
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="error.missingrequired.title" locale="en">Attention</language>
            <language key="alert.button.ok" locale="en">OK</language>
            <language key="help.assets.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="help.assets.image.alt" locale="en">Help content image</language>
            <language key="error.missingrequired.message" locale="en"><![CDATA[<p>Your consents are required to continue with this application.</p><br /><p><b>Please return to the application to give your consent if you want to continue.</b></p><br /><p>If you do not want to give your consent, you may close this browser tab to exit the application.</p>]]></language>
            <language key="templateurl" locale="en">survey_consent.tpl.html</language>
            <profile key="help" value="true"/>
        </resource>
        <resource name="notRequiredRadioGroups" value="survey">
            <resource-element value="Potential market size not required Question"/>
            <resource-element value="Product competition not required Question"/>
            <resource-element value="Product coolness not required Question"/>
            <resource-element value="Product durability not required Question"/>
            <resource-element value="Product markup not required Question"/>
            <resource-element value="Target customer not required Question"/>

            <language key="title" locale="en">Radio Groups</language>
            <language key="instructions" locale="en">An example of a Seven (7) </language>
            <language key="numberoflabels" locale="en">7</language>
            <language key="label1" locale="en">Strongly Disagree</language>
            <language key="labeltooltip1" locale="en">You strongly disagree with this statement</language>
            <language key="label2" locale="en">Disagree</language>
            <language key="labeltooltip2" locale="en">You disagree with this statement</language>
            <language key="label3" locale="en">Slightly Disagree</language>
            <language key="labeltooltip3" locale="en">You slightly disagree with this statement</language>
            <language key="label4" locale="en">Slightly Agree</language>
            <language key="labeltooltip4" locale="en">You slightly agree with this statement</language>
            <language key="label5" locale="en">Agree</language>
            <language key="labeltooltip5" locale="en">You agree with this statement</language>
            <language key="label6" locale="en">Strongly Agree</language>
            <language key="labeltooltip6" locale="en">You strongly agree with this statement</language>
            <language key="label7" locale="en">Do NOT Care</language>
            <language key="labeltooltip7" locale="en">You do not care about this statement</language>
            <language key="breadcrumbdisplay.message" locale="en">Survey Page</language>
            <language key="breadcrumbdisplay.bg.index" locale="en">5</language>
            <language key="assets.header.image" locale="en">assets/stages/header/image.jpg</language>
            <language key="assets.header.image.alt" locale="en">Header image</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="templateurl" locale="en">survey_radio_group.tpl.html</language>
            <profile key="widget" value="radio-group"/>
        </resource>
        <resource name="requiredDemographicQuestions" value="survey">
            <resource-element value="First Name Question"/>
            <resource-element value="Last Name Question"/>
            <resource-element value="State Province Question"/>
            <resource-element value="Email Question"/>
            <resource-element value="Date of Birth Question"/>
            <resource-element value="What is the likelihood that you will answer all of these questions? Question"/>
            <resource-element value="Favorite Month Question"/>
            <resource-element value="How much energy do you use per year Question"/>
            <resource-element value="Contact Me Question"/>
            <resource-element value="User UID Question"/>
            <resource-element value="Comments Question"/>
            <language key="title" locale="en">Not so optional questions about you because all of the these fields are REQUIRED</language>
            <language key="instructions" locale="en">Please take a moment to tell us a little about yourself: </language>
            <language key="breadcrumbdisplay.message" locale="en">About You</language>
            <language key="error.requiredinput.label" locale="en">Must Change Answer</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <!-- Stage intro popup -->
        </resource>
        <resource name="notRequiredDemographicQuestions" value="survey">
            <resource-element value="What is your favorite movie Question"/>
            <resource-element value="Favorite Number Question"/>
            <resource-element value="What is your age Question"/>
            <resource-element value="What is the likelihood that you finish Question"/>
            <resource-element value="Favorite Day Question"/>
            <resource-element value="About Yourself Question"/>
            <resource-element value="Favorite Hobby Question"/>
            <resource-element value="Not Required Email Question"/>
            <resource-element value="Not Required User UID Question"/>
            <language key="title" locale="en">Optional questions about you because all of the these fields are NOT REQUIRED</language>
            <language key="instructions" locale="en">Please take a moment to tell us a little about yourself: </language>
            <language key="breadcrumbdisplay.message" locale="en">About You</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
        </resource>
        <resource name="percentAllocationPage" value="survey">
            <resource-element value="Answer Widget 1 Question"/>
            <resource-element value="Answer Widget 2 Question"/>
            <resource-element value="Answer Widget 3 Question"/>
            <resource-element value="Answer Widget 4 Question"/>
            <resource-element value="Answer Widget 5 Question"/>
            <resource-element value="Answer Widget 6 Question"/>
            <resource-element value="Answer Widget 7 Question"/>
            <resource-element value="Answer Widget 8 Question"/>
            <resource-element value="Percent Widget Total Question"/>
            <language key="title" locale="en">Product Features</language>
            <language key="instructions" locale="en">I have a good understanding of my product: (Select one response for each)</language>
            <language key="breadcrumbdisplay.message" locale="en">Survey Page</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-survey</language>
            <language key="templateurl" locale="en">survey_percent_allocation.tpl.html</language>
            <profile key="defaultmodelvalue" value="0"/>
            <profile key="maxmodelvalue" value="100"/>
            <profile key="modelvaluestep" value="1"/>
            <profile key="totalquestion" value="Percent Widget Total"/>
        </resource>
        <resource name="directorSingleSelect" value="director">
            <language key="title" locale="en">Which type of application do you need?</language>
            <language key="body" locale="en">Messages vs Products!</language>
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <!-- Director Redirect Options: Name displayed to user -->
            <language key="option0.displayname" locale="en">Prototype with Marketing Message Based Output</language>
            <language key="option0.icon" locale="en">icon-size</language>
            <language key="option1.displayname" locale="en">Prototype with Product Based Output</language>
            <language key="option1.icon" locale="en">icon-delivery</language>
            <language key="option2.displayname" locale="en">Prototype with custom query string parameters</language>
            <language key="option2.icon" locale="en">icon-shape</language>
            <language key="option3.displayname" locale="en">Product Based Output - Jump to Output Stage</language>
            <language key="option3.icon" locale="en">icon-intuition</language>
            <language key="option4.displayname" locale="en">External link - different domain from director</language>
            <language key="option4.icon" locale="en">icon-color</language>
            <!-- Director Template: Options listed below along with recommended usage -->
            <!-- director-1.tpl.html: radio-button, drop-down -->
            <!-- director-2.tpl.html: single-select -->
            <language key="templateurl" locale="en">director-2.tpl.html</language>
            <!-- Director Redirect Options: Stage widget ("radio-button", "drop-down", "single-select") -->
            <profile key="widget" value="single-select"/>
            <profile key="widget.type" value="single-select"/>
            <!-- Director Redirect Options: List of all options -->
            <profile key="options" value="option0||option1||option2||option3||option4"/>
            <!-- Director Redirect Options: Direct/Pretty URL parameters -->
            <!-- Option 0 -->
            <profile key="option0.directurl.param.game" value="prototype"/>
            <profile key="option0.prettyurl.param.loc" value="prototype"/>
            <!-- Option 1 -->
            <profile key="option1.directurl.param.game" value="prototype_pb"/>
            <profile key="option1.prettyurl.param.loc" value="prototype_pb"/>
            <!-- Option 2 -->
            <profile key="option2.directurl.param.game" value="prototype"/>
            <profile key="option2.directurl.param.param0" value="0"/>
            <profile key="option2.directurl.param.param1" value="1"/>
            <profile key="option2.prettyurl.param.loc" value="prototype"/>
            <profile key="option2.prettyurl.param.param0" value="0"/>
            <profile key="option2.prettyurl.param.param1" value="1"/>
            <!-- Option 3 -->
            <profile key="option3.directurl.param.game" value="prototype_pb"/>
            <profile key="option3.directurl.param.test" value="true"/>
            <profile key="option3.directurl.param.stage" value="output"/>
            <profile key="option3.prettyurl.param.loc" value="prototype_pb"/>
            <profile key="option3.prettyurl.param.test" value="true"/>
            <profile key="option3.prettyurl.param.stage" value="output"/>
            <!-- Option 4 -->
            <profile key="option4.url" value="//www.google.com"/>
        </resource>
        <resource name="directorRadioButtonWithIntroPopup" value="director">
            <language key="title" locale="en">Which type of application do you need?</language>
            <language key="body" locale="en">Messages vs Products!</language>
            <language key="breadcrumbdisplay.message" locale="en">Director</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="templateurl" locale="en">welcome-2.tpl.html</language>
            <!-- Director Redirect Options: Name displayed to user -->
            <language key="option0.displayname" locale="en">Marketing Message Based App</language>
            <language key="option1.displayname" locale="en">Product Based App</language>
            <language key="option2.displayname" locale="en">Custom query string parameters</language>
            <language key="option3.displayname" locale="en">Jump to Output Stage</language>
            <language key="option4.displayname" locale="en">Absolute URL (no protocol, different domain name)</language>
            <language key="option5.displayname" locale="en">Absolute URL (HTTP)</language>
            <language key="option6.displayname" locale="en">Absolute URL (HTTPS)</language>
            <language key="option7.displayname" locale="en">Relative URL ("/?loc=prototype")</language>
            <language key="option8.displayname" locale="en">Relative URL ("/game/game.jsp?game=prototype")</language>
            <language key="intro.title" locale="en">Size</language>
            <language key="intro.body" locale="en">Size, in this case, refers to physical magnitude, extent, or bulk, relative or proportionate dimensions or as one of a series of graduated measures especially of manufactured articles (as of clothing) conventionally identified by numbers or letters.</language>
            <language key="intro.label" locale="en">Close</language>
            <language key="intro.image" locale="en">assets/popups/content/image.jpg</language>
            <language key="intro.image.alt" locale="en">Intro content image</language>
            <!-- Director Redirect Options: Stage widget ("radio-button", "drop-down") -->
            <profile key="widget" value="radio-button"/>
            <!-- Director Redirect Options: List of all options -->
            <profile key="options" value="option0||option1||option2||option3||option4||option5||option6||option7||option8"/>
            <!-- Director Redirect Options: Direct/Pretty URL parameters -->
            <!-- Option 0 -->
            <profile key="option0.directurl.param.game" value="prototype"/>
            <profile key="option0.prettyurl.param.loc" value="prototype"/>
            <!-- Option 1 -->
            <profile key="option1.directurl.param.game" value="prototype_pb"/>
            <profile key="option1.prettyurl.param.loc" value="prototype_pb"/>
            <!-- Option 2 -->
            <profile key="option2.directurl.param.game" value="prototype"/>
            <profile key="option2.directurl.param.param0" value="0"/>
            <profile key="option2.directurl.param.param1" value="1"/>
            <profile key="option2.prettyurl.param.loc" value="prototype"/>
            <profile key="option2.prettyurl.param.param0" value="0"/>
            <profile key="option2.prettyurl.param.param1" value="1"/>
            <!-- Option 3 -->
            <profile key="option3.directurl.param.game" value="prototype_pb"/>
            <profile key="option3.directurl.param.test" value="true"/>
            <profile key="option3.directurl.param.stage" value="output"/>
            <profile key="option3.prettyurl.param.loc" value="prototype_pb"/>
            <profile key="option3.prettyurl.param.test" value="true"/>
            <profile key="option3.prettyurl.param.stage" value="output"/>
            <!-- Option 4 -->
            <profile key="option4.url" value="//truechoicesolutions.com"/>
            <profile key="option4.url.addquerystringparams" value="true"/>
            <!-- Option 5 -->
            <profile key="option5.url" value="http://www.truechoicesolutions.com"/>
            <profile key="option5.url.addquerystringparams" value="true"/>
            <!-- Option 6 -->
            <profile key="option6.url" value="https://www.truechoicesolutions.com"/>
            <profile key="option6.url.addquerystringparams" value="true"/>
            <!-- Option 7 -->
            <profile key="option7.url" value="/"/>
            <!-- This key will append current application query string parameters along with any parameters specified for this option -->
            <profile key="option7.url.addquerystringparams" value="true"/>
            <profile key="option7.url.param.loc" value="prototype"/>
            <!-- Option 8 -->
            <profile key="option8.url" value="/game/game.jsp"/>
            <!-- This key will append current application query string parameters along with any parameters specified for this option -->
            <profile key="option8.url.addquerystringparams" value="true"/>
            <profile key="option8.url.param.game" value="prototype"/>
        </resource>
        <resource name="directorUid" value="director">
            <language key="title" locale="en">Please enter your Survey Access Code&lt;br&gt;&lt;i&gt;(Please note - this screen is not yet finalized)&lt;/i&gt;</language>         
            <!-- Content for label displays -->
            <language key="labeldisplay1.displayname" locale="en">&lt;img src="assets/stages/display/intro/content/image.jpg" style="display:block; margin-left:auto; margin-right:auto; width:210px; height:170px"&gt;&lt;/img&gt;&lt;br&gt;</language>
            <language key="labeldisplay2.displayname" locale="en"><![CDATA[<p><b>Where do I get my survey access code?</b></p><p class="label-display-blockquote">1. Your Restaurant Manager has your unique code.<br>2. If not, call the McDonald's help line at 1-800-555-5555.</p>]]></language>
            <language key="labeldisplay3.displayname" locale="en"><![CDATA[<p><b>Why do you need this?</b></p><p class="label-display-blockquote">Your survey access code is used for access to the survey.<br>Survey access codes are unique.<br>Survey responses are anonymous and strictly confidential.</p>]]></language>
            <!-- Text input language keys -->
            <language key="widget.displayname" locale="en">8 Digit Survey Access Code</language>
            <language key="widget.placeholder" locale="en">--</language>
            <language key="widget.errorlabel" locale="en">Your Answer Is Invalid</language>     
            <!-- Error messaging when text input is invalid -->
            <language key="error.invalidinput.title" locale="en">Invalid Survey Access Code</language>
            <language key="error.invalidinput.message" locale="en">Please verify that your 8 digit survey access code is correct and try again.</language>
            <!-- Breadcrumb and template keys -->
            <language key="breadcrumbdisplay.message" locale="en">Director</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <language key="templateurl" locale="en">director-uid.tpl.html</language>
            <!-- Director Redirect Options: Stage widget -->
            <profile key="widget" value="text-input"/>
            <!-- Director Redirect Options: List of all options -->
            <profile key="options" value="option0||option1"/>
            <!-- Director Redirect Options: Direct/Pretty URL parameters -->
            <!-- Option 0 -->
            <profile key="option0.conditionvalue" value="k"/>
            <profile key="option0.directurl.param.game" value="prototype"/>
            <profile key="option0.prettyurl.param.loc" value="prototype"/>
            <!-- Option 1 -->
            <profile key="option1.conditionvalue" value="r"/>
            <profile key="option1.directurl.param.game" value="prototype_pb"/>
            <profile key="option1.prettyurl.param.loc" value="prototype_pb"/>
            <!-- Configuration for text input -->
            <profile key="widget.type" value="alphanumeric"/>
            <profile key="widget.minlength" value="8"/>
            <profile key="widget.maxlength" value="8"/>
            <profile key="widget.encrypt" value="true"/>
            <profile key="widget.required" value="true"/>
            <profile key="widget.validationpattern" value="^[rk][0-9]{7}$" />
        </resource>
        <resource name="directorLanguage1" value="director">
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <!-- Director Redirect Options: Name displayed to user -->
            <language key="options.placeholder" locale="en">--</language>
            <language key="option0.displayname" locale="en">English</language>
            <language key="option1.displayname" locale="en">Deutsch</language>
            <language key="option2.displayname" locale="en">Français</language>
            <language key="option3.displayname" locale="en">Español</language>
            <language key="option4.displayname" locale="en">Português</language>
            <language key="option5.displayname" locale="en">Finlandês</language>
            <language key="option6.displayname" locale="en">Nederlands</language>
            <language key="option7.displayname" locale="en">Norsk</language>
            <language key="option8.displayname" locale="en">Italiano</language>
            <language key="option9.displayname" locale="en">Svenska</language>
            <!-- Change the template URL -->
            <language key="templateurl" locale="en">welcome-3.tpl.html</language>
            <!-- Director Redirect Options: List of all options -->
            <profile key="options" value="option0||option1||option2||option3||option4||option5||option6||option7||option8||option9"/>
            <!-- Director Redirect Options: Direct/Pretty URL parameters -->
            <!-- Option 0 -->
            <profile key="option0.directurl.param.game" value="prototype"/>
            <profile key="option0.prettyurl.param.loc" value="prototype"/>
            <!-- Option 1 -->
            <profile key="option1.directurl.param.game" value="prototype"/>
            <profile key="option1.directurl.param.language" value="en"/>
            <profile key="option1.prettyurl.param.language" value="en"/>
            <profile key="option1.prettyurl.param.loc" value="prototype"/>
            <!-- Option 2 -->
            <profile key="option2.directurl.param.game" value="prototype"/>
            <profile key="option2.directurl.param.language" value="en"/>
            <profile key="option2.prettyurl.param.language" value="en"/>
            <profile key="option2.prettyurl.param.loc" value="prototype"/>
            <!-- Option 3 -->
            <profile key="option3.directurl.param.game" value="prototype"/>
            <profile key="option3.directurl.param.language" value="en"/>
            <profile key="option3.prettyurl.param.language" value="en"/>
            <profile key="option3.prettyurl.param.loc" value="prototype"/>
            <!-- Option 4 -->
            <profile key="option4.directurl.param.game" value="prototype"/>
            <profile key="option4.directurl.param.language" value="en"/>
            <profile key="option4.prettyurl.param.language" value="en"/>
            <profile key="option4.prettyurl.param.loc" value="prototype"/>
            <!-- Option 5 -->
            <profile key="option5.directurl.param.game" value="prototype"/>
            <profile key="option5.directurl.param.language" value="en"/>
            <profile key="option5.prettyurl.param.language" value="en"/>
            <profile key="option5.prettyurl.param.loc" value="prototype"/>
            <!-- Option 6 -->
            <profile key="option6.directurl.param.game" value="prototype"/>
            <profile key="option6.directurl.param.language" value="en"/>
            <profile key="option6.prettyurl.param.language" value="en"/>
            <profile key="option6.prettyurl.param.loc" value="prototype"/>
            <!-- Option 7 -->
            <profile key="option7.directurl.param.game" value="prototype"/>
            <profile key="option7.directurl.param.language" value="en"/>
            <profile key="option7.prettyurl.param.language" value="en"/>
            <profile key="option7.prettyurl.param.loc" value="prototype"/>
            <!-- Option 8 -->
            <profile key="option8.directurl.param.game" value="prototype"/>
            <profile key="option8.directurl.param.language" value="en"/>
            <profile key="option8.prettyurl.param.language" value="en"/>
            <profile key="option8.prettyurl.param.loc" value="prototype"/>
            <!-- Option 9 -->
            <profile key="option9.directurl.param.game" value="prototype"/>
            <profile key="option9.directurl.param.language" value="en"/>
            <profile key="option9.prettyurl.param.language" value="en"/>
            <profile key="option9.prettyurl.param.loc" value="prototype"/>
        </resource>
        <resource name="directorLanguage2" value="director">
            <language key="breadcrumbdisplay.message" locale="en">Welcome</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-welcome</language>
            <!-- Director Redirect Options: Name displayed to user -->
            <language key="options.placeholder" locale="en">--</language>
            <language key="option0.displayname" locale="en">English</language>
            <language key="option1.displayname" locale="en">Deutsch</language>
            <language key="option2.displayname" locale="en">Français</language>
            <language key="option3.displayname" locale="en">Español</language>
            <language key="option4.displayname" locale="en">Português</language>
            <language key="option5.displayname" locale="en">Finlandês</language>
            <language key="option6.displayname" locale="en">Nederlands</language>
            <!-- Change the template URL -->
            <language key="templateurl" locale="en">welcome-4.tpl.html</language>
            <!-- Director Redirect Options: List of all options -->
            <profile key="options" value="option0||option1||option2||option3||option4||option5||option6"/>
            <!-- Director Redirect Options: Direct/Pretty URL parameters -->
            <!-- Option 0 -->
            <profile key="option0.directurl.param.game" value="prototype"/>
            <profile key="option0.prettyurl.param.loc" value="prototype"/>
            <!-- Option 1 -->
            <profile key="option1.directurl.param.game" value="prototype"/>
            <profile key="option1.directurl.param.language" value="en"/>
            <profile key="option1.prettyurl.param.language" value="en"/>
            <profile key="option1.prettyurl.param.loc" value="prototype"/>
            <!-- Option 2 -->
            <profile key="option2.directurl.param.game" value="prototype"/>
            <profile key="option2.directurl.param.language" value="en"/>
            <profile key="option2.prettyurl.param.language" value="en"/>
            <profile key="option2.prettyurl.param.loc" value="prototype"/>
            <!-- Option 3 -->
            <profile key="option3.directurl.param.game" value="prototype"/>
            <profile key="option3.directurl.param.language" value="en"/>
            <profile key="option3.prettyurl.param.language" value="en"/>
            <profile key="option3.prettyurl.param.loc" value="prototype"/>
            <!-- Option 4 -->
            <profile key="option4.directurl.param.game" value="prototype"/>
            <profile key="option4.directurl.param.language" value="en"/>
            <profile key="option4.prettyurl.param.language" value="en"/>
            <profile key="option4.prettyurl.param.loc" value="prototype"/>
            <!-- Option 5 -->
            <profile key="option5.directurl.param.game" value="prototype"/>
            <profile key="option5.directurl.param.language" value="en"/>
            <profile key="option5.prettyurl.param.language" value="en"/>
            <profile key="option5.prettyurl.param.loc" value="prototype"/>
            <!-- Option 6 -->
            <profile key="option6.directurl.param.game" value="prototype"/>
            <profile key="option6.directurl.param.language" value="en"/>
            <profile key="option6.prettyurl.param.language" value="en"/>
            <profile key="option6.prettyurl.param.loc" value="prototype"/>
        </resource>
        <resource name="redirect" value="redirect"/>
        <resource name="thankYou" value="output">
            <resource-element value="Email To Question"/>
            <resource-element value="Email From Question"/>
            <resource-element value="Email Note Question"/>
            <language key="header" locale="en">Thank you for participating!</language>
            <language key="title" locale="en">We have received your feedback.</language>
            <language key="body" locale="en">Thank you for expressing your voice by participating in the Total Rewards survey. We will analyze your feedback to help us make informed decisions as we strive to further enhance the Total Rewards program.</language>
            <language key="breadcrumbdisplay.message" locale="en">Thank You</language>
            <language key="breadcrumbdisplay.cssclass" locale="en">breadcrumb-output</language>
            <language key="button1.label" locale="en">Redirect</language>
            <language key="button1.url" locale="en">https://example.com/</language>
            <language key="button1.urltarget" locale="en">_self</language>
            <language key="button2.label" locale="en">Yahoo</language>
            <language key="button2.url" locale="en">http://www.yahoo.com</language>
            <language key="button3.label" locale="en">Email a friend</language>
            <language key="button3.url" locale="en">emailafriend</language>
            <language key="socialbutton1.label" locale="en">Facebook</language>
            <language key="socialbutton1.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="socialbutton2.label" locale="en">Twitter</language>
            <language key="socialbutton2.url" locale="en">http://www.truechoicesolutions.com</language>
            <language key="footer" locale="en">You can close your browser to complete this study.</language>
            <language key="preferenceprofile.title" locale="en">Your Preference Profile</language>
            <language key="preferenceprofile.preferencekey" locale="en">Your Preferences</language>
            <language key="preferenceprofile.peerkey" locale="en">Your Peers</language>
            <!-- URL For Auto Redirect Feature -->
            <!-- See profile key "redirect.auto.enabled" to turn on -->
            <language key="redirect.auto.url" locale="en">https://example.com/</language>
            <!-- Email Popup -->
            <language key="emailpopup.send" locale="en">SUBMIT</language>
            <language key="emailpopup.close" locale="en">Close</language>
            <language key="emailpopup.title" locale="en">Email results</language>
            <language key="emailpopup.error.invalidtoemail" locale="en">Please enter a valid TO Email address.</language>
            <language key="emailpopup.error.invalidfromemail" locale="en">Please enter a valid FROM Email address.</language>
            <language key="emailpopup.error.invalidallemails" locale="en">Please enter valid TO/FROM Email addresses.</language>
            <!-- Product templates, cfm, and styles -->
            <language key="templateurl" locale="en">thank-you.tpl.html</language>
            <profile key="showpreferenceprofile" value="true"/>
            <profile key="emailquestions" value="emailto||emailfrom||emailnote"/>
            <profile key="isproductbased" value="false"/>
            <profile key="persistjsondata" value="false"/>
            <!-- Auto Redirect Feature -->
            <profile key="redirect.auto.enabled" value="true" />
            <profile key="redirect.auto.url.addqueryparams" value="true" />
            <profile key="redirect.auto.delaytime" value="5000" />
        </resource>
        <!-- GDPR Consent Resources -->
        <resource name="Consent Title Label" type="Alias" value="Consent Title"/>
        <resource name="Consent Label One" type="Alias" value="Consent One Label"/>
        <resource name="Consent One Question" type="Alias" value="Consent One"/>
        <resource name="Consent Label Two" type="Alias" value="Consent Two Label"/>
        <resource name="Consent Two Question" type="Alias" value="Consent Two"/>
        <resource name="Consent Contact Info One Label" type="Alias" value="Consent Contact Info One"/>
        <resource name="Consent Contact Info Two Label" type="Alias" value="Consent Contact Info Two"/>
        <!-- Survey 1 Resources -->
        <resource name="Potential market size Question" type="Alias" value="Potential market size">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product competition Question" type="Alias" value="Product competition">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Target customer Question" type="Alias" value="Target customer">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product coolness Question" type="Alias" value="Product coolness">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product durability Question" type="Alias" value="Product durability">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product markup Question" type="Alias" value="Product markup">
            <profile key="type" value="radiobutton"/>
        </resource>
        <!-- notRequiredRadioGroups Resources -->
        <resource name="Potential market size not required Question" type="Alias" value="Potential market size not required">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product competition not required Question" type="Alias" value="Product competition not required">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Target customer not required Question" type="Alias" value="Target customer not required">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product coolness not required Question" type="Alias" value="Product coolness not required">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product durability not required Question" type="Alias" value="Product durability not required">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Product markup not required Question" type="Alias" value="Product markup not required">
            <profile key="type" value="radiobutton"/>
        </resource>
        <resource name="Not Required Email Question" type="Alias" value="Not Required Email"/>
        <resource name="Not Required User UID Question" type="Alias" value="Not Required User UID"/>
        <resource name="About Yourself Question" type="Alias" value="About Yourself"/>
        <resource name="Favorite Hobby Question" type="Alias" value="Favorite Hobby"/>
        <!-- requiredDemographicQuestions resources -->
        <resource name="First Name Question" type="Alias" value="First Name"/>
        <resource name="Last Name Question" type="Alias" value="Last Name"/>
        <resource name="State Province Question" type="Alias" value="State Province"/>
        <resource name="Email Question" type="Alias" value="Email"/>
        <resource name="Date of Birth Question" type="Alias" value="Date of Birth"/>
        <resource name="What is the likelihood that you will answer all of these questions? Question" type="Alias" value="What is the likelihood that you will answer all of these questions?"/>
        <resource name="Favorite Month Question" type="Alias" value="Favorite Month"/>
        <resource name="Contact Me Question" type="Alias" value="Contact Me"/>
        <resource name="How much energy do you use per year Question" type="Alias" value="How much energy do you use per year"/>
        <resource name="User UID Question" type="Alias" value="User UID"/>
        <resource name="Comments Question" type="Alias" value="Comments"/>
        <!-- notRequiredDemographicQuestions resources -->
        <resource name="What is your favorite movie Question" type="Alias" value="What is your favorite movie"/>
        <resource name="Favorite Number Question" type="Alias" value="Favorite Number"/>
        <resource name="What is your age Question" type="Alias" value="What is your age"/>
        <resource name="What is the likelihood that you finish Question" type="Alias" value="What is the likelihood that you finish"/>
        <resource name="Favorite Day Question" type="Alias" value="Favorite Day"/>
        <!-- percentAllocationPage resources -->
        <resource name="Answer Widget 1 Question" type="Alias" value="Answer Widget 1">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Answer Widget 2 Question" type="Alias" value="Answer Widget 2">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Answer Widget 3 Question" type="Alias" value="Answer Widget 3">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Answer Widget 4 Question" type="Alias" value="Answer Widget 4">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Answer Widget 5 Question" type="Alias" value="Answer Widget 5">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Answer Widget 6 Question" type="Alias" value="Answer Widget 6">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Answer Widget 7 Question" type="Alias" value="Answer Widget 7">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Answer Widget 8 Question" type="Alias" value="Answer Widget 8">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Percent Widget Total Question" type="Alias" value="Percent Widget Total">
            <profile key="type" value="text"/>
        </resource>
        <!-- Output Questions -->
        <resource name="Email To Question" type="Alias" value="emailto">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Email From Question" type="Alias" value="emailfrom">
            <profile key="type" value="text"/>
        </resource>
        <resource name="Email Note Question" type="Alias" value="emailnote">
            <profile key="type" value="text"/>
        </resource>
        <naming name="e2e_functional_tests" by-owner="false"/>
        <!-- GDPR Consent profile keys -->
        <profile-key key="Consent Title" required="false">
            <language key="displayname" locale="en"><![CDATA[<span style="font-size:20px;"><b>User Transparency</b></span>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent One Label" required="false">
            <language key="displayname" locale="en"><![CDATA[<b>TrueChoice Solutions, Inc. is a data analytics company that will collect your product and service preferences data. This will help BrandCo develop future product and service strategies that benefit your business.</b>]]></language>
            <language key="tooltip" locale="en">Tooltip in label-display</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent One" required="true">
            <language key="displayname" locale="en">Do you consent to this?</language>
            <language key="tooltip" locale="en">Tooltip from checkbox widget</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="optin" value="I consent">
                <language key="displayname" locale="en">I consent</language>
                <language key="error.requiredinput.label" locale="en">Must consent to proceed</language>
            </profile-value>
        </profile-key>
        <profile-key key="Consent Two Label" required="false">
            <language key="displayname" locale="en"><![CDATA[<b>TrueChoice Solutions, Inc. will share your data with BrandCo for the duration of this 2 month project. We will collect product and service preferences and customer satisfaction information. We will analyze the data in the United States.<b>]]></language>
            <language key="tooltip" locale="en">Tooltip in label-display</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent Two" required="true">
            <language key="displayname" locale="en">Do you consent to this?</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="optin" value="I consent">
                <language key="displayname" locale="en">I consent</language>
                <language key="error.requiredinput.label" locale="en">Must consent to proceed</language>
            </profile-value>
        </profile-key>
        <profile-key key="Consent Contact Info One" required="false">
            <language key="displayname" locale="en"><![CDATA[<p>To learn more about how TrueChoice Solutions, Inc. will manage your data and about your data privacy rights, click or tap <a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>here</i></a>.</p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <profile-key key="Consent Contact Info Two" required="false">
            <language key="displayname" locale="en"><![CDATA[<p>BrandCo will control the data collected from you by TrueChoice Solutions, Inc. BrandCo's contact information is:</p><p class="label-display-blockquote">Phone: +1 (212) 555-0300 ext. 4545<br/>E-mail: privacy@email.com<br/><a href="http://www.truechoicesolutions.com/Privacy-Policy" rel="noopener noreferrer" to target="_blank"><i>www.BrandCo.com</i></a></p>]]></language>
            <profile key="type" value="text"/>
            <profile key="widget" value="label-display"/>
        </profile-key>
        <!-- Survey 1 Radio Group 7 Header profile keys -->
        <profile-key key="Potential market size" required="true">
            <language key="displayname" locale="en">The potential market size for my product is huge!</language>
            <profile key="column" value="center"/>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product competition" required="true">
            <language key="displayname" locale="en">There is no competition out there for my product.</language>
            <profile key="column" value="center"/>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Target customer" required="true">
            <language key="displayname" locale="en">I am targeting customers who are totally "up on it" and have money to burn!</language>
            <profile key="column" value="center"/>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product coolness" required="true">
            <language key="displayname" locale="en">My product is totally cool, unique, and trendy and everyone will NEED to own it.</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile key="column" value="center"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product durability" required="true">
            <language key="displayname" locale="en">Durability is a key factor of my product and it won't drop even if you drop it!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile key="column" value="center"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product markup" required="true">
            <language key="displayname" locale="en">My product has a high markup so I can make a lot of money fast!</language>
            <profile key="column" value="center"/>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <!-- notRequiredRadioGroups Header profile keys -->
        <profile-key key="Potential market size not required" required="false">
            <language key="displayname" locale="en">The potential market size for my product is huge!</language>
            <language key="note" locale="en">&lt;em&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent eget risus vitae massa semper aliquam quis mattis quam.&lt;/em&gt;</language>
            <profile key="column" value="center"/>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product competition not required" required="false">
            <language key="displayname" locale="en">There is no competition out there for my product.</language>
            <profile key="column" value="center"/>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Target customer not required" required="false">
            <language key="displayname" locale="en">I am targeting customers who are totally "up on it" and have money to burn!</language>
            <profile key="column" value="center"/>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product coolness not required" required="false">
            <language key="displayname" locale="en">My product is totally cool, unique, and trendy and everyone will NEED to own it.</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile key="column" value="center"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product durability not required" required="false">
            <language key="displayname" locale="en">Durability is a key factor of my product and it won't drop even if you drop it!</language>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile key="column" value="center"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Product markup not required" required="false">
            <language key="displayname" locale="en">My product has a high markup so I can make a lot of money fast!</language>
            <profile key="column" value="center"/>
            <profile key="showoptiontext" type="String" value="true"/>
            <profile-value key="Strongly Disagree" value="Strongly Disagree">
                <language key="displayname" locale="en">Strongly Disagree</language>
                <language key="tooltip" locale="en">You strongly disagree with this statement</language>
            </profile-value>
            <profile-value key="Disagree" value="Disagree">
                <language key="displayname" locale="en">Disagree</language>
                <language key="tooltip" locale="en">You disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Disagree" value="Slightly Disagree">
                <language key="displayname" locale="en">Slightly Disagree</language>
                <language key="tooltip" locale="en">You slightly disagree with this statement</language>
            </profile-value>
            <profile-value key="Slightly Agree" value="Slightly Agree">
                <language key="displayname" locale="en">Slightly Agree</language>
                <language key="tooltip" locale="en">You slightly agree with this statement</language>
            </profile-value>
            <profile-value key="Agree" value="Agree">
                <language key="displayname" locale="en">Agree</language>
                <language key="tooltip" locale="en">You agree with this statement</language>
            </profile-value>
            <profile-value key="Strongly Agree" value="Strongly Agree">
                <language key="displayname" locale="en">Strongly Agree</language>
                <language key="tooltip" locale="en">You strongly agree with this statement</language>
            </profile-value>
            <profile-value key="Do NOT Care" value="Do NOT Care">
                <language key="displayname" locale="en">Do NOT Care</language>
                <language key="tooltip" locale="en">You do not care about this statement</language>
            </profile-value>
        </profile-key>
        <profile-key key="Not Required User UID" required="false">
            <language key="displayname" locale="en">Enter UID:</language>
            <language key="tooltip" locale="en">Enter the UID you were assigned before starting this</language>
            <profile key="type" value="alphanumeric"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Not Required Email" required="false">
            <language key="displayname" locale="en">Email address you use most often</language>
            <language key="tooltip" locale="en">Email address you use most often</language>
            <language key="error.requiredinput.label" locale="en">Answer must be a valid email</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
            <profile key="inputtype" value="email"/>
        </profile-key>
        <!-- requiredDemographicQuestions Profile Keys -->
        <profile-key key="First Name" required="true">
            <language key="displayname" locale="en">Your first name (minimum of three characters)</language>
            <language key="placeholder" locale="en">--</language>
            <language key="tooltip" locale="en">Your first name</language>
            <language key="error.requiredinput.label" locale="en">Can not leave blank</language>
            <language key="error.minlength.title" locale="en">Error: Minimum Length</language>
            <language key="error.minlength.message" locale="en">Your favorite movie requires at least 3 characters.</language>
            <language key="note" locale="en">&lt;em&gt;Please provide your legal first name.&lt;/em&gt;</language>
            <profile key="type" value="text"/>
            <profile key="maxlength" value="8"/>
            <profile key="minlength" value="3"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Last Name" required="true">
            <language key="displayname" locale="en">Please enter your unique 8 digit ID.</language>
            <language key="placeholder" locale="en">--</language>
            <language key="tooltip" locale="en">Please enter your unique 8 digit ID</language>
            <language key="note" locale="en">&lt;em&gt;Please ensure that your ID is the one provided.&lt;/em&gt;</language>
            <profile key="type" value="number"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="State Province" required="true">
            <language key="displayname" locale="en">Please enter the State/Province that you live in:</language>
            <language key="tooltip" locale="en">Please enter the State/Province that you live in:</language>
            <language key="note" locale="en">&lt;em&gt;Please be accurate.&lt;/em&gt;</language>
            <language key="placeholder" locale="en">--</language>
            <profile key="type" value="dropbox"/>
            <profile key="widget" value="drop-down"/>
            <profile-value key="AL" value="AL">
                <language key="displayname" locale="en">Alabama</language>
            </profile-value>
            <profile-value key="AK" value="AK">
                <language key="displayname" locale="en">Alaska</language>
            </profile-value>
            <profile-value key="AZ" value="AZ">
                <language key="displayname" locale="en">Arizona</language>
            </profile-value>
            <profile-value key="AR" value="AR">
                <language key="displayname" locale="en">Arkansas</language>
            </profile-value>
            <profile-value key="British Columbia" value="British Columbia">
                <language key="displayname" locale="en">British Columbia</language>
            </profile-value>
            <profile-value key="CA" value="CA">
                <language key="displayname" locale="en">California</language>
            </profile-value>
            <profile-value key="CO" value="CO">
                <language key="displayname" locale="en">Colorado</language>
            </profile-value>
            <profile-value key="CT" value="CT">
                <language key="displayname" locale="en">Connecticut</language>
            </profile-value>
            <profile-value key="DE" value="DE">
                <language key="displayname" locale="en">Delaware</language>
            </profile-value>
            <profile-value key="DC" value="DC">
                <language key="displayname" locale="en">District of Columbia     </language>
            </profile-value>
            <profile-value key="FL" value="FL">
                <language key="displayname" locale="en">Florida</language>
            </profile-value>
            <profile-value key="GA" value="GA">
                <language key="displayname" locale="en">Georgia</language>
            </profile-value>
            <profile-value key="HI" value="HI">
                <language key="displayname" locale="en">Hawaii</language>
            </profile-value>
            <profile-value key="ID" value="ID">
                <language key="displayname" locale="en">Idaho</language>
            </profile-value>
            <profile-value key="IL" value="IL">
                <language key="displayname" locale="en">Illinois</language>
            </profile-value>
            <profile-value key="IN" value="IN">
                <language key="displayname" locale="en">Indiana</language>
            </profile-value>
            <profile-value key="IA" value="IA">
                <language key="displayname" locale="en">Iowa</language>
            </profile-value>
            <profile-value key="KS" value="KS">
                <language key="displayname" locale="en">Kansas</language>
            </profile-value>
            <profile-value key="KY" value="KY">
                <language key="displayname" locale="en">Kentucky</language>
            </profile-value>
            <profile-value key="LA" value="LA">
                <language key="displayname" locale="en">Louisiana</language>
            </profile-value>
            <profile-value key="ME" value="ME">
                <language key="displayname" locale="en">Maine</language>
            </profile-value>
            <profile-value key="MD" value="MD">
                <language key="displayname" locale="en">Maryland</language>
            </profile-value>
            <profile-value key="MA" value="MA">
                <language key="displayname" locale="en">Massachusetts</language>
            </profile-value>
            <profile-value key="MI" value="MI">
                <language key="displayname" locale="en">Michigan</language>
            </profile-value>
            <profile-value key="MN" value="MN">
                <language key="displayname" locale="en">Minnesota</language>
            </profile-value>
            <profile-value key="MS" value="MS">
                <language key="displayname" locale="en">Mississippi</language>
            </profile-value>
            <profile-value key="MO" value="MO">
                <language key="displayname" locale="en">Missouri</language>
            </profile-value>
            <profile-value key="MT" value="MT">
                <language key="displayname" locale="en">Montana</language>
            </profile-value>
            <profile-value key="NE" value="NE">
                <language key="displayname" locale="en">Nebraska</language>
            </profile-value>
            <profile-value key="NV" value="NV">
                <language key="displayname" locale="en">Nevada</language>
            </profile-value>
            <profile-value key="NH" value="NH">
                <language key="displayname" locale="en">New Hampshire</language>
            </profile-value>
            <profile-value key="NJ" value="NJ">
                <language key="displayname" locale="en">New Jersey</language>
            </profile-value>
            <profile-value key="NM" value="NM">
                <language key="displayname" locale="en">New Mexico</language>
            </profile-value>
            <profile-value key="NY" value="NY">
                <language key="displayname" locale="en">New York</language>
            </profile-value>
            <profile-value key="Newfoundland" value="Newfoundland">
                <language key="displayname" locale="en">Newfoundland</language>
            </profile-value>
            <profile-value key="NC" value="NC">
                <language key="displayname" locale="en">North Carolina</language>
            </profile-value>
            <profile-value key="ND" value="ND">
                <language key="displayname" locale="en">North Dakota</language>
            </profile-value>
            <profile-value key="Northwest Territories" value="Northwest Territories">
                <language key="displayname" locale="en">Northwest Territories</language>
            </profile-value>
            <profile-value key="Nova Scotia" value="Nova Scotia">
                <language key="displayname" locale="en">Nova Scotia</language>
            </profile-value>
            <profile-value key="Nunavut" value="Nunavut">
                <language key="displayname" locale="en">Nunavut</language>
            </profile-value>
            <profile-value key="OH" value="OH">
                <language key="displayname" locale="en">Ohio</language>
            </profile-value>
            <profile-value key="OK" value="OK">
                <language key="displayname" locale="en">Oklahoma</language>
            </profile-value>
            <profile-value key="Ontario" value="Ontario">
                <language key="displayname" locale="en">Ontario</language>
            </profile-value>
            <profile-value key="OR" value="OR">
                <language key="displayname" locale="en">Oregon</language>
            </profile-value>
            <profile-value key="PA" value="PA">
                <language key="displayname" locale="en">Pennsylvania</language>
            </profile-value>
            <profile-value key="Prince Edward Island" value="Prince Edward Island">
                <language key="displayname" locale="en">Prince Edward Island</language>
            </profile-value>
            <profile-value key="Quebec" value="Quebec">
                <language key="displayname" locale="en">Quebec</language>
            </profile-value>
            <profile-value key="RI" value="RI">
                <language key="displayname" locale="en">Rhode Island</language>
            </profile-value>
            <profile-value key="Saskatchewan" value="Saskatchewan">
                <language key="displayname" locale="en">Saskatchewan</language>
            </profile-value>
            <profile-value key="SC" value="SC">
                <language key="displayname" locale="en">South Carolina</language>
            </profile-value>
            <profile-value key="SD" value="SD">
                <language key="displayname" locale="en">South Dakota</language>
            </profile-value>
            <profile-value key="TN" value="TN">
                <language key="displayname" locale="en">Tennessee</language>
            </profile-value>
            <profile-value key="TX" value="TX">
                <language key="displayname" locale="en">Texas</language>
            </profile-value>
            <profile-value key="UT" value="UT">
                <language key="displayname" locale="en">Utah</language>
            </profile-value>
            <profile-value key="VT" value="VT">
                <language key="displayname" locale="en">Vermont</language>
            </profile-value>
            <profile-value key="VA" value="VA">
                <language key="displayname" locale="en">Virginia</language>
            </profile-value>
            <profile-value key="WA" value="WA">
                <language key="displayname" locale="en">Washington</language>
            </profile-value>
            <profile-value key="WV" value="WV">
                <language key="displayname" locale="en">West Virginia</language>
            </profile-value>
            <profile-value key="WI" value="WI">
                <language key="displayname" locale="en">Wisconsin</language>
            </profile-value>
            <profile-value key="WY" value="WY">
                <language key="displayname" locale="en">Wyoming</language>
            </profile-value>
            <profile-value key="Yukon" value="Yukon">
                <language key="displayname" locale="en">Yukon</language>
            </profile-value>
        </profile-key>
        <profile-key key="Email" required="true">
            <language key="displayname" locale="en">The email address you use most often</language>
            <language key="tooltip" locale="en">The email address you use most often</language>
            <language key="error.requiredinput.label" locale="en">Answer must be a valid email</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Date of Birth" required="true">
            <language key="displayname" locale="en">What is your birthday</language>
            <language key="placeholder" locale="en">--/--/----</language>
            <language key="tooltip" locale="en">What is your birthday</language>
            <language key="error.requiredinput.label" locale="en">Can not leave blank</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
        </profile-key>
        <profile-key key="Contact Me" required="true">
            <language key="displayname" locale="en">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us.</language>
            <language key="tooltip" locale="en">Please select, "No, do not contact me" if you would rather not receive occasional e-mail communication from us here at TCS.  Please refer to our web site at www.truechoicesolutions.com concerning the additional questions or comments you might have for us. If you would like to be contacted please select "Yes, please contact me via email that I have previously provided for you".</language>
            <profile key="type" value="radio"/>
            <profile key="widget" value="radio-button"/>
            <profile-value key="Yes" value="Yes, contact me">
                <language key="displayname" locale="en">Yes, please contact me through the email that I have provided</language>
            </profile-value>
            <profile-value key="No" value="No, do not contact me">
                <language key="displayname" locale="en">No, do not contact me, I do not want to recieve emails.</language>
            </profile-value>
        </profile-key>
        <profile-key key="Favorite Month" required="true">
            <language key="displayname" locale="en">What is your favorite month?  I'm betting it's the month you were born in!</language>
            <language key="tooltip" locale="en">What is your favorite month?  I'm betting it's the month you were born in!</language>
            <language key="note" locale="en">Pick the month that best represents you.</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="January" value="January">
                <language key="displayname" locale="en">January - Ambitious and serious</language>
                <language key="tooltip" locale="en">1st month of the year</language>
            </profile-value>
            <profile-value key="February" value="February">
                <language key="displayname" locale="en">February - Abstract thoughts</language>
            </profile-value>
            <profile-value key="March" value="March">
                <language key="displayname" locale="en">March - Attractive personality</language>
            </profile-value>
            <profile-value key="April" value="April">
                <language key="displayname" locale="en">April - Active and dynamic</language>
            </profile-value>
            <profile-value key="May" value="May">
                <language key="displayname" locale="en">May - Stubborn and hard-hearted</language>
            </profile-value>
            <profile-value key="June" value="June">
                <language key="displayname" locale="en">June - Thinks far with vision</language>
            </profile-value>
            <profile-value key="July" value="July">
                <language key="displayname" locale="en">July - Fun to be with</language>
            </profile-value>
            <profile-value key="August" value="August">
                <language key="displayname" locale="en">August - Loves to joke</language>
            </profile-value>
            <profile-value key="September" value="September">
                <language key="displayname" locale="en">September - Suave and compromising</language>
            </profile-value>
            <profile-value key="October" value="October">
                <language key="displayname" locale="en">October - Loves to chat</language>
            </profile-value>
            <profile-value key="November" value="November">
                <language key="displayname" locale="en">November - Have a lot of ideas</language>
            </profile-value>
            <profile-value key="December" value="December">
                <language key="displayname" locale="en">December - Loyal and generous</language>
            </profile-value>
        </profile-key>
        <profile-key key="What is the likelihood that you will answer all of these questions?" required="true">
            <language key="displayname" locale="en">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <language key="tooltip" locale="en">On a scale of 0-10, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 10 = Absolutely)</language>
            <language key="note" locale="en">Please be accurate</language>
            <language key="error.requiredinput.label" locale="en">Must change answer</language>
            <profile key="type" value="rating"/>
            <profile key="widget" value="rating-scale"/>
            <profile-value key="N/A" value="N/A">
                <language key="displayname" locale="en">N/A</language>
            </profile-value>
            <profile-value key="1" value="1">
                <language key="displayname" locale="en">1</language>
            </profile-value>
            <profile-value key="2" value="2">
                <language key="displayname" locale="en">2</language>
            </profile-value>
            <profile-value key="3" value="3">
                <language key="displayname" locale="en">3</language>
            </profile-value>
            <profile-value key="4" value="4">
                <language key="displayname" locale="en">4</language>
            </profile-value>
            <profile-value key="5" value="5">
                <language key="displayname" locale="en">5</language>
            </profile-value>
            <profile-value key="6" value="6">
                <language key="displayname" locale="en">6</language>
            </profile-value>
            <profile-value key="7" value="7">
                <language key="displayname" locale="en">7</language>
            </profile-value>
            <profile-value key="8" value="8">
                <language key="displayname" locale="en">8</language>
            </profile-value>
            <profile-value key="9" value="9">
                <language key="displayname" locale="en">9</language>
            </profile-value>
            <profile-value key="10" value="10">
                <language key="displayname" locale="en">10</language>
            </profile-value>
        </profile-key>
        <profile-key key="How much energy do you use per year" required="true">
            <language key="displayname" locale="en">How much energy do you use per year:</language>
            <language key="error.requiredinput.label" locale="en">Must change answer</language>
            <language key="usehashmarks" locale="en">false</language>
            <profile key="widget" value="rating-scale"/>
            <profile key="type" value="rating"/>
            <profile-value key="0" value="0 kWh">
                <language key="displayname" locale="en">0 kWh</language>
            </profile-value>
            <profile-value key="100" value="100 kWh">
                <language key="displayname" locale="en">100 kWh</language>
            </profile-value>
            <profile-value key="200" value="200 kWh">
                <language key="displayname" locale="en">200 kWh</language>
            </profile-value>
            <profile-value key="300" value="300 kWh">
                <language key="displayname" locale="en">300 kWh</language>
            </profile-value>
            <profile-value key="400" value="400 kWh">
                <language key="displayname" locale="en">400 kWh</language>
            </profile-value>
        </profile-key>
        <profile-key key="User UID" required="true">
            <language key="displayname" locale="en">User UID (8 characters)</language>
            <language key="tooltip" locale="en">Please enter your UID (8 characters)</language>
            <profile key="type" value="alphanumeric"/>
            <profile key="widget" value="text-input"/>
            <profile key="maxlength" value="8"/>
            <profile key="minlength" value="8"/>
        </profile-key>
        <profile-key key="Comments" required="true">
            <language key="displayname" locale="en">Comments</language>
            <language key="tooltip" locale="en">Provide any additional comments</language>
            <profile key="widget" value="text-area"/>
        </profile-key>
        <!-- notRequiredDemographicQuestions Profile Keys -->
        <profile-key key="What is your favorite movie" required="false">
            <language key="displayname" locale="en">Your favorite movie (max 8 characters and min 3 characters)</language>
            <language key="placeholder" locale="en">ex. None</language>
            <language key="error.minlength.title" locale="en">Error: Minimum Length</language>
            <language key="error.minlength.message" locale="en">Your favorite movie requires at least 3 characters.</language>
            <profile key="type" value="text"/>
            <profile key="widget" value="text-input"/>
            <profile key="maxlength" value="8"/>
            <profile key="minlength" value="3"/>
        </profile-key>
        <profile-key key="Favorite Number" required="false">
            <language key="displayname" locale="en">Your favorite number</language>
            <language key="tooltip" locale="en">Your favorite number</language>
            <profile key="type" value="number"/>
            <profile key="widget" value="text-input"/>
            <profile key="maxlength" value="8"/>
            <profile key="minlength" value="3"/>
        </profile-key>
        <profile-key key="About Yourself" required="false">
            <language key="displayname" locale="en">Tell us about yourself</language>
            <language key="tooltip" locale="en">What kind of a profession are you in, etc.</language>
            <profile key="widget" value="text-area"/>
        </profile-key>
        <profile-key key="Favorite Hobby" required="false">
            <language key="displayname" locale="en">Tell us about your favorite hobby (Max 100 Characters)</language>
            <language key="tooltip" locale="en">What do you like to do on your off time?</language>
            <profile key="widget" value="text-area"/>
            <profile key="type" value="text"/>
            <profile key="maxlength" value="100"/>
        </profile-key>
        <profile-key key="What is your age" required="false">
            <language key="displayname" locale="en">Please choose your age range:</language>
            <profile key="type" value="dropbox"/>
            <profile key="widget" value="drop-down"/>
            <profile-value key="20-29" value="20-29">
                <language key="displayname" locale="en">20-29</language>
            </profile-value>
            <profile-value key="30-39" value="30-39">
                <language key="displayname" locale="en">30-39</language>
            </profile-value>
            <profile-value key="40-49" value="40-49">
                <language key="displayname" locale="en">40-49</language>
            </profile-value>
            <profile-value key="50 or older" value="50 or older">
                <language key="displayname" locale="en">50 or older</language>
            </profile-value>
        </profile-key>
        <profile-key key="What is the likelihood that you finish" required="false">
            <language key="displayname" locale="en">On a scale of 0-3, what is the likelihood that you will answer all of these questions? (0 = Not At All Likely; 3 = Absolutely)</language>
            <profile key="type" value="rating"/>
            <profile key="widget" value="rating-scale"/>
            <profile-value key="0" value="0">
                <language key="displayname" locale="en">0</language>
            </profile-value>
            <profile-value key="1" value="1">
                <language key="displayname" locale="en">1</language>
            </profile-value>
            <profile-value key="2" value="2">
                <language key="displayname" locale="en">2</language>
            </profile-value>
            <profile-value key="3" value="3">
                <language key="displayname" locale="en">3</language>
            </profile-value>
        </profile-key>
        <profile-key key="Favorite Day" required="false">
            <language key="displayname" locale="en">What is your favorite day?  I'm betting it's the weekend!</language>
            <profile key="type" value="checkbox"/>
            <profile key="widget" value="checkbox"/>
            <profile-value key="Monday" value="Monday">
                <language key="displayname" locale="en">Monday</language>
            </profile-value>
            <profile-value key="Tuesday" value="Tuesday">
                <language key="displayname" locale="en">Tuesday</language>
            </profile-value>
            <profile-value key="Wednesday" value="Wednesday">
                <language key="displayname" locale="en">Wednesday</language>
            </profile-value>
            <profile-value key="Thursday" value="Thursday">
                <language key="displayname" locale="en">Thursday</language>
            </profile-value>
            <profile-value key="Friday" value="Friday">
                <language key="displayname" locale="en">Friday</language>
            </profile-value>
            <profile-value key="Saturday" value="Saturday">
                <language key="displayname" locale="en">Saturday</language>
            </profile-value>
            <profile-value key="Sunday" value="Sunday">
                <language key="displayname" locale="en">Sunday</language>
            </profile-value>
        </profile-key>
        <profile-key key="Answer Widget 1" required="false">
            <language key="displayname" locale="en">Answer Widget Number 1 by moving the slider in the right direction </language>
            <language key="tooltip" locale="en">Answer Widget - 1</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Answer Widget 2" required="false">
            <language key="displayname" locale="en">Answer Widget Number 2 by moving the slider</language>
            <language key="tooltip" locale="en">Answer Widget - 2</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Answer Widget 3" required="false">
            <language key="displayname" locale="en">Answer Widget - 3</language>
            <language key="tooltip" locale="en">Answer Widget - 3</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Answer Widget 4" required="false">
            <language key="displayname" locale="en">Answer Widget - 4</language>
            <language key="tooltip" locale="en">Answer Widget - 4</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Answer Widget 5" required="false">
            <language key="displayname" locale="en">Answer Widget - 5</language>
            <language key="tooltip" locale="en">Answer Widget - 5</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Answer Widget 6" required="false">
            <language key="displayname" locale="en">Answer Widget - 6</language>
            <language key="tooltip" locale="en">Answer Widget - 6</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Answer Widget 7" required="false">
            <language key="displayname" locale="en">Answer Widget - 7</language>
            <language key="tooltip" locale="en">Answer Widget - 7</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Answer Widget 8" required="false">
            <language key="displayname" locale="en">Answer Widget - 8 with no tooltip</language>
            <profile key="widget" value="horizontal-scale-long"/>
        </profile-key>
        <profile-key key="Percent Widget Total" required="false">
            <profile key="hidden" value="true"/>
        </profile-key>
        <!-- Output Questions profile keys -->
        <profile-key key="emailto" required="true">
            <language key="displayname" locale="en">To: (email address)</language>
            <language key="placeholder" locale="en">Example: john@example.com</language>
            <language key="error" locale="en">'TO' email address is not valid.</language>
            <profile key="widget" value="text-input"/>
            <profile key="inputtype" value="email"/>
        </profile-key>
        <profile-key key="emailfrom" required="true">
            <language key="displayname" locale="en">From: (email address)</language>
            <language key="placeholder" locale="en">Example: jane@example.com</language>
            <language key="error" locale="en">'FROM' email address is not valid.</language>
            <profile key="widget" value="text-input"/>
            <profile key="inputtype" value="email"/>
        </profile-key>
        <profile-key key="emailnote" required="false">
            <language key="displayname" locale="en">Note: (optional)</language>
            <language key="placeholder" locale="en">Please check out this great product!</language>
            <profile key="widget" value="text-area"/>
            <profile key="inputtype" value="text"/>
        </profile-key>
        <profile-key key="messagedata" required="false">
            <profile key="type" value="text"/>
            <profile key="hidden" value="true"/>
        </profile-key>
        <profile-key key="uid" required="false">
            <naming name="e2e_functional_testsUid"/>
        </profile-key>
    </game>
</client>
',
          app_pb_products:
            '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE client SYSTEM "object.dtd">
<client name="e2e_prototype_pb">
	<product name="1" competitor="false">
		<product-attribute name="basepay" type="number" value="0"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="triangle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Three Triangles</language>
		<language key="producttagline" locale="en">&lt;b&gt;Collaboratively Administrate Empowered Markets Via Plug-and-Play Networks&lt;/b&gt;</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/threetriangles.jpg</language>
		<language key="productsubtitle" locale="en">Podcasting operational change management inside of workflows to establish a framework.</language>
		<language key="productdescription" locale="en">Taking seamless key performance indicators offline to maximise the long tail. Keeping your eye on the ball while performing a deep dive on the start-up mentality to derive convergence on cross-platform integration.</language>
		<language key="productspecifications" locale="en">Dynamically procrastinate B2C users after installed base benefits.||Dramatically visualize customer directed convergence without revolutionary ROI.||Efficiently unleash cross-media information without cross-media value.||Quickly maximize timely deliverables for real-time schemas. Dramatically maintain clicks-and-mort.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>
		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="2" competitor="false">
		<product-attribute name="basepay" type="number" value="0"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="square"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Overlapping Striped Squares</language>
		<language key="producttagline" locale="en">Capitalise on low hanging fruit to identify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/overlappingstripedsquares.jpg</language>
		<language key="productsubtitle" locale="en">Leverage agile frameworks to provide a robust synopsis for high level overviews..</language>
		<language key="productdescription" locale="en">Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment</language>
		<language key="productfeatures" locale="en">&lt;b&gt;&lt;i&gt;Bring To The Table Win-Win Survival Strategies.&lt;/i&gt;&lt;/b&gt; &lt;br&gt; At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="3" competitor="false">
		<product-attribute name="basepay" type="number" value="3"/>
		<product-attribute name="color" type="string" value="yellow"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="triangle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Triangle With Circle</language>
		<language key="producttagline" locale="en">Collaboratively administrate turnkey channels whereas virtual e-tailers.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/trianglewithcircle.jpg</language>
		<language key="productsubtitle" locale="en">Interactively coordinate proactive e-commerce via process-centric "outside the box" thinking. Completely pursue scalable customer service through sustainable potentialities.</language>
		<language key="productdescription" locale="en">Phosfluorescently engage worldwide methodologies with web-enabled technology.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="4" competitor="false">
		<product-attribute name="basepay" type="number" value="0"/>
		<product-attribute name="color" type="string" value="maroon"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="circle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Cutout Cone</language>
		<language key="producttagline" locale="en">Proactively envisioned multimedia based expertise and cross-media growth strategies. Seamlessly visualize quality intellectual capital without superior collaboration and idea-sharing.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/cutoutcone.jpg</language>
		<language key="productsubtitle" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="productdescription" locale="en">At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.&lt;br&gt;
			&lt;i&gt;Objectively innovate empowered manufactured products whereas parallel platforms.&lt;/i&gt;</language>
		<language key="productfeatures" locale="en">Holisticly predominate extensible testing procedures for reliable supply chains. Dramatically engage top-line web services vis-a-vis cutting-edge deliverables.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="5" competitor="false">
		<product-attribute name="basepay" type="number" value="1.5"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="square"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Hexagon With Lines</language>
		<language key="producttagline" locale="en"><![CDATA[<ol><li>Quickly coordinate e-business applications through revolutionary catalysts for change.</li><li>Seamlessly underwhelm optimal testing procedures whereas bricks-and-clicks processes.</li></ol>]]></language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/hexagonwithlines.jpg</language>
		<language key="productsubtitle" locale="en">Credibly reintermediate backend ideas for cross-platform models. Continually reintermediate integrated processes through technically sound intellectual capital. Holistically foster superior Amethodologies without market-driven best practices.</language>
		<language key="productdescription" locale="en">Distinctively exploit optimal alignments for intuitive bandwidth.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="6" competitor="false">
		<product-attribute name="basepay" type="number" value="0"/>
		<product-attribute name="color" type="string" value="orange"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="circle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Seven Circles</language>
		<language key="producttagline" locale="en">Globally incubate standards compliant channels before scalable benefits.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/sevencircles.jpg</language>
		<language key="productsubtitle" locale="en">Quickly disseminate superior deliverables whereas web-enabled applications. Quickly drive clicks-and-mortar catalysts for change before vertical architectures.</language>
		<language key="productdescription" locale="en">&lt;i&gt;Interactively procrastinate high-payoff content without backward-compatible data. Quickly cultivate optimal processes and tactical architectures.&lt;/i&gt;</language>
		<language key="productspecifications" locale="en">Dynamically procrastinate B2C users after installed base benefits.||Dramatically visualize customer directed convergence without revolutionary ROI.||Efficiently unleash cross-media information without cross-media value.||Quickly maximize timely deliverables for real-time schemas. Dramatically maintain clicks-and-mort.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="7" competitor="false">
		<product-attribute name="basepay" type="number" value="0"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="circle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Circle With Lines</language>
		<language key="producttagline" locale="en">&lt;b&gt;Collaboratively Administrate Empowered Markets Via Plug-and-Play Networks&lt;/b&gt;</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/circlewithlines.jpg</language>
		<language key="productsubtitle" locale="en">Quickly aggregate B2B users and worldwide potentialities.||Progressively plagiarize resource-leveling e-commerce through resource-leveling core competencies.</language>
		<language key="productdescription" locale="en">Distinctively re-engineer revolutionary meta-services and premium architectures. Intrinsically incubate intuitive opportunities and real-time potentialities. Appropriately communicate one-to-one technology after plug-and-play networks.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="8" competitor="false">
		<product-attribute name="basepay" type="number" value="3"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="rectangles"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Mountains</language>
		<language key="producttagline" locale="en">&lt;b&gt;Collaboratively Administrate Empowered Markets Via Plug-and-Play Networks&lt;/b&gt;</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/mountains.jpg</language>
		<language key="productsubtitle" locale="en">Completely synergize scalable e-commerce rather than high standards in e-services. Assertively iterate resource maximizing products after leading-edge intellectual capital.</language>
		<language key="productdescription" locale="en">Dynamically target high-payoff intellectual capital for customized technologies. Objectively integrate emerging core competencies before process-centric communities. Dramatically evisculate holistic innovation rather than client-centric data. &lt;b&gt;Progressively maintain extensive infomediaries via extensible niches.&lt;/b&gt;</language>
		<language key="productfeatures" locale="en">Dramatically disseminate standardized metrics after resource-leveling processes. Objectively pursue diverse catalysts for change for interoperable meta-services. &lt;b&gt;Proactively fabricate one-to-one materials via effective e-business.&lt;/b&gt;</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="9" competitor="false">
		<product-attribute name="basepay" type="number" value="3"/>
		<product-attribute name="color" type="string" value="maroon"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="circle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Overlapping Circles</language>
		<language key="producttagline" locale="en">&lt;i&gt;Efficiently enable enabled sources and cost effective products. Completely synthesize principle-centered information after ethical communities.&lt;/i&gt;</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/overlappingcircles.jpg</language>
		<language key="productsubtitle" locale="en">Compellingly embrace empowered e-business after user friendly intellectual capital. Interactively actualize front-end processes with effective convergence. Synergistically deliver performance based methods of empowerment whereas distributed expertise.</language>
		<language key="productdescription" locale="en">Efficiently innovate open-source infrastructures via inexpensive materials. Objectively integrate enterprise-wide strategic theme areas with functionalized infrastructures. Interactively productize premium technologies whereas interdependent quality vectors. Rapaciously utilize enterprise experiences via 24/7 markets.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="10" competitor="false">
		<product-attribute name="basepay" type="number" value="2"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="15"/>
		<product-attribute name="shape" type="string" value="circle"/>
		<product-attribute name="intuition" type="string" value="doctorate"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Full And Outlined Circles</language>
		<language key="producttagline" locale="en">&lt;u&gt;Appropriately implement visionary e-services vis-a-vis strategic web-readiness.&lt;/u&gt;</language>
		<language key="productimage" locale="en">assets/stages/output/products/fullandoutlinedcircles.jpg</language>
		<language key="productsubtitle" locale="en">Empower dynamic leadership skills after business portals. Globally myocardinate interactive supply chains with distinctive quality vectors. Globally revolutionize global sources through interoperable services.</language>
		<language key="productdescription" locale="en">Enthusiastically mesh long-term high-impact infrastructures vis-a-vis efficient customer
			service.</language>
		<language key="productfeatures" locale="en">Professionally fashion wireless leadership rather than prospective experiences. Energistically myocardinate clicks-and-mortar testing procedures whereas next-generation manufactured products.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="11" competitor="false">
		<product-attribute name="basepay" type="number" value="3"/>
		<product-attribute name="color" type="string" value="gray"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="15"/>
		<product-attribute name="shape" type="string" value="square"/>
		<product-attribute name="intuition" type="string" value="high school"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="150"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Interlocking Diamond</language>
		<language key="producttagline" locale="en">&lt;b&gt;Phosfluorescently expedite impactful supply chains via focused results.&lt;/b&gt; &lt;u&gt;Compellingly supply just in time catalysts for change through top-line potentialities.&lt;/u&gt;</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/interlockingdiamond.jpg</language>
		<language key="productsubtitle" locale="en">Rapaciously seize adaptive infomediaries and user-centric intellectual capital. Collaboratively unleash market-driven "outside the box" thinking for long-term high-impact solutions. Enthusiastically engage fully tested process improvements before top-line platforms.</language>
		<language key="productdescription" locale="en">Efficiently myocardinate market-driven innovation via open-source alignments. Dramatically engage high-payoff infomediaries rather than client-centric imperatives. Efficiently initiate world-class applications after client-centric infomediaries.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="12" competitor="false">
		<product-attribute name="basepay" type="number" value=".5"/>
		<product-attribute name="color" type="string" value="orange"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="triangle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Triangle With Line</language>
		<language key="producttagline" locale="en">Enthusiastically leverage existing premium quality vectors with enterprise-wide innovation. Proactively leverage other resource-leveling convergence rather than inter-mandated networks.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/trianglewithline.jpg</language>
		<language key="productsubtitle" locale="en">Uniquely matrix economically sound value through cooperative technology. &lt;b&gt;Competently parallel task fully researched data and enterprise process improvements.&lt;/b&gt; Collaboratively expedite quality manufactured products via client-focused results.</language>
		<language key="productdescription" locale="en">Quickly communicate enabled technology and turnkey leadership skills.</language>
		<language key="productfeatures" locale="en">Uniquely enable accurate supply chains rather than frictionless technology. Globally network focused materials vis-a-vis cost effective manufactured products.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="13" competitor="false">
		<product-attribute name="basepay" type="number" value="2"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="10"/>
		<product-attribute name="shape" type="string" value="triangle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Two Triangles</language>
		<language key="producttagline" locale="en">At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/twotriangles.jpg</language>
		<language key="productsubtitle" locale="en">&lt;i&gt;Globally harness multimedia based collaboration and idea-sharing with backend products. Continually whiteboard superior opportunities via covalent scenarios.&lt;/i&gt;</language>
		<language key="productdescription" locale="en">Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.&lt;br&gt; &lt;u&gt;Bring to the table win-win survival strategies to ensure proactive domination.&lt;/u&gt;</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="14" competitor="false">
		<product-attribute name="basepay" type="number" value="0"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="rectangle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Square With Diamond</language>
		<language key="producttagline" locale="en">&lt;b&gt;Collaboratively Administrate Empowered Markets Via Plug-and-Play Networks&lt;/b&gt;</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/squarewithdiamond.jpg</language>
		<language key="productsubtitle" locale="en">1. Quickly incentivize impactful action items before tactical collaboration and idea-sharing.&lt;br&gt; 2. Monotonically engage market-driven intellectual capital through wireless opportunities.&lt;br&gt; 3. Progressively network performance based services for functionalized testing procedures.</language>
		<language key="productdescription" locale="en">Uniquely deploy cross-unit benefits with wireless testing procedures.</language>
		<language key="productspecifications" locale="en">Collaboratively build backward-compatible relationships whereas tactical paradigms.||Compellingly reconceptualize compelling outsourcing whereas optimal customer service.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="15" competitor="false">
		<product-attribute name="basepay" type="number" value="0"/>
		<product-attribute name="color" type="string" value="orange"/>
		<product-attribute name="size" type="string" value="large"/>
		<product-attribute name="weight" type="string" value="15"/>
		<product-attribute name="shape" type="string" value="square"/>
		<product-attribute name="intuition" type="string" value="grade school"/>
		<product-attribute name="delivery" type="string" value="next day"/>
		<product-attribute name="price" type="number" value="200"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Lines In Square</language>
		<language key="producttagline" locale="en">Completely synergize resource taxing relationships via premier niche markets. Professionally cultivate one-to-one customer service with robust ideas. Dynamically innovate resource-leveling customer service.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/linesinsquare.jpg</language>
		<language key="productdescription" locale="en">Collaboratively administrate empowered markets via plug-and-play networks. Dynamically procrastinate B2C users after installed base benefits. Dramatically visualize customer directed convergence without revolutionary ROI.</language>
		<language key="productspecifications" locale="en">Efficiently unleash cross-media information without cross-media value.||Quickly maximize timely deliverables for real-time schemas.||Dramatically maintain clicks-and-mortar solutions without functional solutions.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="16" competitor="false">
		<product-attribute name="basepay" type="number" value="0"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="small"/>
		<product-attribute name="weight" type="string" value="15"/>
		<product-attribute name="shape" type="string" value="circle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Crescent Moons</language>
		<language key="producttagline" locale="en">Taking seamless key performance indicators offline to maximise the long tail. &lt;u&gt;Keeping your eye on the ball while performing a deep dive on the start-up mentality to derive convergence on cross-platform integration.&lt;/u&gt;</language>
		<language key="productimage" locale="en">assets/stages/output/products/crescentmoons.jpg</language>
		<language key="productsubtitle" locale="en">Capitalise on low hanging fruit to identify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line.</language>
		<language key="productdescription" locale="en">Podcasting operational change management inside of workflows to establish a framework.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="17" competitor="false">
		<product-attribute name="basepay" type="number" value="3"/>
		<product-attribute name="color" type="string" value="blue"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="square"/>
		<product-attribute name="intuition" type="string" value="doctorate"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Braided Hexagon</language>
		<language key="producttagline" locale="en">Interactively procrastinate high-payoff content without backward-compatible data. Quickly cultivate optimal processes and tactical architectures. Completely iterate covalent strategic theme areas via accurate e-markets.</language>
		<language key="productimage" locale="en">assets/stages/output/products/braidedhexagon.jpg</language>
		<language key="productdescription" locale="en">Collaboratively administrate turnkey channels whereas virtual e-tailers. Objectively seize scalable metrics whereas proactive e-services. Seamlessly empower fully researched growth strategies and interoperable internal or "organic" sources.&lt;br&gt;&lt;i&gt;Credibly innovate granular internal or "organic" sources whereas high standards in web-readiness.&lt;/i&gt;&lt;br&gt;Energistically scale future-proof core competencies vis-a-vis impactful experiences. Dramatically synthesize integrated schemas with optimal networks.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="18" competitor="false">
		<product-attribute name="basepay" type="number" value=".5"/>
		<product-attribute name="color" type="string" value="black"/>
		<product-attribute name="size" type="string" value="medium"/>
		<product-attribute name="weight" type="string" value="0"/>
		<product-attribute name="shape" type="string" value="circle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="25"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Half Circles</language>
		<language key="producttagline" locale="en">Interactively coordinate proactive e-commerce via process-centric "outside the box" thinking. Completely pursue scalable customer service through sustainable potentialities.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/halfcircles.jpg</language>
		<language key="productdescription" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="productspecifications" locale="en">Dramatically visualize customer directed convergence without revolutionary ROI.||Dynamically procrastinate B2C users after installed base benefits.||Efficiently unleash cross-media information without cross-media value.</language>
		<language key="productfeatures" locale="en">Objectively innovate empowered manufactured products whereas parallel platforms. Holisticly predominate extensible testing procedures for reliable supply chains. Dramatically engage top-line web services vis-a-vis cutting-edge deliverables.&lt;br&gt;&lt;br&gt;Proactively envisioned multimedia based expertise and cross-media growth strategies. Seamlessly visualize quality intellectual capital without superior collaboration and idea-sharing. Holistically pontificate installed base portals after maintainable products.&lt;br&gt;&lt;br&gt;Dynamically target high-payoff intellectual capital for customized technologies.&lt;br&gt;&lt;br&gt;&lt;b&gt;Phosfluorescently engage worldwide methodologies with web-enabled technology.&lt;/b&gt;</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="19" competitor="false">
		<product-attribute name="basepay" type="number" value="3"/>
		<product-attribute name="color" type="string" value="purple"/>
		<product-attribute name="size" type="string" value="xlarge"/>
		<product-attribute name="weight" type="string" value="10"/>
		<product-attribute name="shape" type="string" value="square"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="125"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Lines In Cube</language>
		<language key="producttagline" locale="en">Objectively integrate emerging core competencies before process-centric communities. Dramatically evisculate holistic innovation rather than client-centric data.</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/linesincube.jpg</language>
		<language key="productdescription" locale="en">Distinctively exploit optimal alignments for intuitive bandwidth. Quickly coordinate e-business applications through revolutionary catalysts for change. Seamlessly underwhelm optimal testing procedures whereas bricks-and-clicks processes.&lt;br&gt;Synergistically evolve 2.0 technologies rather than just in time initiatives. Quickly deploy strategic networks with compelling e-business. Credibly pontificate highly efficient manufactured products and enabled data.&lt;br&gt;&lt;b&gt;Dynamically target high-payoff intellectual capital for customized technologies.&lt;/b&gt;</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
	<product name="20" competitor="false">
		<product-attribute name="basepay" type="number" value="3"/>
		<product-attribute name="color" type="string" value="green"/>
		<product-attribute name="size" type="string" value="small"/>
		<product-attribute name="weight" type="string" value="15"/>
		<product-attribute name="shape" type="string" value="circle"/>
		<product-attribute name="intuition" type="string" value="college"/>
		<product-attribute name="delivery" type="string" value="same day"/>
		<product-attribute name="price" type="number" value="200"/>
		<product-attribute name="fuel consumption" type="number" value="25"/>
		<product-attribute name="power vs efficiency" type="number" value="2"/>
		<product-attribute name="Hidden Price" type="price" value="0"/>
		<language key="productname" locale="en">Circles In A Circle</language>
		<language key="producttagline" locale="en">&lt;u&gt;Credibly reintermediate backend ideas for cross-platform models.&lt;/u&gt;</language>
		<language key="productprice" locale="en">From $99.99</language>
		<language key="productimage" locale="en">assets/stages/output/products/circlesinacircle.jpg</language>
		<language key="productdescription" locale="en">Globally incubate standards compliant channels before scalable benefits. Quickly disseminate superior deliverables whereas web-enabled applications. Quickly drive clicks-and-mortar catalysts for change before vertical architectures.</language>
		<language key="productfeatures" locale="en">Bring to the table win-win survival strategies to ensure proactive domination.</language>
		<language key="upselltitle" locale="en">Of related interest....</language>
		<language key="upsellname" locale="en">Product name lorem ipsum dolor sit</language>
		<language key="upselltagline" locale="en">Tagline aenean metus dui placerat</language>
		<language key="upsellprice" locale="en">$99.99</language>
		<language key="upsellimage" locale="en">assets/stages/output/products/upsellimage.jpg</language>
		<language key="upselldescription" locale="en">Lorem ipsum dolor sit amet, consectetur adipiscing elit, Aliquam vel interdum nibh, egestas faucibus nils. Morbi eget metus ac metus ultrices aliquam vitae sed arcu In pretium tinicidunt consequat.</language>
		<language key="button1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button2" locale="en">http://www.yahoo.com</language>
		<language key="button3" locale="en">http://www.google.com</language>
		<language key="button4" locale="en">emailafriend</language>
		<language key="button5" locale="en">http://www.ign.com</language>
		<language key="button6" locale="en">http://www.truechoicesolutions.com</language>
		<language key="button7" locale="en">http://www.espn.com/</language>
		<language key="button8" locale="en">restart</language>
		<language key="link1" locale="en">http://www.truechoicesolutions.com</language>
		<language key="link2" locale="en">http://www.yahoo.com</language>
		<language key="link3" locale="en">http://www.google.com</language>
		<language key="socialbutton1" locale="en">https://www.facebook.com/sharer/sharer.php?u=http://www.espn.com/</language>

		<language key="socialbutton2" locale="en">https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.espn.com%2F</language>
		<language key="messages" locale="en">basepay||Base Pay||You want to spend no money at all and like things best that are free!||assets/icons/noindicator/price_med.png||color||Color||&lt;a href="http://www.google.com" target="_blank"&gt;Purple&lt;/a&gt;||assets/icons/noindicator/color_purple.png||size||Size||Extra large.||assets/icons/noindicator/size_xlarge.png||weight||Weight||Light as air!||assets/icons/noindicator/weight_0.png||shape||Shape||Circle||assets/icons/noindicator/shape_circle.png||intuition||Intuition||College||assets/icons/noindicator/intuition_college.png||delivery||Delivery||Same-day delivery for time-sensitive stuff is really important to you!||assets/icons/noindicator/delivery.png||price||Price||You are willing to spend up to &#36;25 per month.||assets/icons/noindicator/price_med.png||fuel consumption||Fuel consumption||50 MPG||assets/icons/noindicator/price_med.png||power vs efficiency||Power vs Efficiency||Medium Power||assets/icons/noindicator/price_med.png</language>
	</product>
</client>
'
        }
      };

      return await request(app.getHttpServer())
        .post('/xml-loader/batchxml')
        .set('Accept', 'application/json')
        .send(batch)
        .expect(201)
        .expect('Success');
    });
  });

  describe('upLoadXmlFile (e2e)', () => {
    it('/xml-loader/upload (POST) (FILE)', async () => {
      const filePath = `${__dirname}/upload-test-file.xml`;
      return await request(app.getHttpServer())
        .post('/xml-loader/upload/dev/true')
        .set('Accept', 'application/json')
        .attach('xmlFile', filePath)
        .expect(201);
    });
  });

  afterAll(async (done) => {
    fs.readdir('./tmp/', async (err, files) => {
      if (err) {
        return console.log('Unable to scan directory: ' + err);
      }
      let xmls = [];
      files.forEach(function(file) {
        if (file.includes('e2e_')) {
          xmls.push({ 'XML loading test files (e2e)': file });
          fs.unlink(path.posix.resolve(`./tmp/${file}`), (err) => {});
        }
      });
      console.table(xmls, ['XML loading test files (e2e)']);
    });
    await new Promise((resolve) => setTimeout(() => resolve(), 500)); // avoid jest open handle error
    await app.close();
    done();
  });
});
